{"version":3,"file":"mod.js","mappings":";;;;;;;;;;;;;eAAqB,UAAUA,CAAV,EAAUA;AAC3B,QAAIC,CAAAA,GAASD,CAAAA,CAAQC,MAArB;AACA,QAAIA,CAAAA,CAAOC,MAAPD,CAAcE,OAAdF,CAAsB,SAAtBA,IAAsB,CAAc,CAAxC,EACI,OAAOA,CAAP;AACJ,QAAID,CAAAA,CAAQI,KAARJ,CAAcK,OAAdL,KAA0BA,CAAAA,CAAQM,OAAtC,EACI,OAAOL,CAAP;;AACJ,YAAQD,CAAAA,CAAQI,KAARJ,CAAcO,IAAtB;AACI,WAAK,SAAL;AACIN,QAAAA,CAAAA,CAAOO,QAAPP,CAAgB,QAAhBA;AACA;;AACJ,WAAK,OAAL;AACIA,QAAAA,CAAAA,CAAOQ,UAAPR,CAAkB,QAAlBA;AALR;;AAQA,WAAOA,CAAP;AAAOA,KAAAA,CAAAA,CAAAA,KAAAA,GCdO,UAAUD,CAAV,EAAUA;AACxB,QAAIC,CAAAA,GAASD,CAAAA,CAAQC,MAArB;AACA,QAAIA,CAAAA,CAAOC,MAAPD,CAAcE,OAAdF,CAAsB,SAAtBA,IAAsB,CAAc,CAAxC,EACI,OAAOA,CAAP;;AACJ,YAAQD,CAAAA,CAAQI,KAARJ,CAAcO,IAAtB;AACI,WAAK,YAAL;AACIN,QAAAA,CAAAA,CAAOO,QAAPP,CAAgB,OAAhBA;AACA;;AACJ,WAAK,YAAL;AACIA,QAAAA,CAAAA,CAAOQ,UAAPR,CAAkB,OAAlBA;AACA;;AACJ,WAAK,WAAL;AACIA,QAAAA,CAAAA,CAAOO,QAAPP,CAAgB,QAAhBA;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,CAAAA,CAAOQ,UAAPR,CAAkB,QAAlBA;AAXR;;AAcA,WAAOA,CAAP;AAAOA,KAAAA,MAAAA,CAAAA,cAAAA,CAAAA,CAAAA,EAAAA,YAAAA,EAAAA;AAAAA,IAAAA,KAAAA,EAAAA,CAAAA;AAAAA,GAAAA;AAAAA;;;;;;;;;;;;;;;MClBPS,CAAAA,GAAwB;AACxB,aAASA,CAAT,CAAgBC,CAAhB,EAAuBT,CAAvB,EAAuBA;AAAAA,WACL,CADKA,KACfS,CADeT,KACKS,CAAAA,GAAQ,EADbT,GACa,KACjB,CADiB,KAC5BA,CAD4B,KACPA,CAAAA,GAAS,CAAC,SAAD,CADF,CADbA,EAGnBU,KAAKD,KAALC,GAAaD,CAHMT,EAInBU,KAAKV,MAALU,GAAcV,CAJKA;AAoCvB;;AAAA,WA9BAQ,CAAAA,CAAOG,SAAPH,CAAiBI,QAAjBJ,GAA4B,UAAUK,CAAV,EAAUA;AAElC,aADAH,KAAKD,KAALC,GAAaG,CAAbH,EACOA,IAAP;AAAOA,KAFXF,EAIAA,CAAAA,CAAOG,SAAPH,CAAiBM,SAAjBN,GAA6B,UAAUO,CAAV,EAAUA;AAEnC,aADAL,KAAKV,MAALU,GAAcK,CAAdL,EACOA,IAAP;AAAOA,KANXF,EAQAA,CAAAA,CAAOG,SAAPH,CAAiBF,QAAjBE,GAA4B,UAAUQ,CAAV,EAAUA;AAClC,UAAIC,CAAAA,GAAQP,IAAZ;AAUA,aATIA,KAAKD,KAALC,IAAcA,KAAKD,KAALC,CAAWM,CAAXN,CAAdA,IAAyBM,CAAgD,CAAhDA,KAAaN,KAAKV,MAALU,CAAYT,OAAZS,CAAoBM,CAApBN,CAAtCA,KACIA,KAAKD,KAALC,CAAWM,CAAXN,EAAqBQ,OAArBR,GACAA,KAAKV,MAALU,CAAYS,IAAZT,CAAiBM,CAAjBN,CADAA,IAIAA,KAAKV,MAALU,GAAcA,KAAKV,MAALU,CAAYU,MAAZV,CAAmB,UAAUW,CAAV,EAAUA;AAAS,eAAqC,KAA9BJ,CAAAA,CAAMR,KAANQ,CAAYI,CAAZJ,EAAmBC,OAA1B;AAA0BA,OAAhER,CAAdA,EACAA,KAAKV,MAALU,CAAYY,OAAZZ,CAAoBM,CAApBN,CALAA,CADJA,GASGA,IAAP;AAAOA,KAnBXF,EAqBAA,CAAAA,CAAOG,SAAPH,CAAiBD,UAAjBC,GAA8B,UAAUe,CAAV,EAAUA;AAOpC,aANIb,KAAKD,KAALC,IAAcA,KAAKD,KAALC,CAAWa,CAAXb,CAAdA,IAA0CA,KAAKV,MAALU,CAAYT,OAAZS,CAAoBa,CAApBb,IAAoBa,CAAiB,CAA/Eb,KACAA,KAAKV,MAALU,GAAcA,KAAKV,MAALU,CAAYU,MAAZV,CAAmB,UAAUc,CAAV,EAAUA;AAAQ,eAAOA,CAAAA,KAASD,CAAhB;AAAgBA,OAArDb,CAAdA,EAAmEa,CAC1B,CAD0BA,KAC/Db,KAAKD,KAALC,CAAWa,CAAXb,EAAyBQ,OADsCK,IAE/Db,KAAKV,MAALU,CAAYY,OAAZZ,CAAoB,SAApBA,CAHJA,GAMGA,IAAP;AAAOA,KA5BXF,EA8BOA,CAAP;AAAOA,GArCiB;;AAqCjBA,EAAAA,CAAAA,CAAAA,MAAAA,GAAAA,CAAAA,EAAAA,MAAAA,CAAAA,cAAAA,CAAAA,CAAAA,EAAAA,YAAAA,EAAAA;AAAAA,IAAAA,KAAAA,EAAAA,CAAAA;AAAAA,GAAAA,CAAAA;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+HJ,WAASiB,CAAT,CAAuBC,CAAvB,EAA2BC,CAA3B,EAAiCC,CAAjC,EAAiCA;AACpC,QAAIA,CAAAA,IAA6B,MAArBC,SAAAA,CAAUC,MAAtB,EAAoC,KAAK,IAA4BG,CAA5B,EAAIF,CAAAA,GAAI,CAAR,EAAWC,CAAAA,GAAIL,CAAAA,CAAKG,MAAzB,EAAqCC,CAAAA,GAAIC,CAAzC,EAA4CD,CAAAA,EAA5C,EAA4CA,CACxEE,CADwEF,IAChEA,CAAAA,IAAKJ,CAD2DI,KAEnEE,CAAAA,KAAIA,CAAAA,GAAKC,KAAAA,CAAMvB,SAANuB,CAAgBC,KAAhBD,CAAsBE,IAAtBF,CAA2BP,CAA3BO,EAAiC,CAAjCA,EAAoCH,CAApCG,CAATD,CAAAA,EACLA,CAAAA,CAAGF,CAAHE,CAAAA,GAAQN,CAAAA,CAAKI,CAALJ,CAHgEI;AAMhF,WAAOL,CAAAA,CAAGW,MAAHX,CAAUO,CAAAA,IAAMC,KAAAA,CAAMvB,SAANuB,CAAgBC,KAAhBD,CAAsBE,IAAtBF,CAA2BP,CAA3BO,CAAhBR,CAAP;AAAkDC;;AAAAA,EAAAA,CAAAA,CAAAA,GAAAA,GC1KvC,UAAU5B,CAAV,EAAUA;AACrB,WAAO0B,CAAAA,CAAc,CAAC,MAAD,CAAdA,EAAwB1B,CAAAA,CAAOC,MAA/ByB,EAA+BzB,CAAQ,CAAvCyB,CAAAA,CAA6Ca,GAA7Cb,CAAiD,UAAUJ,CAAV,EAAUA;AAAS,UAAIkB,CAAJ;AAAQ,cAAuC,UAA9BA,CAAAA,GAAKxC,CAAAA,CAAOU,KAAPV,CAAasB,CAAbtB,CAAyB,KAAZsB,KAA2B,CAA3BA,KAAoBkB,CAAR,GAAQA,KAAgB,CAAxB,GAAiCA,CAAAA,CAAGC,OAA3E,KAAuF,EAAvF;AAAuF,KAAnKf,EAA0KgB,IAA1KhB,CAA+K,GAA/KA,CAAP;AAAsL,GDyKpIE,ECzKoI,gBCD3K,UAAU5B,CAAV,EAAUA;AACrB,QAAI2C,CAAAA,GAAK,EAAT;AAAA,QACIF,CAAAA,GAAU,EADd;AAGAf,IAAAA,CAAAA,CAAc,CAAC,MAAD,CAAdA,EAAwB1B,CAAAA,CAAOC,MAA/ByB,EAA+BzB,CAAQ,CAAvCyB,CAAAA,CAA6CkB,OAA7ClB,CAAqD,UAAUJ,CAAV,EAAUA;AAC3D,UAAIkB,CAAJ;AAAA,UACIK,CAAAA,GAAAA,CAAoC,UAA9BL,CAAAA,GAAKxC,CAAAA,CAAOU,KAAPV,CAAasB,CAAbtB,CAAyB,KAAZsB,KAA2B,CAA3BA,KAAoBkB,CAAR,GAAQA,KAAgB,CAAxB,GAAiCA,CAAAA,CAAGC,OAAxEI,KAAoF,EADxF;AAAA,UAEIZ,CAAAA,GAAI,EAFR;AAGAY,MAAAA,CAAAA,CAAEC,KAAFD,CAAQ,IAARA,EAAcD,OAAdC,CAAsB,UAAUE,CAAV,EAAUA;AAC5B,YACIG,CAAAA,GADqBH,CAAAA,CAAUD,KAAVC,CAAgB,GAAhBA,EAAqBC,GAArBD,GAA2BD,KAA3BC,CAAiC,OAAjCA,EAA0CE,KAA1CF,GACKD,KADLC,CACW,GADXA,CAAzB;AAAA,YAEII,CAAAA,GAAMD,CAAAA,CAAK,CAALA,CAFV;AAGIA,QAAAA,CAAAA,CAAK,CAALA,CAAAA,IAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,MAArB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,MAA7C,EAAqD,SAArD,EAAgE,QAAhE,EAA0EhD,OAA1E,CAAkFgD,CAAAA,CAAK,CAALA,CAAlF,IAAuF,CAAO,CAAzGA,KACAC,CAAAA,IAAO,MAAMD,CAAAA,CAAK,CAALA,CADbA,GAGJjB,CAAAA,CAAEkB,CAAFlB,CAAAA,GAASA,CAAAA,CAAEkB,CAAFlB,CAAAA,IAAU,EAHfiB,EAIJjB,CAAAA,CAAEkB,CAAFlB,CAAAA,CAAOb,IAAPa,CAAYc,CAAZd,CAJIiB;AAIQH,OARhBF,GAUAF,CAAAA,CAAGvB,IAAHuB,CAAQV,CAARU,CAVAE;AAUQZ,KAdZP;AAgBA,QAAI0B,CAAAA,GAASC,MAAAA,CAAOC,MAAPD,CAAcE,KAAdF,CAAoBA,MAApBA,EAA4B3B,CAAAA,CAAc,CAAC,EAAD,CAAdA,EAAoBiB,CAApBjB,EAAoBiB,CAAI,CAAxBjB,CAA5B2B,CAAb;AAIA,WAHAA,MAAAA,CAAOG,IAAPH,CAAYD,CAAZC,EAAoBT,OAApBS,CAA4B,UAAUF,CAAV,EAAUA;AAClCV,MAAAA,CAAAA,CAAQrB,IAARqB,CAAaW,CAAAA,CAAOD,CAAPC,CAAAA,CAAYV,IAAZU,CAAiB,GAAjBA,CAAbX;AAA8B,KADlCY,GAGOZ,CAAAA,CAAQC,IAARD,CAAa,GAAbA,CAAP;AAAoB,GFkJ8Bb,EElJ9B;AAAA;AAAA,IFkJ8BA;AElJ9B;;;;;;;;;;;;;;;;;;;;;ACfxB;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA,GADA;AAKA;AACA;AACA;AACA,KAHA;;AAIA;AACA;AACA;;AANA,GALA;AAcA;AACA;AADA,GAdA;;AAkBA;AACA;AACA,yBADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA;AAIA,gBAJA;AAKA;AALA;AAOA,GA1BA;;AA4BA;AACA;AACA;AACA,GA/BA;;AAiCA;AACA;AAEA;AACA;AACA,GAtCA;;AAwCA;AACA;AACA,oBACA,QADA,EAEA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA,KAHA;AAKA,GA/CA;;AAiDA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;;AArDA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA,4BADA;AAEA;AAFA;AAIA;;AANA;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA,IAAI6B,eAAe,GAAGC,iHAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,YAA5B,EAA0C;AACvD,MAAIC,IAAI,GAAGC,oBAAoB,CAACJ,MAAD,CAA/B;;AACA,OAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,IAAI,CAACjC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,QAAI8B,QAAJ,EAAc;AACV,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BE,QAAAA,IAAI,CAAChC,CAAD,CAAJ,CAAQ8B,QAAR,GAAmBA,QAAnB;AACH,OAFD,MAGK,IAAIA,QAAQ,YAAY3B,KAAxB,EAA+B;AAChC6B,QAAAA,IAAI,CAAChC,CAAD,CAAJ,CAAQkC,KAAR,GAAgBJ,QAAhB;AACH,OAFI,MAGA;AACDE,QAAAA,IAAI,CAAChC,CAAD,CAAJ,CAAQmC,KAAR,GAAgBL,QAAhB;AACH;AACJ;;AACD,QAAIC,YAAY,CAAChC,MAAjB,EAAyB;AACrBqC,MAAAA,wBAAwB,CAACJ,IAAI,CAAChC,CAAD,CAAL,EAAU+B,YAAV,CAAxB;AACH;AACJ;;AAED,SAAO,OAAOF,MAAP,KAAkB,QAAlB,GAA6BJ,eAAe,CAACI,MAAD,CAA5C,GAAuDA,MAA9D;AACH,CApBD;;AAsBA,SAASO,wBAAT,CAAkCC,KAAlC,EAAyCN,YAAzC,EAAuD;AACnD,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,YAAY,CAAChC,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;AAC1CuC,IAAAA,YAAY,CAACD,KAAD,EAAQP,YAAY,CAAC/B,CAAD,CAApB,CAAZ;AACH;;AACD,MAAIwC,QAAQ,GAAGH,KAAK,CAACI,QAArB;AACAJ,EAAAA,KAAK,CAACI,QAAN,GAAiBD,QAAQ,GACnB,YAAY;AACV,WAAOD,YAAY,CAAC,EAAD,EAAKC,QAAQ,CAACnC,IAAT,CAAc,IAAd,CAAL,EAA0B;AAACqC,MAAAA,MAAM,EAAEJ;AAAT,KAA1B,CAAnB;AACH,GAHoB,GAInB,YAAY;AACV,WAAO;AAACI,MAAAA,MAAM,EAAEJ;AAAT,KAAP;AACH,GANL;AAOH;;AAED,SAASL,oBAAT,CAA8BU,IAA9B,EAAoC;AAChC;AACA;AACA,MAAIX,IAAI,GAAG,CAACW,IAAD,CAAX,CAHgC,CAIhC;;AACA,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC5BX,IAAAA,IAAI,CAAC5C,IAAL,CAAUuD,IAAI,CAAC/D,SAAf;;AACA,QAAI+D,IAAI,CAAC/D,SAAL,CAAegE,WAAnB,EAAgC;AAC5BZ,MAAAA,IAAI,CAAC5C,IAAL,CAAUuD,IAAI,CAAC/D,SAAL,CAAegE,WAAf,CAA2BhE,SAArC;AACH;AACJ;;AACD,SAAOoD,IAAP;AACH,EAED;;;AACA,SAASO,YAAT,CAAsBM,MAAtB,EAA8B;AAC1B;;AACA,MAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKC,SAAlC,EAA6C;AACzC,UAAM,IAAIC,SAAJ,CAAc,4CAAd,CAAN;AACH;;AAED,MAAIpD,EAAE,GAAG0B,MAAM,CAACwB,MAAD,CAAf;;AAEA,OAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGlD,SAAS,CAACC,MAAtC,EAA8CiD,KAAK,EAAnD,EAAuD;AACnD,QAAIC,UAAU,GAAGnD,SAAS,CAACkD,KAAD,CAA1B;;AAEA,QAAIC,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAKH,SAA1C,EAAqD;AACjD,WAAK,IAAII,OAAT,IAAoBD,UAApB,EAAgC;AAC5B,YAAI5B,MAAM,CAACzC,SAAP,CAAiBuE,cAAjB,CAAgC9C,IAAhC,CAAqC4C,UAArC,EAAiDC,OAAjD,CAAJ,EAA+D;AAC3DvD,UAAAA,EAAE,CAACuD,OAAD,CAAF,GAAcD,UAAU,CAACC,OAAD,CAAxB;AACH;AACJ;AACJ;AACJ;;AACD,SAAOvD,EAAP;AACH;;;;;;;;;;AC9FD,IAAIyD,KAAJ,EAA2C,EAA3C,MAEO;AACHzB,EAAAA,6HAAA;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,gBAEA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AACA,sBAEA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAEA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAEA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA,KAHA;AAKA;AACA,IAEA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,sCAFA,CAGA;;AACA;AACA;AACA,8DAFA,CAGA;AACA;AAEA;;;AACA;AACA;;AACA;AACA;AACA,KAFA,CAbA,CAgBA;AACA,IAEA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA,wDAFA,CAGA;AACA,KAJA,MAKA;AACA;AACA,KAVA,CAWA;;AACA,IAEA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA,2DAFA,CAGA;AACA,KAJA,MAKA;AACA;AACA,KAVA,CAWA;;AACA,IAEA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,SACA,iBADA,EAEA;AACA;AACA,KAJA;AAMA;AACA,IAEA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,gCACA;AADA,IAEA,yCAFA,CAIA;AAJA,IAKA,4CALA,CAOA;AAPA,IAQA,sDARA,CAUA;AAVA,IAWA,gBAXA,CAaA;AAbA,IAcA,iBAdA,CAgBA;AAhBA,IAiBA,qCAjBA,CAmBA;AAnBA,IAoBA,iBApBA,CAsBA;AAtBA,IAuBA,iCAvBA,CAyBA;AAzBA,IA0BA,2CA1BA,GA8BA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,IAEA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KARA,CAVA,CAoBA;;AACA;;;AACA;AACA;AACA,KAFA,CAGA;AACA;AAJA,SAKA;AACA;AACA;AACA;AACA;AACA,KALA,CAMA;AANA,SAOA;AACA;AACA,KAFA,MAGA;AACA;AACA;AACA,IAEA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;;AACA,2DACA,4DADA;AAGA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA,IACA;AAEA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;;;AACA;AAAA;AAAA,UACA;AAEA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,IAEA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KALA;AAMA,IACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,4GAEA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,qCACA,IADA,CACA,GADA,EAEA,KAFA,CAEA,CAFA,EAEA,EAFA,EAGA,WAHA;AAIA,IACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA,sCAHA,CAKA;AACA;;AACA;;AACA;AAEA;AACA;AAEA;;AACA,4DANA,CAQA;;AACA;AACA;AACA;AACA,2CACA,OADA,GACA,QADA,GACA,IADA,GAEA,4BAFA,GAEA,aAFA,GAEA,KAFA,GAGA,mBAHA,GAGA,QAHA;AAKA,SARA,CASA;;;AACA;AACA;;AAEA;AAEA,KAxBA;;AA0BA;AACA,4DAnCA,CAoCA;;AAEA;AAEA,IAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA;;AAEA;AACA,yCACA,UADA,GACA,aADA,GACA,SADA,GACA,YADA,GACA,WADA,GAEA,GAFA,GAEA,QAFA,GAEA,eAFA,GAEA,aAFA,GAEA,IAFA,GAGA,WAHA,GAGA,IAHA,GAGA,GAHA;AAKA;AAEA,KAbA;AAeA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,QADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,yDAFA;AAIA;;AAEA;AACA;;AAEA;AACA,yCACA,UADA,GACA,aADA,GACA,SADA,GACA,YADA,GACA,WADA,GAEA,GAFA,GAEA,QAFA,GAEA,eAFA,GAEA,aAFA,GAEA,IAFA,GAGA,iBAHA;AAKA;;AAEA;AACA;AACA;AAEA,KAxBA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;;AAEA;AACA;AACA;;AAEA,qFACA,0BADA;AAEA;AAAA,0BAFA;AAIA;;AACA;AAEA,uCACA,UADA,GACA,aADA,GACA,SADA,GACA,YADA,GACA,WADA,GAEA,GAFA,GAEA,kBAFA,GAEA,eAFA,GAEA,aAFA,GAEA,IAFA,GAGA,uBAHA,GAGA,iBAHA,GAGA,GAHA;AAOA,KAtBA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,YADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,qDAFA;AAIA;;AAEA;AACA;;AAEA;AACA,yCACA,UADA,GACA,aADA,GACA,SADA,GACA,YADA,GACA,WADA,GAEA,GAFA,GAEA,QAFA,GAEA,eAFA,GAEA,aAFA,GAEA,IAFA,GAGA,kBAHA;AAKA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,KA9BA;AAgCA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,YADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,sDAFA;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uCACA,UADA,GACA,aADA,GACA,SADA,GACA,YADA,GACA,YADA,GAEA,IAFA,GAEA,SAFA,GAEA,gBAFA,GAEA,aAFA,GAEA,IAFA,GAGA,kBAHA,GAGA,4BAHA,GAGA,GAHA;AAMA,KAvBA;AAyBA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,QADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,sDAFA;AAIA;;AAEA;;AAEA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,+DADA,CAEA;;AACA;AACA,SAJA,CAKA,WACA;AACA;AAEA,OA5BA,CA8BA;;;AACA,uCACA,UADA,GACA,aADA,GACA,SADA,GACA,QADA,GACA,YADA,GAEA,IAFA,GAEA,SAFA,GAEA,gBAFA,GAEA,aAFA,GAEA,GAFA;AAKA,KApCA;AAsCA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,QADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,wDAFA;AAIA;;AAEA;AACA;;AAEA;AACA,yCACA,UADA,GACA,aADA,GACA,SADA,GACA,QADA,GACA,WADA,GAEA,GAFA,GAEA,QAFA,GAEA,eAFA,GAEA,aAFA,GAEA,IAFA,GAGA,kBAHA;AAKA;;AAEA;AACA;AACA;AACA,sBACA,SADA,EAEA,WAFA,EAGA,aAHA,EAIA,gCAJA;AAMA;AACA;AAGA,KAjCA;AAmCA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AAEA;AACA,yCACA,QADA,GACA,QADA,GACA,QADA,GACA,aADA,GACA,gBADA,GAEA,kCAFA;AAIA;;AAEA;AACA;;AAEA;AACA,yCACA,gBADA,GACA,YADA,GACA,aADA,GACA,aADA,GACA,GADA,GAEA,eAFA,GAEA,aAFA,GAEA,sBAFA;AAIA;;AAEA,uBAnBA,CAqBA;;AACA,kCAtBA,CAuBA;;AACA,iCAxBA,CAyBA;;AAEA;AACA;AACA;AACA,wCADA,CAGA;;AACA;AACA,6CACA,gBADA,GACA,YADA,GACA,SADA,GACA,GADA,GACA,IADA,GAEA,eAFA,GAEA,aAFA,GAEA,KAFA,GAGA,IAHA,GAGA,GAHA,GAGA,wCAHA;AAKA;;AAEA;AACA,6CACA,gBADA,GACA,YADA,GACA,SADA,GACA,GADA,GACA,IADA,GAEA,eAFA,GAEA,aAFA,GAEA,KAFA,GAGA,IAHA,GAGA,GAHA,GAGA,8CAHA;AAKA;;AAEA,kBACA,SADA,EAEA,GAFA,EAGA,aAHA,EAIA,wBAJA,EAKA,MALA;AAQA;AACA;AAEA,KA5DA;AA8DA,IACA;;AAIA;;;AACA;AACA,mCADA;AAEA,oCAFA;AAGA,kCAHA;AAIA,oCAJA;AAKA,oCALA;AAMA,kCANA;AAOA,oCAPA;AAQA,+BARA;AASA,mCATA;AAUA,sCAVA;AAWA,iCAXA;AAYA,iCAZA;AAaA,qCAbA;AAcA,oCAdA;AAeA;AAfA,KAkBA;;AACA;AAEA,iCAFA;AAIA;AACA,4CALA;AAMA,8CANA;AAOA,8CAPA;AAQA,8CARA;AASA,8CATA;AAUA,6CAVA;AAWA,8CAXA;AAaA;AACA,iCAdA;AAeA,uCAfA;AAgBA,6BAhBA;AAiBA,6BAjBA;AAkBA,qCAlBA;AAmBA,mCAnBA;AAoBA;AApBA;AAuBA;AACA;AAGA;;AC3dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA,6CACA,aADA,GACA,GADA,GACA,YADA,GACA,eADA,GAEA,mDAFA;AAIA;;AAEA,0BACA,IADA,EAEA,YAFA,EAGA,aAHA,EAIA,YAJA;AAQA;AACA;AAEA,KA1BA;AA4BA,IAEA;AAEA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,GAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA,gBADA,CACA;;AACA,eAFA,CAEA;;AACA,gBAHA,CAGA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AAbA;AAeA;AACA,GAnBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA,GARA,EAUA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,aADA;AAEA,aAFA;AAGA,WAHA;AAIA,eAJA;AAKA,aALA;AAMA,WANA;AAOA,WAPA;AAQA,aARA;AASA,YATA;AAUA,gBAVA;AAWA,cAXA;AAYA,aAZA;AAaA;AAbA,KAgBA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KAFA;AAGA,IAEA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,+BACA,kDACA,yDADA,GAEA,iEAFA,GAGA,wDAJA,GAOA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;;AAEA;AACA;AAAA;AACA,oDACA,uDADA,EACA,EADA;AAGA;AACA;;AAEA;AAAA;AACA,oDACA,uDADA,EACA,EADA;AAGA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAnCA;;AAsCA;;AACA;AACA;AACA;;AACA;AACA;AA/CA;AAiDA;;AAEA;AACA,aADA;AAEA;AACA;AAHA;AAKA,IAEA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,uDADA,CAGA;;AACA;AACA;AACA,KANA,CAOA;;;AAEA;AACA,IAEA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA,kBADA;AAEA,iBACA,WADA,EAEA,OAFA,EAGA,wBAHA;AAFA;AAQA;AACA;;AAEA;AACA,IAEA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA;AAFA;;AAIA;AACA;AACA;AADA;AARA;;AAaA;AACA,aADA;AAEA,cACA;AAAA;AAAA;AAAA,OADA;AAFA;AAOA;;AACA;AACA;AAEA;AACA;AAAA;AACA,yBADA,CAGA;;AACA;AACA,mBADA;AAEA;AAFA;AAIA;;AAEA;AAAA;AACA;AACA;AACA,6BAHA,CAGA;;AACA;;AAEA;AACA;AAlBA;AAoBA;;AAEA;AACA,IAEA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;;AACA;AAAA;AACA;;AAEA;AAAA;AACA;AACA,2BAFA,CAEA;AACA;AACA,KAPA,MAQA;AACA;AACA;;AAEA;AACA;AACA,eADA;AAEA,oBAFA;AAGA;AAHA;AAKA;;AAEA;AACA,IAEA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,uBAHA,CAGA;;AAEA;AACA;AACA,IAEA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAZA;;AAeA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBADA;AAEA;AAFA;AAJA;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBADA;AAEA;AAFA;AAJA;;AASA;AAhDA;;AAmDA;AACA,aADA;AAEA,gBAFA;AAGA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;;AACA;AACA,cADA,CACA;;AACA,cAFA,CAEA;;AACA;AAAA;AACA;AACA;;AAEA,cAPA,CAOA;;AACA;AAAA;AACA;;AAEA,cAXA,CAWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBADA;AAEA;AAFA;;AAKA;AAAA;AACA;AAEA;;AACA;AAAA;AACA;AACA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BATA,CASA;AACA;;AAEA;AACA,kBADA;AAEA;AAFA;AAKA;;AACA;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAHA,MAIA;AACA;AACA,qDAFA,CAGA;;AAEA,8CALA,CAOA;;AACA;AACA,8BACA,uCACA,wDAFA;AAIA,aAbA,CAcA;;;AAEA;AAAA;AACA;AACA,aAFA,MAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BApCA,CAoCA;AACA;;AAEA;AACA,kBADA;AAEA;AAFA;AA9FA;;AAoGA;AACA,IAEA;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AAEA;;AACA;AACA,gBADA,CACA;;AACA,gBAFA,CAEA;;AACA;AAAA;AACA;AACA;AACA,mBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AAVA;;AAaA;AACA;;AAGA;AACA,IAEA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBADA,CACA;;AACA;AAAA;AACA;AACA;AACA,mBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;AATA;;AAYA;AACA;;AAEA;AACA,IAEA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;;AACA;AACA,cADA,CACA;;AACA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBADA;AAEA,wBAFA;AAGA;AAHA;AARA;;AAeA;AACA,IAEA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;;AACA;AACA,cADA,CACA;;AACA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA,mBADA;AAEA,0BAFA;AAGA;AAHA;AAKA;;AAEA;AAjBA;;AAoBA;AACA,IAEA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA,iBADA;AAEA,sBAFA;AAGA;AAHA;AAKA;;AAEA;AACA;;AAEA;AACA,IAEA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA,iBADA;AAEA,uBAFA;AAGA;AAHA;AAKA;;AAEA;AACA;;AAEA;AACA,IAEA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAEA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA,eADA;AAEA,kBAFA;AAGA;AAHA;AAKA;;AAEA;AACA,IAEA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA,WADA;AAEA,WAFA;AAGA,kBAHA;AAIA,cAJA;AAKA,kBALA;AAMA,kBANA;AAOA,oBAPA;AAQA,gBARA;AASA,eATA;AAUA,kBAVA;AAWA,iBAXA;AAYA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,kBACA,OADA,CACA,yBADA,EACA;AACA;AAAA;AACA;AACA;;AACA;AACA,KANA,EAOA,OAPA,CAOA,cAPA,EAOA;AACA;AACA,KATA;AAUA,IAEA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA,iBADA;AAEA;AAFA;AAIA,OALA,MAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,OALA,CAOA;;;AACA,yCACA,WADA,EAEA,eAFA;AAIA,yDAZA,CAcA;;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA,iBADA;AAEA,8CAFA;AAGA;AAHA;;AAKA;AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAPA;AASA;;AAEA;AACA;AACA,OArBA,MAsBA;AACA;AACA;;AAEA;AACA,KA1EA,CA4EA;;;AACA;AACA;;AAEA;AACA;AACA;AACA,iBADA;AAEA;AAFA;;AAKA;AACA;AACA;AACA;;AACA;AAXA;;AAcA;AACA,aADA;AAEA,gBAFA;AAGA;AAHA,QAIA;AACA,aADA;AAEA;AAFA,KAJA;AAQA,IAEA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;;AAIA;AACA;AACA;AADA;;AAIA;AACA;AACA;AADA;;AAIA;AACA;AACA;AADA;;AAIA;AACA;AACA;;AAEA;AACA;AACA,0BADA;AAEA;AAFA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA,SApBA,CAsBA;;;AACA;AACA;AAlDA;AAoDA,IAEA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBADA;AAEA;AAFA;AAIA;AAEA;;AACA;AACA,oDADA,CAGA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCACA;AACA,iBADA;AAEA,kBACA;AAAA;AAAA;AAAA,WADA;AAFA,SADA;AAQA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBADA;AAEA;AAFA;AAIA;;AAEA;AACA;AACA;AACA,SAHA,CAKA;;;AACA;AACA;AACA,sBADA;AAEA,+CAFA;AAGA;AAHA;AAMA;AACA;;AAEA;;AACA;AACA;AACA;AACA,qBADA;AAEA;AAFA;AAIA;AACA,SAPA,MAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,+BADA;AAEA;AACA,iCADA;AAEA,kCACA;AAAA;AAAA;AAAA,2BADA;AAFA,yBAFA;AAQA;AARA;AAUA;AACA;;AACA;;AAEA;AACA;AACA,2BADA;AAEA;AACA,6BADA;AAEA,8BACA;AAAA;AAAA;AAAA,uBADA;AAFA,qBAFA;AAQA;AARA;AAUA;;AAEA;AACA;AACA;AACA,6BADA;AAEA,gCAFA;AAGA;AACA,+BADA;AAEA;AACA,iCADA;AAEA,kCACA;AAAA;AAAA;AAAA,2BADA;AAFA,yBAFA;AAQA;AARA;AAHA;AAcA;;AA/CA;;AAJA;AAuDA;;AAEA,yBACA,gBACA;AAAA;AAAA;AAAA,SADA,GAEA;AAAA;AAAA;AAAA;AAAA,SAHA;AAvIA;AA6IA,IAGA;;ACtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,IACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA,oBADA;AAEA,eAFA;AAGA,gBAHA;AAIA;AAJA;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA,OANA,CAQA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,sCAHA,CAKA;AACA;;AACA;AACA,iCACA,cADA,GACA,wBADA,GACA,2BADA,GAEA,gCAFA,GAEA,OAFA,GAEA,GAFA;AAIA,WAZA,CAcA;;;AACA,cACA,sCACA;AADA,aAEA,+DAHA,EAIA;AACA;AACA,WArBA,CAsBA;;;AAGA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA,SAnCA,CAoCA;AApCA,aAqCA;AACA;AAEA;AACA;AACA,iCACA,cADA,GACA,eADA,GAEA,0BAFA;AAIA,WATA,CAWA;;;AACA,+BACA,cADA,GACA,eADA,GAEA,8BAFA;AAIA,SAtDA,CAuDA;;AACA,OAxDA,MAyDA;AACA;AACA,wBADA;AAEA,mBAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA;AALA;AAOA,8CARA,CAUA;;AAEA;;AACA;AACA;AAEA,oEAHA,CAKA;AACA;;AACA;AACA;AACA;AACA,WAVA,CAYA;;;AACA,qCACA,iDADA,EAEA;AACA;AACA;AACA;AACA,WAnBA,CAqBA;AACA;;;AACA;AACA;AACA;AACA;AACA,WA3BA,CA6BA;AACA;;;AACA;AACA;AACA,WAjCA,CAkCA;AAEA;;;AACA;;AACA;AACA,0BACA,QADA,EAEA,YAFA,EAGA,0EAHA,EAIA,OAJA;AAMA,WAPA,MAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEADA,CAGA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBADA;AAEA,qBACA,8BADA,EAEA;AAAA;AAAA;AAAA,eAFA,EAGA;AAAA;AAAA;AAAA,eAHA;AAFA;;AASA;AACA;AACA;AACA,eAFA,MAGA;AACA;AACA,yBADA;AAEA,yBACA,cADA,EAEA,aAFA;AAFA;AAOA;AACA,aAbA,MAcA;AACA;AACA,6BADA;AAEA;AAFA;AAIA;AACA,WA5CA,CA8CA;;;AACA;AAAA,aACA,wBADA;;AAGA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAbA,CAeA;;;AACA;AAAA;AACA;AACA,aAlBA,CAmBA;;;AAEA;AACA;AACA;AACA;AACA,WAzBA,MA0BA;AACA;AACA;AACA,8BADA;AAEA,yBAFA;AAGA,0BAHA;AAIA,4BAJA;AAKA;AALA;AAOA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AATA;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA,WAFA,MAGA;AACA;AACA,qBADA;AAEA;AAFA;AAIA;AACA,SAbA,MAcA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AAEA;;ACxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAEA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;AAGA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BARA;AAUA;AACA;AACA;AACA;;AAEA;AACA,KAhBA;AAiBA,8BAjBA;AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAjCA;AAmCA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AA9CA;AAgDA;AAEA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAXA;;AAaA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AA3DA;AA8DA;;;AACA;;AAEA;AACA,wBACA,sDADA,EAEA,IAFA,EAGA,KAHA;;AAOA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACA;;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACA;;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uFACA,KADA,EAEA,kDAFA;AAIA,iBALA,CAMA;AACA;AACA;;AArBA;AAuBA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AApMA;;AAuMA;AACA,IAEA;;ACxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA,IAEA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AADA,aAEA;AACA;AAHA,YAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yEACA,mDADA,EAEA;AACA;AACA;;AACA;AAtEA;;AAyEA;AACA,IAEA;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,UADA;AAEA;AAFA,KAKA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,aADA;AAGA;AACA,wBADA;AAEA;AAFA,KAHA;AAQA;AACA,wBADA;AAEA,oBAFA;AAGA;AAHA,KARA;AAcA;AACA,wBADA;AAEA,oBAFA;AAGA,kBAHA;AAIA;AAJA,KAdA;AAqBA;AACA,wBADA;AAEA,oBAFA;AAGA,kBAHA;AAIA,mBAJA;AAKA;AALA,KArBA;AA6BA;AACA,wBADA;AAEA,oBAFA;AAGA,kBAHA;AAIA,mBAJA;AAKA,oBALA;AAMA;AANA,KA7BA;AAsCA;AACA,wBADA;AAEA,oBAFA;AAGA,kBAHA;AAIA,mBAJA;AAKA;AALA,KAtCA;AA8CA;AACA,wBADA;AAEA;AAFA;AA9CA;AAmDA;AAGA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,WADA;AAEA,SAFA;AAGA,UAHA;AAIA,WAJA;AAKA,WALA;AAMA,WANA;AAOA,UAPA;AAQA,aARA;AASA;AATA,KAYA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,IAEA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,0BADA;AAEA,gCAFA;AAGA,gCAHA;AAIA,wBAJA;AAKA,wBALA;AAMA,sBANA;AAOA,sBAPA;AAQA,gCARA;AASA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,qCAFA,CAIA;AACA;AACA;;AACA;AACA;AACA,KAFA,MAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAFA;AAGA;;AAEA;AACA,IACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,KARA;AAUA;AACA;AACA,KAZA;AAcA;AAAA;AACA,WACA;AACA,YAEA;AACA,4BALA,EAMA;AACA;AACA;AACA,KAxBA;AA0BA,eA1BA;AA4BA;AA5BA;AA8BA;;AAEA;AACA,sBADA;AAEA;AACA;AACA;AAJA;;AAOA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA,wCACA,KADA,EAEA,eACA,+CADA,GAEA,sDAJA;AAMA;AACA;AACA;;AAEA;AACA;AACA,+BADA;AAEA;AACA;AAEA,wBACA,EADA,EAEA,6BAFA,EAGA,SAHA,EAIA,OAJA,EAHA,CAUA;AACA;AACA;;AACA;;AACA;AACA,0BACA,EADA,EAEA,6BAFA,EAGA,gBAHA,EAIA,OAJA;AAMA,SArBA,CAsBA;;AACA,OAzBA;AA2BA;AACA,qCA5BA;AA6BA;AAEA,+BA/BA;AAgCA,+BAhCA;AAiCA,gCAjCA;AAkCA;AAlCA,KADA;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAPA,KAtCA;AAgDA;AACA,+BADA;AAEA,+BAFA;AAGA,gCAHA;AAIA;AAJA,KAhDA;AAuDA;AACA;AACA,qCAFA;AAGA;AACA,+BAJA;AAKA,+BALA;AAMA,gCANA;AAOA;AAPA,KAvDA;AAiEA;AACA,+BADA;AAEA,gCAFA;AAGA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA;AAVA;AAjEA;;AA+EA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA,iEACA,gBADA,GAEA;AACA,oDACA,+CADA,GAEA,0DACA,EAHA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,6DACA,2CADA;AAEA,IAEA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAEA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,IAEA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,GAJA;AAMA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,GAFA,EAIA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,GAJA;AAMA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,GAPA;AASA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA,KAFA,MAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAzBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA,KANA,MAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8CADA;AAEA;AAFA;AAIA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,0BADA,CAGA;;AACA,uBAJA,CAKA;;AAEA,2BAPA,CASA;;AACA;AACA;AACA,KAZA,CAaA;;;AAEA;AACA;AACA;;AAEA;AACA,aADA;AAEA;AAFA;AAKA;AACA;AAEA;AACA,aADA;AAEA,gBAFA;AAGA,kBAHA;AAIA;AAJA,OA3BA,CAkCA;;AACA,0BAnCA,CAoCA;AAEA,GAtCA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AAAA;AACA,eACA;AACA,eADA;AAEA,gBACA;AAAA;AAAA;AAAA,SADA;AAFA,OADA,EAOA,WAPA,EAQA,MARA;AAUA;AACA,GAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,0BADA,CAGA;;AACA,uBAJA,CAKA;;AAEA,2BAPA,CASA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KApBA,CAqBA;;;AAEA;AAAA;AACA,eACA;AACA,eADA;AAEA,iCACA,CACA;AACA,iBADA;AAEA;AAFA,SADA,CADA;AAFA,OADA,EAYA,WAZA,EAaA,MAbA;AAeA;AACA,GAxCA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,uBAFA,CAGA;;AAEA,2BALA,CAOA;;AACA;AACA;AACA,KAVA,CAWA;;;AAEA,kCAbA,CAeA;;AACA;AACA,sBACA,yDACA,4BADA,GACA,SAFA;AAIA,KArBA,CAsBA;;;AAEA;AACA,GAzBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,0BADA,CAEA;;AACA,uBAHA,CAIA;;AAEA,2BANA,CAQA;;AACA;AACA;AACA,KAXA,CAYA;;;AAEA;AACA,aADA;AAEA;AAFA;AAKA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AACA,kBADA;AAEA,eAFA;AAGA,oBAHA;AAIA,uCAJA;AAKA,0BALA;AAMA,iCANA;AAOA;AAPA;AASA,KAjDA,CAmDA;;;AACA,0BApDA,CAqDA;;AAEA;AACA,GAxDA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA,GATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,GAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,GAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAZA,EAcA;;ACxfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA,qBACA,KADA,EAEA;AAAA;AAAA,6BAFA;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA;AACA,KAxBA;AAyBA,IAEA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCACA,mDADA,IAEA,iDAFA,EAGA;AACA;AACA;AACA;AACA;AACA,IAEA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA;AACA,IAEA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,gDAEA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AAZA;;AAeA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA,GAHA,EAIA;AAEA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA,4CAbA,CAeA;AACA;;AACA;;AACA;AACA;AACA,KApBA,CAqBA;;;AAEA;AACA;AACA,sCAzBA,CA2BA;;AACA;AACA;AAEA;;AACA;AACA,6EACA,6BADA;AAEA;AAEA;;;AACA;AACA,sFACA,oBADA,GACA,YADA,GAEA,6BAFA;AAGA;AAEA;;;AACA;AACA,mFACA,YADA,GACA,YADA,GACA,iCADA,GACA,YADA,GAEA,6BAFA;AAGA;;AAEA;AACA;AAEA;AAEA;;AACA;;AACA;AACA,KA3DA,CA4DA;;AACA;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAHA,MAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDACA,OADA,EAEA,oBAFA,EAGA,GAHA,EAIA,IAJA;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAFA,CAGA;;AAEA;AACA,SANA,MAOA;AACA;AACA;AACA,2CACA,8DADA,GAEA,oDAFA;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAtEA;;AAwEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AACA,2BAXA,CAaA;;AACA;;AACA;AACA;AACA;AACA,SAlBA,CAmBA;AAEA;;;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAzCA;AA2CA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AAEA;AACA;AACA,wCACA,0BADA,EAEA,eAFA,EAGA,UAHA,EAIA,UAJA,EAKA,OALA,EAMA;AACA;AACA;AACA;;AAEA;AACA,OAZA,EAJA,CAmBA;;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAEA,yDACA,0EAHA,GAKA;AACA;AACA;AACA;AACA;AACA,OAtCA,CAwCA;;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,iCAFA,CAGA;;AAEA;AACA;AACA;AACA;AACA,OAZA,MAaA;AACA;AACA;AACA;AACA;AACA;AACA,GA/DA;AAiEA;AACA;AACA;;;AACA,oDAEA;;ACpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uDACA;AACA,qBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA;AALA,QADA,GAQA;AACA,qBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA;AALA,SAMA,iBANA,CARA;AAeA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA,KANA,MAOA;AACA;AACA;;AACA;AACA,IACA;AAEA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA,IAEA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uDACA;AACA,qBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA;AAJA,QADA,GAOA;AACA,qBADA;AAEA,oBAFA;AAGA,oBAHA;AAIA;AAJA,SAKA,iBALA,CAPA;AAaA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA,KANA,MAOA;AACA;AACA;;AAEA;AACA,IAEA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA,6BACA,sBADA,EAEA,IAFA,EAGA,6BAHA,EAIA,6BAJA;AAMA;AACA;AACA;;AAEA;AACA;AAEA;AACA,IAEA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA;AACA;AACA,uBAXA,CAaA;;AACA;AACA,yBADA,CAGA;;AACA;AACA;AACA;AACA;AACA,OAJA,MAKA;AACA;AACA;AACA,OAZA,CAcA;;;AACA;;AACA;AACA,2BACA,gFADA;AAGA,OApBA,CAsBA;;;AACA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA;AACA;;AAEA;AACA,KA/CA,CAgDA;;AACA;;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA,GAnBA;AAqBA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,GAJA;;AAMA;AACA;AACA,GAFA,EAIA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;;AACA;AACA;AACA,IAEA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA,IAEA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,uBAJA,CAMA;;AACA;;AACA;AACA;;AACA;AACA;AACA;;AAEA;;AACA;AAEA;AACA;AACA;AACA,OAFA;AAGA;;AACA,iCAtBA,CAuBA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAEA;AACA;AACA;AACA,KAFA;AAGA,GAfA;;AAiBA;AACA;AACA;AACA,GAHA;AAMA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA,6CAFA,CAIA;;AACA;AACA;AACA;AACA;AACA;AACA,WAJA;AAKA;;AAEA;AACA;AACA;;AAEA;AACA,GA7BA;AA+BA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,GAFA,EAIA;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BACA,yEADA;AAGA;AACA;AACA,IACA;AAEA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AAEA;AACA;AACA,wCACA,KADA,EAEA,oDAFA;AAIA,SALA,CAMA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA,WAFA;AAGA;AACA,SALA,CAMA;AACA,sBACA,CADA,EAEA,uDAFA,EAGA,iBAHA;AAKA;AACA;AACA;;AAEA;AACA,IAGA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA,IAEA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;;AACA;AACA,IAEA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,iDAEA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;;AACA;;AACA;AACA;AACA,KAFA,MAGA;AACA;AACA;AACA;AACA,OAFA,EAEA,CAFA;AAGA;AACA;;AACA,IACA;AAEA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAJA;;AAMA;AACA;AACA;AACA;AACA,OAFA;AAIA;AACA;AACA,IACA;AAEA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAFA;AAGA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,OANA,CAOA;;;AAEA;AACA;AACA;AACA,KAZA;AAaA,IAEA;;AACA;;;AACA;AACA;AACA;AACA;AACA,OAFA,EAEA,EAFA;AAGA,KAJA;AAKA;AAEA;;;AACA;AACA;AACA;AACA;AACA,KAHA;AAIA,IACA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BADA;AAEA;AAFA;AADA;AAMA;AAZA;AAcA;AACA;;AAEA;AACA;AACA,qBADA;AAEA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA,eALA,CAOA;;AACA;;;AACA;AACA;AACA,8EAFA,CAGA;;AACA,eAJA,MAKA;AACA;;AACA;AACA,eAjBA,CAkBA;;;AAEA;;AAEA;AACA;;AACA;AA1BA;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAHA;;AAFA;;AAQA;AAzCA;AA2CA;;AAEA;;AACA;AACA,2CADA,CAGA;;AACA,8CAJA,CAKA;;AAEA,iBACA,cADA,EAEA,4DAFA,EAGA,0BAHA;AAKA;;AAEA;AACA;AACA,6CADA,CAGA;;AACA,qDAJA,CAKA;;AAEA,mBACA,cADA,EAEA,mDAFA,EAGA,0BAHA;AAKA;AACA;;AAEA;;AACA;AACA;AACA;AACA,OAFA,CAGA;AACA;AACA;AACA;AACA,IAEA;;ACpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,IAEA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA,IAEA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,IAEA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA,KALA,CAOA;AACA;;;AACA;AACA;AACA;AACA,IACA;AAEA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oFADA,CACA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AA3BA;;AA8BA;AACA;;AAEA;AACA,IACA;AAEA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SALA,MAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BADA;AAEA,qBAFA;AAGA,sBAHA;AAIA;AAJA;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;;AAEA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;;AAEA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;;AAEA;AACA;AACA;AADA;AAGA;;AAEA;AACA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA,mBADA;AAEA;AAFA;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBADA;AAEA,iCAFA;AAGA;AAHA;AAKA;AACA;;AAEA;AACA;AACA,mBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA,oBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA,oBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BADA;AAEA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;AADA;AAGA;AACA;;AAEA;AACA;AACA;AADA;AAIA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;;AA9MA;;AAkNA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,aANA,MAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAtDA;;AAyDA;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AApLA;AAsLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAEA;;AC/cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAHA,EAIA;AAEA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KARA,CASA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA,qDACA,MADA,GAEA,gCAFA;AAGA,KALA,MAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AADA,MApDA,CAwDA;;AACA,mCAzDA,CA0DA;;;AAEA,gCA5DA,CA8DA;;AACA;;AACA;AACA;AACA;;AAEA;AAAA;AACA;;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA;;AAEA;AACA,KA/EA,CAiFA;;;AACA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA;AACA;;AAEA;AAEA;AACA,uDACA,yCADA,GAEA,cAFA;AAIA;AACA,qBArGA,CAwGA;AACA;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA,wCADA,CAGA;;AACA,kDACA,UACA,OADA,CACA,UADA,EACA,EADA,EAEA,OAFA,CAGA,0DAHA,EAIA;AACA,8DACA,GADA,GACA,EADA,GACA,GADA,GACA,EADA,GACA,GADA,GACA,EADA,GACA,GADA;AAEA,WAPA,CADA;;AAYA;AACA;AACA;;AACA;AACA;AACA;AACA,KAxIA,CAyIA;AAEA;;;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CADA,CAEA;;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA,0DAFA,CAGA;;AAEA,kBACA,cADA,EAEA,yDAFA,EAGA,SAHA;AAKA;AACA;;AAEA;AACA,kCAxBA,CA0BA;;AACA;AACA;;AAEA,8BA5KA,CA+KA;;;AACA,gCAhLA,CAiLA;AAEA;;;AACA;;AACA;AACA;AACA,KAFA,CAGA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA,yCA3MA,CA4MA;AACA;;AACA;;AACA;AACA;AACA,KAjNA,CAkNA;AAGA;AACA;AACA;;;AACA;;AACA;AACA,mDACA,SADA,EAEA,uBAFA;AAIA;AACA;AACA,KAhOA,CAiOA;;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA,4BA5OA,CA8OA;;;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA,4BADA;AAEA,qBAFA;AAGA,0BAHA;AAIA,sBAJA;AAKA;AALA;AAOA,OARA,MASA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AACA;;AACA;AACA,KA/QA,CAgRA;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,gCADA,CAGA;;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA,SATA,MAUA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,GA/BA;AAiCA;AACA;AACA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAFA,CAGA;AACA;AACA;AACA;;AAEA,uCAXA,CAaA;AACA;;AACA,wCAfA,CAgBA;AACA;AACA,GAnBA;AAoBA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA;AACA,GAPA;AASA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GATA;AAYA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA,kBADA,CAEA;;AACA;AACA,gBADA;AAEA,kBAFA;AAGA;AAHA,OAHA,CAQA;;AAEA;AACA;AACA;AACA,OAFA,CAGA;AACA;AACA;AACA,KAPA;AAQA,GAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA,CAKA;;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAFA;AAGA;;AAEA;AACA;AArBA;AADA;AAyBA;AACA,KA3BA,CA4BA;AACA;AACA;AACA,GAtCA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA,sBADA;AAEA,sBAFA;AAGA,oBAHA;AAIA;AAJA,WAFA,CAQA;;AAEA;AACA,uBACA,eADA,EAEA;AAAA;AAAA;AAAA;AAAA,WAFA;AAIA,SALA,CAMA;AACA;AACA;;AACA;AACA;;AAEA;AACA,KA5BA,CA8BA;;;AACA;AAAA;AAAA;AAAA;AAAA,OA/BA,CAgCA;AACA,GAjCA;AAmCA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDACA,uBADA,EAEA;AACA;AACA;AACA,SANA,MAOA;AACA;AACA;AACA,OAXA;AAYA;;AAEA;AACA;AACA,GArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAZA;;AAeA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AACA,GAvDA;AA0DA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AAGA;;AACA;AACA;AACA,KAFA;;AAIA;AACA;AACA,6CACA,2BADA,EAEA,kBAFA,EAGA,UAHA,EAIA,UAJA,EAKA,OALA,EAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AADA;AADA;AAKA,SAhBA;AAkBA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,8DACA,8DADA,GAEA;AACA;AACA;AACA,uBADA;AAEA,wBACA;AACA,yBADA;AAEA;AAFA,iBADA,EAKA,MALA,CAKA,+CALA;AAFA;AASA;AACA;;AAEA;AACA;AACA;AACA;AADA;AADA;AAKA,aANA,MAOA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA,SApCA;AAsCA;AACA;AACA;AACA,SAHA;AAIA,OA7CA;;AA+CA;AACA;;AACA;AACA,OAHA,MAIA;AACA;;AACA;AACA;;AAEA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA,oCAFA,CAGA;;;AAEA;AAEA,wCACA,0BADA,EAEA,eAFA,EAGA,SAHA,EAIA,IAJA,EAKA,WALA,EAMA;AACA;AACA;AACA;;AAEA;AACA,OAZA;AAeA;;AAEA;AACA;;AACA;AACA,OAHA,MAIA;AACA;;AACA;AACA;AACA;AACA,iCAFA,CAGA;;AAEA;AACA;AACA;AACA;AACA,OAZA,MAaA;AACA;;AACA;AACA;;AAEA;AACA;;AACA,wEACA,yEADA,EAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAvLA;;AAyLA;AACA;AACA;AAEA;AACA;AACA;;AACA,0BACA,wCADA,IAEA,gEAFA,EAGA;AACA;;AACA;AACA;AACA,qBADA;AAEA;AAFA;AAIA;;AAEA;AACA,uBACA,eADA,EAEA,iCAFA,EAGA;AACA;AACA,sBADA;AAEA;AAFA;AADA,WAHA;AAUA;AACA,OA1BA;AA2BA,KA5BA;AA8BA;AACA,GAnCA;AAqCA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AACA;;AACA;;AACA;AAEA;;AACA;;AACA;AACA,KATA,MAUA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAxBA;AA2BA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAPA,MAQA;AACA;AACA;AACA,KAZA;;AAcA;AACA,GAlBA;AAqBA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BACA,EADA,EAEA,QAFA,EAGA;AACA,6BADA;AAEA,gCAFA;AAGA;AAHA,aAHA;AASA,WAVA,CAWA;AACA;AACA;;AACA;AACA;AACA;AACA,KAtBA;AAuBA,GA5BA;;AA8BA;AACA;AACA,GAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,oCAFA,CAGA;;;AAEA;;AAEA;AACA;AACA,sCAFA,CAGA;;;AACA;;AACA;;AACA;;AACA;AACA,OARA,MASA;AACA;AACA;AACA,wCAFA,CAGA;;;AAEA;;AAEA;AACA;AACA;AACA,WAHA,MAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDACA,OADA,EAEA,oBAFA,EAGA,GAHA,EAIA,IAJA;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iCAFA,CAGA;;AAEA;AACA,WANA,MAOA;AACA;AACA;AACA,6CACA,uDADA,GAEA,6CAFA;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAvFA,CAyFA;;;AACA;AACA;AACA;AACA;AACA,GA/FA;;AAiGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,sCAFA,CAGA;;;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA,wCAjBA,CAmBA;;AACA;;AAGA;AACA;AACA;AACA,SAHA,MAIA;AACA;;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AACA,6BAXA,CAaA;;AACA;;AACA;AACA;AACA;AACA,WAlBA,CAmBA;AAEA;;;AACA;AACA;AACA;AACA;;AAEA,kCAtDA,CAwDA;;;AACA,uCAzDA,CA0DA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAzEA,MA0EA;AACA;AACA,oCAFA,CAGA;;;AAEA;AACA;AACA;AACA,SAFA,MAGA;AACA;;AACA;AACA;AACA,OARA,MASA;AACA;AACA;;AAEA;AACA;AACA,GA/FA,EAkGA;;ACxqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA,KALA,CAOA;;;AACA;AACA;AACA,KAVA,CAWA;;;AAEA;;AACA;AAAA;AACA;AACA;;AAEA;AACA;AAEA;AACA,IAEA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAFA;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA,SAFA;;AAIA;AACA;AACA;;AAtBA;AAwBA,GA3BA;AA6BA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,KAFA;AAGA,GARA,EAUA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAGA;AACA,2EADA;AAEA;AAFA;AAKA;;AACA;AACA;AACA,KAZA,CAcA;;;AACA;AACA;AACA,KAjBA,CAkBA;;;AAEA;AACA,oBADA;AAEA,eAFA;AAGA,gBAHA;AAIA;AAJA;;AAOA;AACA;AACA;;AAEA;AACA;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,qBADA;AAEA;AACA,uBADA;AAEA,wBACA;AAAA;AAAA;AAAA,iBADA;AAFA,eAFA;AAQA;AACA,uBADA;AAEA,iCAFA;AAGA;AACA,yBADA;AAEA,0BACA;AAAA;AAAA;AAAA,mBADA;AAFA;AAHA;AARA;AAmBA;;AAEA;AACA;AA1BA;AA6BA;;AAEA;AACA;AACA,uBADA;AAEA;AACA,mBADA;AAEA;AACA,qBADA;AAEA,sBACA;AAAA;AAAA;AAAA,eADA;AAFA,aAFA;AAQA;AACA,qBADA;AAEA,sBAFA;AAGA;AACA,uBADA;AAEA,wBACA;AAAA;AAAA;AAAA,iBADA;AAFA;AAHA;AARA;AAFA;AAsBA;;AAEA;AACA;AACA,uBADA;AAEA;AACA,mBADA;AAEA;AACA,qBADA;AAEA,sBACA;AAAA;AAAA;AAAA,eADA;AAFA,aAFA;AAQA;AACA,qBADA;AAEA,sBAFA;AAGA;AACA,uBADA;AAEA,wBACA;AAAA;AAAA;AAAA,iBADA;AAFA;AAHA;AARA;AAFA;AAsBA;;AAEA;AACA;AACA,oBADA;AAEA;AACA,mBADA;AAEA,oBACA;AAAA;AAAA;AAAA,aADA;AAFA;AAFA;AASA;AACA;;AAEA;AACA,IAEA;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,6BACA,6CACA,iDADA,GAEA,yDAHA,GAMA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,IACA;AAEA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,yBAJA,CAMA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;;AACA;AACA,6FACA,6BADA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AAjCA;AAmCA,OApCA,MAqCA;AACA;AACA;AACA;AACA,KAlDA,CAmDA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA,KAZA,MAaA;AACA;AACA;AACA;AACA,GAvBA;AAyBA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GARA;;AAUA,qCACA,8DACA,aADA,GAEA,MAHA;AAKA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aARA,CAUA;;;AACA,kCAXA,CAYA;;AAEA;AACA;AACA;AACA;AACA,WAlBA,MAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GA3CA,EA6CA;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA;AAEA;AACA,uBAXA,CAaA;;AACA;;AACA;AACA;AACA;AACA,KAlBA,CAoBA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCADA;AAEA,eAFA;AAGA,gBAHA;AAIA,uDAJA;AAKA;AALA;AAQA,mFAvCA,CAyCA;;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAFA;AAGA,KApDA,CAsDA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA,kCAlEA,CAoEA;;AACA;AACA;AACA,yBAFA,CAIA;;AACA;AACA;AACA;AACA;AACA,OAJA,MAKA;AACA;AACA,gCACA,kEADA,GAEA,0CAFA;AAGA;;AAEA;;AACA;AACA,6CACA,gBADA,EAEA,IAFA,EAGA,6BAHA,EAIA,6BAJA,EAKA,aALA;AAOA,OA1BA,CA4BA;;;AACA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA,gCACA,iEADA,GAEA,yCAFA;AAGA;;AAEA;AACA,KA9GA,CA+GA;;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA,GAtBA;;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KANA,MAOA;AACA;AACA;AACA;AACA;AACA;AACA,SAHA;AAKA;AAEA,0CACA,0BADA,EAEA,eAFA,EAGA,UAHA,EAIA,UAJA,EAKA,OALA,EAMA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBADA;AAEA;AACA,qBADA;AAEA,sBACA;AAAA;AAAA;AAAA,eADA;AAFA,aAFA;AAQA,wBARA;AASA;AATA;AAWA,SAvBA;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBADA;AAEA;AACA,yBADA;AAEA,0BACA;AAAA;AAAA;AAAA,mBADA;AAFA,iBAFA;AAQA,8CARA;AASA;AATA;AAWA,aAZA,MAaA;AACA;AACA;AACA,yBADA;AAEA,0BACA;AAAA;AAAA;AAAA,mBADA;AAFA,iBADA;AAOA,uBAPA;AAQA,mCARA;AASA,+CATA;AAUA,mCAVA;AAWA,6CAXA;AAYA;AAZA;AAcA;AACA,WArCA;AAsCA,SA3CA;;AA6CA;AACA;AACA;AACA,OAnFA,MAoFA;AACA;AACA;AACA;AACA;AACA;AACA,GA1GA,EA4GA;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA,wDALA,CAKA;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA,eADA;AAEA,4CACA;AACA,iBADA;AAEA;AAFA,SADA,EAKA,mBALA;AAFA;AAUA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBADA;AAEA,kDACA;AACA,uBADA;AAEA;AAFA,eADA,EAKA,sBALA;AAFA;AAUA;;AAEA;AACA;AACA,qBADA;AAEA;AAFA;AAIA;AAnBA;AAqBA;;AAEA;AACA;;AAEA;AACA,aADA;AAEA;AAFA;AAIA,GApDA,EAsDA;;;AACA;AACA,OACA,8DADA,EAEA;AACA;;AAEA;AACA;AACA,gCACA,WADA,EAEA,uDAFA;AAIA,KANA;AAOA,GAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA;AACA;AAEA,yCAZA,CAYA;;AAEA,sBACA;AACA,aADA;AAEA;AAFA,KADA;AAOA;AACA,aADA;AAEA,2BAFA;AAGA;AAHA;;AAMA;AACA;AACA,eADA;AAEA;AACA,iBADA;AAEA;AAFA;AAFA;AAOA,KAnCA,CAsCA;;;AACA;AACA;;AACA;AACA;AACA,+CACA,oBADA,EAEA,IAFA,EAGA,0CAHA,EAIA,UAJA,EAKA,aALA;AAOA;AACA,OAVA,MAWA;AACA;AACA;AACA,iDACA,oBADA,EAEA,IAFA,EAGA,0CAHA,EAIA,UAJA,EAKA,aALA;AAOA;AACA;AACA;;AAEA;;AACA;AACA,KApEA,CAqEA;;AACA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AAEA;AACA,GANA;AAQA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCACA,yFADA,GAEA,+EAFA;AAIA;AACA;AACA;AACA,KAVA,MAWA;AACA;AACA;AACA;AACA,yCACA,yFADA,GAEA,+EAFA;AAGA;AACA;AACA;AACA;AACA;AACA,GA3BA;AA6BA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA,OAHA,MAIA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AACA;;AACA;AACA;;AACA;AACA;AACA,WAFA;AAGA;AACA,OAhBA,MAiBA;AACA;;AACA;AACA;AACA,KA1BA,MA2BA;AACA;;AACA;AACA;AACA,GApCA;AAsCA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AAEA,4DACA,SADA,CAEA;AAFA,OAGA,GAHA,IAGA,wCAHA,IAGA,2BAHA;;AAMA;AACA;AACA;AACA;;AAGA;AACA,0BApBA,CAsBA;;AACA;AACA;;AAEA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA,kCAFA,CAGA;AACA,OAVA,CAWA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA,GA9DA;;AAgEA,+DACA,2CADA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA,6BAbA,CAeA;;AACA,0BAhBA,CAkBA;;AACA;AAEA;AAEA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAFA,MAGA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AAEA,yCACA;AACA,+BADA;AAEA;AACA,uBADA;AAEA;AAFA,eAFA;AAMA,iCANA;AAOA;AAPA,aADA,GAUA;AACA,iCADA;AAEA,6CAFA;AAGA,2CAHA;AAIA,+BAJA;AAKA;AACA,uBADA;AAEA;AAFA,eALA;AASA,iCATA;AAUA;AAVA,aAVA;AAwBA;;AAEA;AACA;AACA,sDACA,WADA,EAEA,YAFA,EAGA;AACA;AADA,iBAHA;AAOA,eARA,MASA;AACA;AACA;AACA;AACA;AACA,aAfA,MAgBA;AACA,uDACA,WADA,EAEA,8DAFA,EAGA;AACA;AADA,eAHA;AAOA;AACA;AACA,SAvEA,MAwEA;AACA;AACA,SAFA,MAGA,4CACA,uFADA,GAEA;AACA,oCADA,CAGA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA,iDACA;AACA,qBADA;AAEA,mCAFA;AAGA;AAHA,aADA,GAMA,IANA;;AAQA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA,8CAFA,CAGA;;AACA;AACA,uBADA;AAEA,qCAFA;AAGA,mCAHA;AAIA;AAJA;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDACA,4DADA;AAGA;AACA,WALA,MAMA;AACA;AACA;AACA;AACA;AACA;AACA,SAhEA,MAiEA;AACA;AACA;AAEA,gCAJA,CAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAAA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA,eAFA,MAGA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AACA;AACA,6CAhCA,CAkCA;;AACA,6CACA,8BADA,IAEA,yDAFA,EAGA;AACA;AACA;AACA;AACA,yBADA;AAEA,uCAFA;AAGA,qCAHA;AAIA;AAJA;AAMA,eATA,CAWA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDACA;AACA,qBADA;AAEA,mCAFA;AAGA;AAHA,aADA,GAMA,IANA,CA1DA,CAkEA;;AACA,iFACA,6DADA,EAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBADA;AAEA,uCAFA;AAGA,qCAHA;AAIA;AAJA;AAMA,eAbA,CAeA;;;AACA;AACA;;AAEA;AACA;AACA;AACA,eAtBA,CAwBA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAFA,MAGA;AACA;AACA;;AACA;AACA;AACA,mBAFA,MAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAJA,MAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,eANA,MAOA;AACA;AACA;AACA,eAHA,MAIA;AACA;AACA;;AAEA;AACA,mDADA,CAGA;;AACA;AACA;AACA;AACA,6BADA;AAEA,2CAFA;AAGA,yCAHA;AAIA;AAJA;AAMA,mBAZA,CAcA;;;AACA;AACA;;AAEA;AACA;AACA;AACA,mBArBA,CAuBA;;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAFA,MAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAzCA,MA0CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDA9NA,CA+NA;AACA,WAhOA,MAiOA;AACA;AACA;AACA;AACA;AACA;AACA,aANA,CAQA;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BADA;AAEA,yCAFA;AAGA,uCAHA;AAIA;AAJA;AAMA;AACA,eAVA,MAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KA5bA,CA8bA;;;AACA;AACA;AACA,eADA;AAEA,kBAFA;AAGA;AACA,iBADA;AAEA;AACA,mBADA;AAEA;AAFA;AAFA;AAHA;;AAYA;AACA;AACA;AACA,KA/cA,CAidA;;;AACA;AAEA;;AACA;AACA;AACA,KAFA,MAGA;AACA;AACA;AACA;AACA;AACA,OAJA;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCARA,CAUA;AACA;;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAJA,MAKA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAxgBA,EA0gBA;;ACx4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA;AACA,uBAVA,CAYA;;AACA;AACA;AAAA;AACA;AACA,6CACA,mBADA,EAEA,IAFA,EAGA,UAHA,EAIA,UAJA,EAKA,aALA;AAOA,OATA,MAUA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CACA,SADA,EAEA,EAFA,EAGA,QAHA,EAIA,QAJA,EAKA,aALA;AAOA;AACA;AACA,SAdA;AAeA;;AAEA;;AACA;AACA,KA7CA,CA8CA;;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA,KAHA,MAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OARA;AASA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AACA;AACA,GA9BA;AAiCA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA,KAFA,MAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OARA;AASA;;AAEA;;AACA;AACA;AACA,KAFA,MAGA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0EACA,MADA,CACA,gBADA,EACA,KADA;AAEA;AACA;AACA,GA3CA;;AA6CA;AACA;AACA;AACA,GAHA,EAKA;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA,mDACA,MADA,GAEA,sBAFA;AAIA;AACA;AACA,sCAXA,CAYA;;AACA;AACA;AACA,2CACA,mBADA,EAEA,IAFA,EAGA,UAHA,EAIA,UAJA,EAKA,aALA,EAMA,SANA;AAQA,KAvBA,CAwBA;;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA,GANA;AAQA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA,KAFA,MAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,GAjBA;;AAmBA;AACA;AACA,GAFA,EAIA;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCADA,CACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,SAJA,MAKA;AACA;AACA,uBAFA,CAEA;;AACA,yBAHA,CAGA;;AACA,yBAJA,CAIA;;AACA,yBALA,CAKA;;AACA,wBANA,CAMA;;AACA;AAAA,aACA,aADA,IACA,8BADA,IAEA,0GAFA,CAPA,CAYA;;AACA;AACA;AACA,WAFA;AAIA;AACA;;AAEA;AACA;;AACA;AACA,0CADA;AAEA,2CACA;AAAA;AAAA;AAAA,eADA,GAEA,SAJA;AAKA,uBALA;AAMA;AANA;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCACA,eADA,EAEA,0BAFA,EAFA,CAOA;;AACA;AACA;;AACA,+BACA,kBADA,IAEA,yCAFA,EAGA;AACA;AACA,gCADA,EAEA,gCAFA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAFA;;AAIA;AACA;AACA,WAhEA,CAiEA;AAGA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA,WAhFA,CAkFA;AACA;;;AACA,4CACA,6BADA,IAEA,iBAFA,EAGA;AACA;AACA,2BADA;AAEA,8CAFA;AAGA;AAHA;AAKA;;AACA;;AACA;AACA;;AAEA;AAAA;AACA;AACA,sCADA;AAEA,0BAFA;AAGA,kCAHA;AAIA,oCAJA;AAKA,8BALA;AAMA,0CANA;AAOA,uBAPA;AAQA,mBARA;AASA,0BATA;AAUA,4BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,0BAbA;AAcA;AAdA;AAgBA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA,sCADA;AAEA,0BAFA;AAGA,kCAHA;AAIA,oCAJA;AAKA,8BALA;AAMA,0CANA;AAOA,uBAPA;AAQA,mBARA;AASA,0BATA;AAUA,4BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,0BAbA;AAcA;AAdA;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCADA;AAEA,0BAFA;AAGA,kCAHA;AAIA,oCAJA;AAKA,8BALA;AAMA,0CANA;AAOA,uBAPA;AAQA,mBARA;AASA,0BATA;AAUA,4BAVA;AAWA,4BAXA;AAYA,4BAZA;AAaA,0BAbA;AAcA;AAdA;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAHA,CAKA;;;AACA;AACA;AACA,iBARA,CASA;;AACA;;AAtBA,WApKA,CA4LA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,SAHA;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AA/CA;;AAkDA;AACA;AACA,IAEA;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA,IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA,kDAAkD,mFAAmF,uBAAuB,wFAAwF,qBAAqB,8BAA8B,OAAO;AAC9S;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACHnB;AACA,yBAAyB,aAAa;AACtC;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;;;;ACFnB,QAAuI;AACvI;;AAEA,QAAsI;AACtI;AACA,QAAgI;AAChI,QAA2H;AAC3H;AACA,QAAQ,iEAAe,0IAAS,CAAC,yIAAM,EAAE,6IAAQ,eAAe,EAAC;AACjE;AACA;;;;;;;;;;;;;;;;;;;ACVA,QAAuI;AACvI;;AAEA,QAAoI;AACpI;AACA,QAA8H;AAC9H,QAAyH;AACzH;AACA,QAAQ,iEAAe,0IAAS,CAAC,uIAAM,EAAE,2IAAQ,eAAe,EAAC;AACjE;AACA;;;;;;SCXA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA;UACA,iCAAiC,WAAW;UAC5C;UACA;;;;;UCPA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D","sources":["webpack:///../keyboard.ts","webpack:///../mouse.ts","webpack:///../status.ts","webpack:///../node_modules/.pnpm/tslib@2.3.1/node_modules/tslib/tslib.es6.js","webpack:///../css.ts","webpack:///../tailwindcss.ts","webpack:///./src/Button.san","webpack:///./src/Icon.san","webpack:///./node_modules/.pnpm/san-loader@0.3.1_webpack@5.53.0/node_modules/san-loader/lib/runtime/normalize.js","webpack:///./node_modules/.pnpm/san@3.10.10/node_modules/san/dist/index.js","webpack:///../src/util/guid.js","webpack:///../src/util/empty.js","webpack:///../src/util/extend.js","webpack:///../src/util/inherits.js","webpack:///../src/util/each.js","webpack:///../src/util/contains.js","webpack:///../src/util/bind.js","webpack:///../src/browser/on.js","webpack:///../src/browser/un.js","webpack:///../src/util/split-str-2-obj.js","webpack:///../src/browser/svg-tags.js","webpack:///../src/browser/create-el.js","webpack:///../src/browser/remove-el.js","webpack:///../src/util/next-tick.js","webpack:///../src/browser/ie.js","webpack:///../src/browser/ie-old-than-9.js","webpack:///../src/browser/trigger.js","webpack:///../src/browser/input-event-compatible.js","webpack:///../src/browser/auto-close-tags.js","webpack:///../src/util/data-types.js","webpack:///../src/util/create-data-types-checker.js","webpack:///../src/parser/walker.js","webpack:///../src/parser/expr-type.js","webpack:///../src/util/kebab2camel.js","webpack:///../src/browser/bool-attrs.js","webpack:///../src/parser/read-string.js","webpack:///../src/parser/read-ident.js","webpack:///../src/parser/read-tertiary-expr.js","webpack:///../src/parser/read-accessor.js","webpack:///../src/parser/read-call.js","webpack:///../src/parser/read-parenthesized-expr.js","webpack:///../src/parser/read-unary-expr.js","webpack:///../src/parser/read-multiplicative-expr.js","webpack:///../src/parser/read-additive-expr.js","webpack:///../src/parser/read-relational-expr.js","webpack:///../src/parser/read-equality-expr.js","webpack:///../src/parser/read-logical-and-expr.js","webpack:///../src/parser/read-logical-or-expr.js","webpack:///../src/parser/parse-expr.js","webpack:///../src/parser/parse-call.js","webpack:///../src/util/decode-html-entity.js","webpack:///../src/parser/parse-text.js","webpack:///../src/parser/parse-directive.js","webpack:///../src/parser/integrate-attr.js","webpack:///../src/parser/parse-template.js","webpack:///../src/util/handle-error.js","webpack:///../src/runtime/default-filters.js","webpack:///../src/runtime/eval-expr.js","webpack:///../src/runtime/eval-args.js","webpack:///../src/runtime/change-expr-compare.js","webpack:///../src/runtime/data-change-type.js","webpack:///../src/view/life-cycle.js","webpack:///../src/view/node-type.js","webpack:///../src/view/get-a-node-prop.js","webpack:///../src/view/get-prop-handler.js","webpack:///../src/view/is-data-change-by-element.js","webpack:///../src/runtime/find-method.js","webpack:///../src/runtime/data.js","webpack:///../src/view/get-event-listener.js","webpack:///../src/runtime/changes-is-in-data-ref.js","webpack:///../src/browser/insert-before.js","webpack:///../src/view/style-props.js","webpack:///../src/view/dom-children-walker.js","webpack:///../src/view/element.js","webpack:///../src/view/create-reverse-node.js","webpack:///../src/view/element-dispose-children.js","webpack:///../src/view/create-node.js","webpack:///../src/view/node-own-only-children-attach.js","webpack:///../src/view/template-node.js","webpack:///../src/view/node-own-create-stump.js","webpack:///../src/view/node-own-simple-dispose.js","webpack:///../src/view/async-component.js","webpack:///../src/view/reverse-element-children.js","webpack:///../src/view/preheat-el.js","webpack:///../src/view/element-get-transition.js","webpack:///../src/view/element-own-detach.js","webpack:///../src/view/element-own-dispose.js","webpack:///../src/view/element-own-on-el.js","webpack:///../src/browser/is-browser.js","webpack:///../src/util/warn.js","webpack:///../src/view/warn-event-listen-method.js","webpack:///../src/view/element-own-attached.js","webpack:///../src/view/node-s-bind-init.js","webpack:///../src/util/union-keys.js","webpack:///../src/view/node-s-bind-update.js","webpack:///../src/browser/no-set-html.js","webpack:///../src/view/warn-set-html.js","webpack:///../src/view/get-node-path.js","webpack:///../src/parser/unpack-anode.js","webpack:///../src/util/emit-devtool.js","webpack:///../src/view/component.js","webpack:///../src/view/define-component.js","webpack:///../src/view/component-loader.js","webpack:///../src/view/parse-component-template.js","webpack:///../src/browser/hot-tags.js","webpack:///../src/view/is-end-stump.js","webpack:///../src/view/text-node.js","webpack:///../src/view/slot-node.js","webpack:///../src/view/for-node.js","webpack:///../src/view/if-node.js","webpack:///../src/view/is-node.js","webpack:///../src/view/preheat-a-node.js","webpack:///../src/view/create-component-loader.js","webpack:///./src/Button.san?53d3","webpack:///./src/Icon.san?3e4f","webpack:///./src/Button.san?74bf","webpack:///./src/Icon.san?4225","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/mod.js"],"sourcesContent":["var keyboardMapper = function (options) {\n    var status = options.status;\n    if (status.states.indexOf('disable') > -1)\n        return status;\n    if (options.event.keyCode !== options.keycode)\n        return status;\n    switch (options.event.type) {\n        case 'keydown':\n            status.setState('active');\n            break;\n        case 'keyup':\n            status.unsetState('active');\n            break;\n    }\n    return status;\n};\nexport default keyboardMapper;\n","var mouseMapper = function (options) {\n    var status = options.status;\n    if (status.states.indexOf('disable') > -1)\n        return status;\n    switch (options.event.type) {\n        case 'mouseenter':\n            status.setState('hover');\n            break;\n        case 'mouseleave':\n            status.unsetState('hover');\n            break;\n        case 'mousedown':\n            status.setState('active');\n            break;\n        case 'mouseup':\n            status.unsetState('active');\n            break;\n    }\n    return status;\n};\nexport default mouseMapper;\n","var Status = /** @class */ (function () {\n    function Status(props, states) {\n        if (props === void 0) { props = {}; }\n        if (states === void 0) { states = ['default']; }\n        this.props = props;\n        this.states = states;\n    }\n    Status.prototype.setProps = function (stateProps) {\n        this.props = stateProps;\n        return this;\n    };\n    Status.prototype.setStates = function (newStates) {\n        this.states = newStates;\n        return this;\n    };\n    Status.prototype.setState = function (newState) {\n        var _this = this;\n        if (this.props && this.props[newState] && this.states.indexOf(newState) === -1) {\n            if (this.props[newState].overlap) {\n                this.states.push(newState);\n            }\n            else {\n                this.states = this.states.filter(function (state) { return _this.props[state].overlap == true; });\n                this.states.unshift(newState);\n            }\n        }\n        return this;\n    };\n    Status.prototype.unsetState = function (existedState) {\n        if (this.props && this.props[existedState] && this.states.indexOf(existedState) > -1) {\n            this.states = this.states.filter(function (item) { return item !== existedState; });\n            if (this.props[existedState].overlap !== true) {\n                this.states.unshift('default');\n            }\n        }\n        return this;\n    };\n    return Status;\n}());\nexport { Status };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __spreadArray } from \"tslib\";\nexport default function (status) {\n    return __spreadArray(['base'], status.states, true).map(function (state) { var _a; return ((_a = status.props[state]) === null || _a === void 0 ? void 0 : _a.classes) || ''; }).join(' ');\n}\n","import { __spreadArray } from \"tslib\";\nexport default function (status) {\n    var rs = [];\n    var classes = [];\n    var cls = [];\n    __spreadArray(['base'], status.states, true).forEach(function (state) {\n        var _a;\n        var c = ((_a = status.props[state]) === null || _a === void 0 ? void 0 : _a.classes) || '';\n        var l = {};\n        c.split(/\\s/).forEach(function (className) {\n            var nameWithoutVariant = className.split(':').pop().split(/-\\d+$/).shift();\n            var part = nameWithoutVariant.split('-');\n            var key = part[0];\n            if (part[1] && ['x', 'y', 'w', 'h', 'cols', 'rows', 'span', 'clip', 'opacity', 'repeat'].indexOf(part[1]) > -1) {\n                key += '-' + part[1];\n            }\n            l[key] = l[key] || [];\n            l[key].push(className);\n        });\n        rs.push(l);\n    });\n    var merged = Object.assign.apply(Object, __spreadArray([{}], rs, false));\n    Object.keys(merged).forEach(function (key) {\n        classes.push(merged[key].join(' '));\n    });\n    return classes.join(' ');\n}\n","<template>\n  <div style=\"display: inline-flex;\">\n    <button s-ref=\"myBtn\" class=\"px-12 py-5 bw-2 br-5 text-white weight {{ status | tailwindcss }}\" on-mousedown=\"mouseHandler\" on-mouseup=\"mouseHandler\">\n      <my-icon type=\"{{ isDisabled ? 1 : 0 }}\"></my-icon>\n      <span>{{ text }}</span>\n    </button>\n  </div>\n</template>\n\n<script>\nimport { mouse, keyboard } from \"@atomic-class/action\";\nimport { tailwindcss } from \"@atomic-class/process\";\nimport { Status } from \"@atomic-class/core\";\n\nimport Icon from \"./Icon.san\";\n\nexport default {\n  components: {\n    \"my-icon\": Icon,\n  },\n\n  computed: {\n    status() {\n      return new Status(this.data.get(\"props\"), this.data.get(\"states\"));\n    },\n    isDisabled() {\n      return this.data.get(\"states\").includes(\"disable\");\n    }\n  },\n\n  filters: {\n    tailwindcss,\n  },\n\n  initData() {\n    return {\n      states: [\"default\"],\n      props: {\"default\":{\"classes\":\"bg-black-700\",\"overlap\":false},\"hover\":{\"classes\":\"bg-blue cursor-pointer\",\"overlap\":false},\"active\":{\"classes\":\"bg-purple\",\"overlap\":true},\"disable\":{\"classes\":\"bg-black-400 text-white-900 cursor-not-allowed\",\"overlap\":true}},\n\n      keycode: 0,\n      text: \"\",\n    };\n  },\n\n  created() {\n    document.addEventListener(\"keydown\", this.keyboardHandler.bind(this));\n    document.addEventListener(\"keyup\", this.keyboardHandler.bind(this));\n  },\n\n  attached() {\n    const myBtn = this.ref(\"myBtn\");\n\n    myBtn.addEventListener(\"mouseenter\", this.mouseHandler.bind(this));\n    myBtn.addEventListener(\"mouseleave\", this.mouseHandler.bind(this));\n  },\n\n  keyboardHandler(event) {\n    const keycode = this.data.get(\"keycode\");\n    this.data.apply(\n      \"status\",\n      (status) => keyboard({ status, event, keycode }),\n      { force: true }\n    );\n  },\n\n  mouseHandler(event) {\n    this.data.apply(\"status\", (status) => mouse({ status, event }), {\n      force: true,\n    });\n  },\n};\n</script>\n","<template>\n  <span>{{ icon[type] }}</span>\n</template>\n\n<script>\nexport default {\n  initData() {\n    return {\n      icon: \"☑☒★☆♂♀☎☏✄☪☣☢☠♨\",\n      type: 0,\n    };\n  },\n};\n</script>\n","/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file normalize.js\n * @author clark-t\n */\n\n/* eslint-disable prefer-rest-params */\n\nvar defineComponent = require('san').defineComponent;\n\n/**\n * 处理 .san 组件 script 与 template 等部分的组合方法\n *\n * @param {Object|Function} script 组件 script 部分\n * @param {string} template 组件 template 部分的文本\n * @param {string} injectStyles 组件需要注入的 style 列表\n * @return {Class} 组件类\n */\nmodule.exports = function (script, template, injectStyles) {\n    var dfns = componentDefinitions(script);\n    for (var i = 0; i < dfns.length; i++) {\n        if (template) {\n            if (typeof template === 'string') {\n                dfns[i].template = template;\n            }\n            else if (template instanceof Array) {\n                dfns[i].aPack = template;\n            }\n            else {\n                dfns[i].aNode = template;\n            }\n        }\n        if (injectStyles.length) {\n            injectStylesIntoInitData(dfns[i], injectStyles);\n        }\n    }\n\n    return typeof script === 'object' ? defineComponent(script) : script;\n};\n\nfunction injectStylesIntoInitData(proto, injectStyles) {\n    var style = {};\n    for (var i = 0; i < injectStyles.length; i++) {\n        objectAssign(style, injectStyles[i]);\n    }\n    var original = proto.initData;\n    proto.initData = original\n        ? function () {\n            return objectAssign({}, original.call(this), {$style: style});\n        }\n        : function () {\n            return {$style: style};\n        };\n}\n\nfunction componentDefinitions(cmpt) {\n    // 当 script 为 Function 时，等价于 class A { static template = 'xxx' }\n    // 可查看 static property 的 babel 编译产物\n    var dfns = [cmpt];\n    // 对于联合 san-store 的情况，需要同时将 template, inited 等挂到原型链上\n    if (typeof cmpt === 'function') {\n        dfns.push(cmpt.prototype);\n        if (cmpt.prototype.constructor) {\n            dfns.push(cmpt.prototype.constructor.prototype);\n        }\n    }\n    return dfns;\n}\n\n// 参考：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nfunction objectAssign(target) {\n    'use strict';\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n            for (var nextKey in nextSource) {\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\n","if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./san.js');\n} else {\n    module.exports = require('./san.dev.js');\n}\n","/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file San 主文件\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/get-event-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 唯一id\n */\n\n\n/**\n * 获取唯一id\n *\n * @type {number} 唯一id\n */\nvar guid = 1;\n\n// exports = module.exports = guid;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 空函数\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 属性拷贝\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        /* istanbul ignore else  */\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 构建类之间的继承关系\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 遍历数组\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 判断数组中是否包含某项\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file bind函数\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    /* istanbul ignore next */\n    var args = slice.call(arguments, 2);\n    /* istanbul ignore next */\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file DOM 事件挂载\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    /* istanbul ignore else */\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file DOM 事件卸载\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    /* istanbul ignore else */\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 将字符串逗号切分返回对象\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = key;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file SVG标签表\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // Animation elements\n    + 'animate,animateMotion,animateTransform,'\n\n    // Basic shapes\n    + 'circle,ellipse,line,polygon,polyline,rect,'\n\n    // Container elements\n    + 'defs,g,marker,mask,missing-glyph,pattern,svg,symbol,'\n\n    // Descriptive elements\n    + 'desc,metadata,'\n\n    // Font elements\n    + 'font,font-face,'\n\n    // Gradient elements\n    + 'linearGradient,radialGradient,stop,'\n\n    // Graphics elements\n    + 'image,path,use,'\n\n    // Text elements\n    + 'glyph,textPath,text,tref,tspan,'\n\n    // Others\n    + 'clipPath,cursor,filter,foreignObject,view'\n);\n\n\n// exports = module.exports = svgTags;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file DOM创建\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName] && document.createElementNS) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 移除DOM\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 在下一个时间周期运行任务\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 浏览器是否支持原生setImmediate\n *\n * @inner\n * @type {boolean}\n */\nvar isNativeSetImmediate = typeof setImmediate === 'function' && /native code/.test(setImmediate);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    /* istanbul ignore next */\n    if (isNativeSetImmediate) {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file ie版本号\n */\n\n// #[begin] allua\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/(msie|trident)(\\s*|\\/)([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? /* istanbul ignore next */ ieVersionMatch[3] - 0 : 0;\nif (ie && !/msie/i.test(ieVersionMatch[1])) {\n    ie += 4;\n}\n// #[end]\n\n// exports = module.exports = ie;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 是否 IE 并且小于 9\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && /* istanbul ignore next */ ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 触发元素事件\n */\n\n/**\n * 触发元素事件\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\n/* istanbul ignore if */\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 自闭合标签表\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file data types\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n    // 不支持element了。data应该是纯数据\n    // if (obj && obj.nodeType === 1) {\n    //     return 'element';\n    // }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    /* istanbul ignore next */\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    validate = validate || empty;\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        /* istanbul ignore next */\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : /* istanbul ignore next */ ANONYMOUS_CLASS_NAME;\n\n        /* istanbul ignore next */\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            /* istanbul ignore else  */\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            /* istanbul ignore else  */\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            /* istanbul ignore else  */\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(),\n    object: createChainableChecker(),\n    func: createChainableChecker(),\n    string: createChainableChecker(),\n    number: createChainableChecker(),\n    bool: createChainableChecker(),\n    symbol: createChainableChecker(),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 创建数据检测函数\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n            /* istanbul ignore else  */\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 字符串源码读取类\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.index++;\n    return this.source.charCodeAt(this.index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n * 未指定字符时，当遇到第一个非空格、制表符的字符停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.source.charCodeAt(this.index))) {\n        switch (code) {\n            case 32: // 空格 space\n            case 9: // 制表符 tab\n            case 13: // \\r\n            case 10: // \\n\n                this.index++;\n                break;\n\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @param {boolean} isMatchStart 是否必须匹配当前位置\n * @return {Array?}\n */\nWalker.prototype.match = function (reg, isMatchStart) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match && (!isMatchStart || this.index === match.index)) {\n        this.index = reg.lastIndex;\n        return match;\n    }\n};\n\n// exports = module.exports = Walker;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 表达式类型\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10,\n    OBJECT: 11,\n    ARRAY: 12,\n    NULL: 13\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 把 kebab case 字符串转换成 camel case\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-+(.)/ig, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file bool属性表\n */\n\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * bool属性表\n *\n * @type {Object}\n */\nvar boolAttrs = splitStr2Obj(\n    'allowpaymentrequest,async,autofocus,autoplay,'\n    + 'checked,controls,default,defer,disabled,formnovalidate,'\n    + 'hidden,ismap,itemscope,loop,multiple,muted,nomodule,novalidate,'\n    + 'open,readonly,required,reversed,selected,typemustmatch'\n);\n\n// exports = module.exports = boolAttrs;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取字符串\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.source.charCodeAt(walker.index);\n    var value = \"\";\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                charCode = walker.nextCode();\n\n                switch (charCode) {\n                    case 117: // \\u\n                        value += String.fromCharCode(parseInt(\n                            walker.source.slice(walker.index + 1, walker.index + 5), 16\n                        ));\n                        walker.index += 4;\n                        break;\n\n                    case 120: // \\x\n                        value += String.fromCharCode(parseInt(\n                            walker.source.slice(walker.index + 1, walker.index + 3), 16\n                        ));\n                        walker.index += 2;\n                        break;\n\n                    case 98:\n                        value += '\\b';\n                        break;\n                    case 102:\n                        value += '\\f';\n                        break;\n                    case 110:\n                        value += '\\n';\n                        break;\n                    case 114:\n                        value += '\\r';\n                        break;\n                    case 116:\n                        value += '\\t';\n                        break;\n                    case 118:\n                        value += '\\v';\n                        break;\n\n                    default:\n                        value += String.fromCharCode(charCode);\n                }\n\n                break;\n            case startCode:\n                walker.index++;\n                break walkLoop;\n            default:\n                value += String.fromCharCode(charCode);\n        }\n    }\n\n    return {\n        type: 1,\n        // 处理字符转义\n        value: value\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取ident\n */\n\n/**\n * 读取ident\n * 这里的 ident 指标识符(identifier)，也就是通常意义上的变量名\n * 这里默认的变量名规则为：由美元符号($)、数字、字母或者下划线(_)构成的字符串\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig, 1);\n\n    // #[begin] error\n    if (!match) {\n        throw new Error('[SAN FATAL] expect an ident: ' + walker.source.slice(walker.index));\n    }\n    // #[end]\n\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取三元表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.source.charCodeAt(walker.index) === 63) { // ?\n        walker.index++;\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.source.charCodeAt(walker.index) === 58) { // :\n            walker.index++;\n            return {\n                type: 10,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取访问表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: 3,\n                value: firstSeg === 'true'\n            };\n        case 'null':\n            return {\n                type: 13\n            };\n    }\n\n    var result = {\n        type: 4,\n        paths: [\n            {type: 1, value: firstSeg}\n        ]\n    };\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.source.charCodeAt(walker.index)) {\n            case 46: // .\n                walker.index++;\n\n                // ident as string\n                result.paths.push({\n                    type: 1,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.index++;\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取调用\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var result = readAccessor(walker);\n\n    var args;\n    if (walker.goUntil(40)) { // (\n        args = [];\n\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    if (args) {\n        result = {\n            type: 6,\n            name: result,\n            args: args\n        };\n    }\n\n    return result;\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取括号表达式\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.index++;\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    expr.parenthesized = true;\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取一元表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readCall = require('./read-call');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\nfunction postUnaryExpr(expr, operator) {\n    switch (operator) {\n        case 33:\n            var value;\n            switch (expr.type) {\n                case 2:\n                case 1:\n                case 3:\n                    value = !expr.value;\n                    break;\n                case 12:\n                case 11:\n                    value = false;\n                    break;\n                case 13:\n                    value = true;\n                    break;\n            }\n\n            if (value != null) {\n                return {\n                    type: 3,\n                    value: value\n                };\n            }\n            break;\n\n        case 43:\n            switch (expr.type) {\n                case 2:\n                case 1:\n                case 3:\n                    return {\n                        type: 2,\n                        value: +expr.value\n                    };\n            }\n            break;\n\n        case 45:\n            switch (expr.type) {\n                case 2:\n                case 1:\n                case 3:\n                    return {\n                        type: 2,\n                        value: -expr.value\n                    };\n            }\n            break;\n    }\n\n    return {\n        type: 9,\n        expr: expr,\n        operator: operator\n    };\n}\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    var currentCode = walker.source.charCodeAt(walker.index);\n    switch (currentCode) {\n        case 33: // !\n        case 43: // +\n        case 45: // -\n            walker.index++;\n            return postUnaryExpr(readUnaryExpr(walker), currentCode);\n\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n\n        case 48: // number\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return {\n                type: 2,\n                value: +(walker.match(/[0-9]+(\\.[0-9]+)?/g, 1)[0])\n            };\n\n        case 40: // (\n            return readParenthesizedExpr(walker);\n\n        // array literal\n        case 91: // [\n            walker.index++;\n            var arrItems = [];\n            while (!walker.goUntil(93)) { // ]\n                var item = {};\n                arrItems.push(item);\n\n                if (walker.source.charCodeAt(walker.index) === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                }\n\n                item.expr = readTertiaryExpr(walker);\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: 12,\n                items: arrItems\n            };\n\n        // object literal\n        case 123: // {\n            walker.index++;\n            var objItems = [];\n\n            while (!walker.goUntil(125)) { // }\n                var item = {};\n                objItems.push(item);\n\n                if (walker.source.charCodeAt(walker.index) === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                    item.expr = readTertiaryExpr(walker);\n                }\n                else {\n                    // #[begin] error\n                    var walkerIndexBeforeName = walker.index;\n                    // #[end]\n\n                    item.name = readUnaryExpr(walker);\n\n                    // #[begin] error\n                    if (item.name.type > 4) {\n                        throw new Error(\n                            '[SAN FATAL] unexpect object name: '\n                            + walker.source.slice(walkerIndexBeforeName, walker.index)\n                        );\n                    }\n                    // #[end]\n\n                    if (walker.goUntil(58)) { // :\n                        item.expr = readTertiaryExpr(walker);\n                    }\n                    else {\n                        item.expr = item.name;\n                    }\n\n                    if (item.name.type === 4) {\n                        item.name = item.name.paths[0];\n                    }\n                }\n\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: 11,\n                items: objItems\n            };\n    }\n\n    return readCall(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取乘法表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.source.charCodeAt(walker.index);\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.index++;\n                expr = {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取加法表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.source.charCodeAt(walker.index);\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.index++;\n                expr = {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取关系判断表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.source.charCodeAt(walker.index);\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.index++;\n            }\n\n            return {\n                type: 8,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取相等比对表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.source.charCodeAt(walker.index);\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.index++;\n                }\n\n                return {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.index--;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取逻辑与表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.source.charCodeAt(walker.index) === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.index++;\n            return {\n                type: 8,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.index--;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 读取逻辑或表达式\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.source.charCodeAt(walker.index) === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.index++;\n            return {\n                type: 8,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.index--;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析表达式\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (!source) {\n        return;\n    }\n\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    return readTertiaryExpr(new Walker(source));\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析调用\n */\n\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n\n    if (expr.type !== 6) {\n        expr = {\n            type: 6,\n            name: expr,\n            args: defaultArgs || []\n        };\n    }\n    \n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解码 HTML 字符实体\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: '\\u00a0',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#(x[0-9a-f]+|[0-9]+);/g, function (match, code) {\n            if (code.charCodeAt(0) === 120) { // x\n                return String.fromCharCode(parseInt(code.slice(1), 16));\n            }\n            return String.fromCharCode(+code);\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析文本\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var segs = [];\n    var segIndex = -1;\n    var original;\n\n    function pushString(value) {\n        var current = segs[segIndex];\n        if (!current || current.type !== 1) {\n            segs[++segIndex] = {\n                type: 1,\n                value: value\n            };\n        }\n        else {\n            current.value = current.value + value; \n        }\n    }\n\n    var delimStart = delimiters[0];\n    var delimStartLen = delimStart.length;\n    var delimEnd = delimiters[1];\n    var delimEndLen = delimEnd.length;\n    while (1) {\n        var delimStartIndex = walker.source.indexOf(delimStart, walker.index);\n        var delimEndIndex = walker.source.indexOf(delimEnd, walker.index);\n        if (delimStartIndex === -1 || delimEndIndex < delimStartIndex) {\n            break;\n        }\n\n        // pushStringToSeg\n        var strValue = walker.source.slice(\n            beforeIndex,\n            delimStartIndex\n        );\n        strValue && pushString(decodeHTMLEntity(strValue));\n\n        // pushInterpToSeg\n        if (walker.source.indexOf(delimEnd, delimEndIndex + 1) === delimEndIndex + 1) {\n            delimEndIndex++;\n        }\n\n        var interpWalker = new Walker(walker.source.slice(delimStartIndex + delimStartLen, delimEndIndex));\n        if (!interpWalker.goUntil(125) && interpWalker.index < interpWalker.len) {\n            var interp = {\n                type: 5,\n                expr: readTertiaryExpr(interpWalker),\n                filters: []\n            };\n            while (interpWalker.goUntil(124)) { // |\n                var callExpr = readCall(interpWalker, []);\n                switch (callExpr.name.paths[0].value) {\n                    case 'html':\n                        break;\n                    case 'raw':\n                        interp.original = 1;\n                        break;\n                    default:\n                        interp.filters.push(callExpr);\n                }\n            }\n    \n            original = original || interp.original;\n            segs[++segIndex] = interp;\n        }\n        else {\n            pushString(delimStart + interpWalker.source + delimEnd);\n        }\n\n        beforeIndex = walker.index = delimEndIndex + delimEndLen;\n    }\n\n    // pushStringToSeg\n    var strValue = walker.source.slice(beforeIndex);\n    strValue && pushString(decodeHTMLEntity(strValue));\n\n    switch (segs.length) {\n        case 0:\n            return {\n                type: 1,\n                value: ''\n            };\n\n        case 1:\n            if (segs[0].type === 5 && segs[0].filters.length === 0 && !segs[0].original) {\n                return segs[0].expr;\n            }\n            return segs[0];\n    }\n\n    return original ? {\n        type: 7,\n        segs: segs,\n        original: 1\n    } : {\n        type: 7,\n        segs: segs\n    };\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析指令\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 解析指令\n *\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(name, value, options) {\n    switch (name) {\n        case 'is':\n        case 'show':\n        case 'html':\n        case 'bind':\n        case 'if':\n        case 'elif':\n            return {\n                value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            };\n\n        case 'else':\n            return {\n                value: {}\n            };\n        \n        case 'transition': \n            return {\n                value: parseCall(value)\n            };\n\n        case 'ref':\n            return {\n                value: parseText(value, options.delimiters)\n            };\n\n        case 'for':\n            var walker = new Walker(value);\n            var match = walker.match(/^\\s*([$0-9a-z_]+)(\\s*,\\s*([$0-9a-z_]+))?\\s+in\\s+/ig, 1);\n    \n            if (match) {\n                var directive = {\n                    item: match[1],\n                    value: readUnaryExpr(walker)\n                };\n    \n                if (match[3]) {\n                    directive.index = match[3];\n                }\n    \n                if (walker.match(/\\s*trackby\\s+/ig, 1)) {\n                    var start = walker.index;\n                    directive.trackBy = readAccessor(walker);\n                    directive.trackByRaw = walker.source.slice(start, walker.index);\n                }\n                return directive;\n            }\n    \n            // #[begin] error\n            throw new Error('[SAN FATAL] for syntax error: ' + value);\n            // #[end]\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析抽象节点属性\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var boolAttrs = require('../browser/bool-attrs');\n// var ExprType = require('./expr-type');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                {\n                    type: 4,\n                    paths: [\n                        {type: 1, value: '$event'}\n                    ]\n                }\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            if (realName === 'else-if') {\n                realName = 'elif';\n            }\n            var directiveValue = parseDirective(realName, value, options);\n            directiveValue && (aNode.directives[realName] = directiveValue);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            if (prefix === 'prop') {\n                name = realName;\n            }\n\n            // parse two way binding, e.g. value=\"{=ident=}\"\n            if (value && value.indexOf('{=') === 0 && value.slice(-2) === '=}') {\n                aNode.props.push({\n                    name: name,\n                    expr: parseExpr(value.slice(2, -2)),\n                    x: 1\n                });\n\n                return;\n            }\n\n            var expr = parseText(value || '', options.delimiters);\n            if (expr.value === '') {\n                if (boolAttrs[name]) {\n                    expr = {\n                        type: 3,\n                        value: true\n                    };\n                }\n            }\n            else {\n                switch (name) {\n                    case 'class':\n                    case 'style':\n\n                        switch (expr.type) {\n                            case 7:\n                                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                                    if (expr.segs[i].type === 5) {\n                                        expr.segs[i].filters.push({\n                                            type: 6,\n                                            name: {\n                                                type: 4,\n                                                paths: [\n                                                    {type: 1, value: '_' + name}\n                                                ]\n                                            },\n                                            args: []\n                                        });\n                                    }\n                                }\n                                break;\n\n                            case 5:\n                                expr.filters.push({\n                                    type: 6,\n                                    name: {\n                                        type: 4,\n                                        paths: [\n                                            {type: 1, value: '_' + name}\n                                        ]\n                                    },\n                                    args: []\n                                });\n                                break;\n\n                            default:\n                                if (expr.type !== 1) {\n                                    expr = {\n                                        type: 5,\n                                        expr: expr,\n                                        filters: [{\n                                            type: 6,\n                                            name: {\n                                                type: 4,\n                                                paths: [\n                                                    {type: 1, value: '_' + name}\n                                                ]\n                                            },\n                                            args: []\n                                        }]\n                                    }\n                                }\n                        }\n                }\n\n            }\n\n            aNode.props.push(\n                value != null\n                    ? {name: name, expr: expr}\n                    : {name: name, expr: expr, noValue: 1}\n            );\n    }\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析模板\n */\n\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var svgTags = require('../browser/svg-tags');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = {\n        directives: {},\n        props: [],\n        events: [],\n        children: []\n    };\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '');\n    var walker = new Walker(source);\n    walker.goUntil();\n\n    var tagReg = /<(\\/)?([a-z][a-z0-9-]*)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\[\\]_]+)(\\s*=\\s*(([^'\"<>\\s]+)|\"([^\"]*?)\"|'([^']*?)'))?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = walker.index;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagMatchStart = walker.index - tagMatch[0].length;\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2];\n        if (!svgTags[tagName]) {\n            tagName = tagName.toLowerCase();\n        }\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd) {\n            if (walker.source.charCodeAt(walker.index) === 62) {\n                // 满足关闭标签的条件时，关闭标签\n                // 向上查找到对应标签，找不到时忽略关闭\n                var closeIndex = stackIndex;\n\n                // #[begin] error\n                // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n                if (autoCloseTags[tagName]) {\n                    throw new Error(''\n                        + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                        + 'so it cannot be closed with </' + tagName + '>'\n                    );\n                }\n\n                // 如果关闭的 tag 和当前打开的不一致，报错\n                if (\n                    stack[closeIndex].tagName !== tagName\n                    // 这里要把 table 自动添加 tbody 的情况给去掉\n                    && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n                ) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n                }\n                // #[end]\n\n\n                pushTextNode(source.slice(beforeLastIndex, tagMatchStart));\n                while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                    closeIndex--;\n                }\n\n                if (closeIndex > 0) {\n                    stackIndex = closeIndex - 1;\n                    currentNode = stack[stackIndex];\n                }\n                walker.index++;\n            }\n            // #[begin] error\n            else {\n                // 处理 </xxx 非正常闭合标签\n\n                // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n                if (walker.source.charCodeAt(walker.index) === 60) {\n                    throw new Error(''\n                        + '[SAN ERROR] ' + getXPath(stack)\n                        + '\\'s close tag not closed'\n                    );\n                }\n\n                // 闭合标签有属性\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag has attributes'\n                );\n            }\n            // #[end]\n        }\n        else {\n            var aElement = {\n                directives: {},\n                props: [],\n                events: [],\n                children: [],\n                tagName: tagName\n            };\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.source.charCodeAt(walker.index);\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.index++;\n                    break;\n                }\n\n                // 遇到 /> 按闭合处理\n                if (nextCharCode === 47\n                    && walker.source.charCodeAt(walker.index + 1) === 62\n                ) {\n                    walker.index += 2;\n                    tagClose = 1;\n                    break;\n                }\n\n                // template 串结束了\n                // 这时候，说明这个读取周期的所有内容，都是text\n                if (!nextCharCode) {\n                    pushTextNode(walker.source.slice(beforeLastIndex));\n                    aElement = null;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg, 1);\n                if (attrMatch) {\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? (attrMatch[5] || attrMatch[6] || attrMatch[4] || '') : void(0),\n                        options\n                    );\n                }\n                else {\n                    pushTextNode(walker.source.slice(beforeLastIndex, walker.index));\n                    aElement = null;\n                    break;\n                }\n            }\n\n            if (aElement) {\n                pushTextNode(source.slice(beforeLastIndex, tagMatchStart));\n\n                // handle show directive, append expr to style prop\n                if (aElement.directives.show) {\n                    // find style prop\n                    var styleProp = null;\n                    var propsLen = aElement.props.length;\n                    while (propsLen--) {\n                        if (aElement.props[propsLen].name === 'style') {\n                            styleProp = aElement.props[propsLen];\n                            break;\n                        }\n                    }\n\n                    var showStyleExpr = {\n                        type: 10,\n                        segs: [\n                            aElement.directives.show.value,\n                            {type: 1, value: ''},\n                            {type: 1, value: ';display:none;'}\n                        ]\n                    };\n\n                    if (styleProp) {\n                        if (styleProp.expr.type === 7) {\n                            styleProp.expr.segs.push(showStyleExpr);\n                        }\n                        else {\n                            aElement.props[propsLen].expr = {\n                                type: 7,\n                                segs: [\n                                    styleProp.expr,\n                                    showStyleExpr\n                                ]\n                            };\n                        }\n                    }\n                    else {\n                        aElement.props.push({\n                            name: 'style',\n                            expr: showStyleExpr\n                        });\n                    }\n                }\n\n                // match if directive for else/elif directive\n                var elseDirective = aElement.directives['else'] // eslint-disable-line dot-notation\n                    || aElement.directives.elif;\n\n                if (elseDirective) {\n                    var parentChildrenLen = currentNode.children.length;\n                    var ifANode = null;\n\n                    while (parentChildrenLen--) {\n                        var parentChild = currentNode.children[parentChildrenLen];\n                        if (parentChild.textExpr) {\n                            currentNode.children.splice(parentChildrenLen, 1);\n                            continue;\n                        }\n\n                        ifANode = parentChild;\n                        break;\n                    }\n\n                    // #[begin] error\n                    if (!ifANode || !parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    if (ifANode) {\n                        ifANode.elses = ifANode.elses || [];\n                        ifANode.elses.push(aElement);\n                    }\n                }\n                else {\n                    if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                        var tbodyNode = {\n                            directives: {},\n                            props: [],\n                            events: [],\n                            children: [],\n                            tagName: 'tbody'\n                        };\n                        currentNode.children.push(tbodyNode);\n                        currentNode = tbodyNode;\n                        stack[++stackIndex] = tbodyNode;\n                    }\n\n                    currentNode.children.push(aElement);\n                }\n\n                if (!tagClose) {\n                    currentNode = aElement;\n                    stack[++stackIndex] = aElement;\n                }\n            }\n\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.source.slice(beforeLastIndex).replace(/^\\s+$/, ''));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            var expr = parseText(text, options.delimiters);\n            var lastChild = currentNode.children[currentNode.children.length - 1];\n            var textExpr = lastChild && lastChild.textExpr;\n\n            if (textExpr) {\n                if (textExpr.segs) {\n                    textExpr.segs = textExpr.segs.concat(expr.segs || expr);\n                }\n                else if (textExpr.value != null && expr.value != null) {\n                    textExpr.value = textExpr.value + expr.value;\n                }\n                else {\n                    lastChild.textExpr = {\n                        type: 7,\n                        segs: [textExpr].concat(expr.segs || expr)\n                    };\n                }\n            }\n            else {\n                currentNode.children.push({\n                    textExpr: expr\n                });\n            }\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 处理组件异常\n */\n\n\nfunction handleError(e, component, info) {\n    var current = component;\n\n    while (current) {\n        if (typeof current.error === 'function') {\n            current.error(e, component, info);\n            return;\n        }\n\n        current = current.parentComponent\n    }\n\n    throw e;\n}\n\n// exports = module.exports = handleError;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 默认filter\n */\n\n\n/* eslint-disable fecs-camelcase */\n\n\nfunction defaultStyleFilter(source) {\n    if (typeof source === 'object') {\n        var result = '';\n        for (var key in source) {\n            /* istanbul ignore else  */\n            if (source.hasOwnProperty(key)) {\n                result += key + ':' + source[key] + ';';\n            }\n        }\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n    _style: defaultStyleFilter,\n\n    _xclass: function (outer, inner) {\n        if (outer instanceof Array) {\n            outer = outer.join(' ');\n        }\n\n        if (outer) {\n            if (inner) {\n                return inner + ' ' + outer;\n            }\n\n            return outer;\n        }\n\n        return inner;\n    },\n\n    _xstyle: function (outer, inner) {\n        outer = outer && defaultStyleFilter(outer);\n        if (outer) {\n            if (inner) {\n                return inner + ';' + outer;\n            }\n\n            return outer;\n        }\n\n        return inner;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 表达式计算\n */\n\n// var ExprType = require('../parser/expr-type');\n// var extend = require('../util/extend');\n// var handleError = require('../util/handle-error');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value;\n\n    switch (expr.type) {\n        case 13:\n            return null;\n\n        case 9:\n            value = evalExpr(expr.expr, data, owner);\n            switch (expr.operator) {\n                case 33:\n                    value = !value;\n                    break;\n\n                case 43:\n                    value = +value;\n                    break;\n\n                case 45:\n                    value = 0 - value;\n                    break;\n            }\n            return value;\n\n        case 8:\n            value = evalExpr(expr.segs[0], data, owner);\n            var rightValue = evalExpr(expr.segs[1], data, owner);\n\n            /* eslint-disable eqeqeq */\n            switch (expr.operator) {\n                case 37:\n                    value = value % rightValue;\n                    break;\n\n                case 43:\n                    value = value + rightValue;\n                    break;\n\n                case 45:\n                    value = value - rightValue;\n                    break;\n\n                case 42:\n                    value = value * rightValue;\n                    break;\n\n                case 47:\n                    value = value / rightValue;\n                    break;\n\n                case 60:\n                    value = value < rightValue;\n                    break;\n\n                case 62:\n                    value = value > rightValue;\n                    break;\n\n                case 76:\n                    value = value && rightValue;\n                    break;\n\n                case 94:\n                    value = value != rightValue;\n                    break;\n\n                case 121:\n                    value = value <= rightValue;\n                    break;\n\n                case 122:\n                    value = value == rightValue;\n                    break;\n\n                case 123:\n                    value = value >= rightValue;\n                    break;\n\n                case 155:\n                    value = value !== rightValue;\n                    break;\n\n                case 183:\n                    value = value === rightValue;\n                    break;\n\n                case 248:\n                    value = value || rightValue;\n                    break;\n\n            }\n            /* eslint-enable eqeqeq */\n            return value;\n\n        case 10:\n            return evalExpr(\n                expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                data,\n                owner\n            );\n\n\n        case 12:\n            value = [];\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                var item = expr.items[i];\n                var itemValue = evalExpr(item.expr, data, owner);\n\n                if (item.spread) {\n                    itemValue && (value = value.concat(itemValue));\n                }\n                else {\n                    value.push(itemValue);\n                }\n            }\n            return value;\n\n        case 11:\n            value = {};\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                var item = expr.items[i];\n                var itemValue = evalExpr(item.expr, data, owner);\n\n                if (item.spread) {\n                    itemValue && extend(value, itemValue);\n                }\n                else {\n                    value[evalExpr(item.name, data, owner)] = itemValue;\n                }\n            }\n            return value;\n\n        case 4:\n            return data.get(expr);\n\n\n        case 5:\n            value = evalExpr(expr.expr, data, owner);\n\n            if (owner) {\n                for (var i = 0, l = expr.filters.length; i < l; i++) {\n                    var filter = expr.filters[i];\n                    var filterName = filter.name.paths[0].value;\n\n                    switch (filterName) {\n                        case 'url':\n                        case '_class':\n                        case '_style':\n                            value = DEFAULT_FILTERS[filterName](value);\n                            break;\n\n                        case '_xclass':\n                        case '_xstyle':\n                            value = DEFAULT_FILTERS[filterName](value, evalExpr(filter.args[0], data, owner));\n                            break;\n\n                        default:\n                            try {\n                                value = owner.filters[filterName] && owner.filters[filterName].apply(\n                                    owner,\n                                    [value].concat(evalArgs(filter.args, data, owner))\n                                );\n                            }\n                            catch (e) {\n                                handleError(e, owner, 'filter:' + filterName);\n                            }\n                    }\n                }\n            }\n\n            if (value == null) {\n                value = '';\n            }\n\n            return value;\n\n        case 6:\n            if (owner && expr.name.type === 4) {\n                var method = owner;\n                var pathsLen = expr.name.paths.length;\n\n                for (var i = 0; method && i < pathsLen; i++) {\n                    method = method[evalExpr(expr.name.paths[i], data, owner)];\n                }\n\n                if (method) {\n                    value = method.apply(owner, evalArgs(expr.args, data, owner));\n                }\n            }\n\n            break;\n\n        /* eslint-disable no-redeclare */\n        case 7:\n            var buf = '';\n            for (var i = 0, l = expr.segs.length; i < l; i++) {\n                var seg = expr.segs[i];\n                buf += seg.value || evalExpr(seg, data, owner);\n            }\n            return buf;\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 为函数调用计算参数数组的值\n */\n\n\n// var evalExpr = require('./eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 比较变更表达式与目标表达式之间的关系\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    // if (!expr.dynamic) {\n    //     return 0;\n    // }\n\n    switch (expr.type) {\n        case 4:\n            var paths = expr.paths;\n            var pathsLen = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < pathsLen; i++) {\n                var pathExpr = paths[i];\n                var pathExprValue = pathExpr.value;\n\n                if (pathExprValue == null && changeExprCompare(changeExpr, pathExpr, data)) {\n                    result = 1;\n                    break;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExprValue || evalExpr(pathExpr, data)) != changePaths[i].value\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - pathsLen + 2);\n            }\n            return result;\n\n        case 9:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case 7:\n        case 8:\n        case 10:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case 12:\n        case 11:\n            for (var i = 0; i < expr.items.length; i++) {\n                if (changeExprCompare(changeExpr, expr.items[i].expr, data)) {\n                    return 1;\n                }\n            }\n\n            break;\n\n        case 5:\n            if (changeExprCompare(changeExpr, expr.expr, data)) {\n                return 1\n            }\n            else {\n                for (var i = 0; i < expr.filters.length; i++) {\n                    if (changeExprCompareExprs(changeExpr, expr.filters[i].args, data)) {\n                        return 1;\n                    }\n                }\n            }\n\n            break;\n\n        case 6:\n            if (changeExprCompareExprs(changeExpr, expr.name.paths, data)\n                || changeExprCompareExprs(changeExpr, expr.args, data)\n            ) {\n                return 1\n            }\n            break;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 数据变更类型枚举\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 生命周期类\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 节点类型\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7,\n    LOADER: 8,\n    IS: 9\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 获取 ANode props 数组中相应 name 的项\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode._pi[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 获取属性处理对象\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var nextTick = require('../util/next-tick');\n// var svgTags = require('../browser/svg-tags');\n// var ie = require('../browser/ie');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nfunction defaultElementPropHandler(el, value, name) {\n    var propName = HTML_ATTR_PROP_MAP[name] || name;\n    var valueNotNull = value != null;\n\n    // input 的 type 是个特殊属性，其实也应该用 setAttribute\n    // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n    // 所以这里直接就不管了\n    if (propName in el) {\n        el[propName] = valueNotNull ? value : '';\n    }\n    else if (valueNotNull) {\n        el.setAttribute(name, value);\n    }\n\n    if (!valueNotNull) {\n        el.removeAttribute(name);\n    }\n}\n\nfunction svgPropHandler(el, value, name) {\n    el.setAttribute(name, value);\n}\n\nfunction boolPropHandler(el, value, name) {\n    var propName = HTML_ATTR_PROP_MAP[name] || name;\n    el[propName] = !!value;\n}\n\n// #[begin] allua\n// see https://github.com/baidu/san/issues/495\nfunction placeholderHandler(el, value, name, element) {\n    /* istanbul ignore if */\n    if (ie > 9 && !el.value && value) {\n        element.__bkph = true;\n        nextTick(function () {\n            element.__bkph = false;\n        });\n    }\n\n    defaultElementPropHandler(el, value, name);\n}\n// #[end]\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    id: function (el, value) {\n        if (value != null) {\n            el.id = value;\n        }\n        else if (el.id) {\n            el.removeAttribute('id');\n        }\n    },\n\n    style: function (el, value) {\n        el.style.cssText = value;\n    },\n\n    'class': function (el, value) { // eslint-disable-line\n        if (\n            // #[begin] allua\n            ie\n            ||\n            // #[end]\n            el.className !== value\n        ) {\n            el.className = value;\n        }\n    },\n\n    slot: empty,\n\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (bindChecked != null && !bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                element.data\n                    ? evalExpr(bindValue.expr, element.data, element)\n                    : evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: function (el, value, name, element) {\n            var state = analInputCheckedState(element, value);\n\n            boolPropHandler(\n                el,\n                state != null ? state : value,\n                'checked',\n                element\n            );\n\n            // #[begin] allua\n            // 代码不用抽出来防重复，allua内的代码在现代浏览器版本会被编译时干掉，gzip也会处理重复问题\n            // see: #378\n            /* istanbul ignore if */\n            if (ie && ie < 8 && !element.lifeCycle.attached) {\n                boolPropHandler(\n                    el,\n                    state != null ? state : value,\n                    'defaultChecked',\n                    element\n                );\n            }\n            // #[end]\n        },\n\n        // #[begin] allua\n        placeholder: placeholderHandler,\n        // #[end]\n\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    option: {\n        value: function (el, value, name, element) {\n            defaultElementPropHandler(el, value, name, element);\n\n            if (isOptionSelected(element, value)) {\n                el.selected = true;\n            }\n        }\n    },\n\n    select: {\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    textarea: {\n        // #[begin] allua\n        placeholder: placeholderHandler,\n        // #[end]\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    button: {\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        type: function (el, value) {\n            if (value != null) {\n                el.setAttribute('type', value);\n            }\n            else {\n                el.removeAttribute('type');\n            }\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === 5\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 判断变更是否来源于元素\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.node === element\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 在对象上使用accessor表达式查找方法\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 数据类\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var parseExpr = require('../parser/parse-expr');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    if (typeof expr !== 'object') {\n        expr = parseExpr(expr);\n    }\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (typeof value == 'undefined' && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {number} pathsStart 当前处理的属性路径指针位置\n * @param {number} pathsLen 属性路径长度\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, pathsStart, pathsLen, value, data) {\n    if (pathsStart >= pathsLen) {\n        return value;\n    }\n\n    if (source == null) {\n        source = {};\n    }\n\n    var pathExpr = exprPaths[pathsStart];\n    var prop = evalExpr(pathExpr, data);\n    var result = source;\n\n    if (source instanceof Array) {\n        var index = +prop;\n        prop = isNaN(index) ? prop : index;\n\n        result = source.slice(0);\n        result[prop] = immutableSet(source[prop], exprPaths, pathsStart + 1, pathsLen, value, data);\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            /* istanbul ignore else  */\n            if (key !== prop && source.hasOwnProperty(key)) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop], exprPaths, pathsStart + 1, pathsLen, value, data);\n    }\n\n    if (pathExpr.value == null) {\n        exprPaths[pathsStart] = {\n            type: typeof prop === 'string' ? 1 : 2,\n            value: prop\n        };\n    }\n\n    return result;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    expr = {\n        type: 4,\n        paths: expr.paths.slice(0)\n    };\n\n    var prop = expr.paths[0].value;\n    this.raw[prop] = immutableSet(this.raw[prop], expr.paths, 1, expr.paths.length, value, this);\n\n    this.fire({\n        type: 1,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 批量设置数据\n *\n * @param {Object} source 待设置的数据集\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.assign = function (source, option) {\n    option = option || {};\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            {\n                type: 4,\n                paths: [\n                    {type: 1, value: key}\n                ]\n            },\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            {\n                type: 4,\n                paths: expr.paths.concat(\n                    [\n                        {\n                            type: 1,\n                            value: key\n                        }\n                    ]\n                )\n            },\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    expr = {\n        type: 4,\n        paths: expr.paths.slice(0)\n    };\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n\n        this.raw = immutableSet(this.raw, expr.paths, 0, expr.paths.length, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: 2,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 获取声明式事件的监听函数\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 获取声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {Component} owner 所属组件环境\n * @param {Data} data 数据环境\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @return {Function}\n */\nfunction getEventListener(eventBind, owner, data, isComponentEvent) {\n    var args = eventBind.expr.args;\n\n    return function (e) {\n        e = isComponentEvent ? e : e || window.event;\n\n        var method = findMethod(owner, eventBind.expr.name, data);\n        if (typeof method === 'function') {\n            method.apply(\n                owner,\n                args.length ? evalArgs(args, new Data({ $event: e }, data), owner) : []\n            );\n        }\n\n        if (eventBind.modifier.prevent) {\n            e.preventDefault && e.preventDefault();\n            return false;\n        }\n\n        if (eventBind.modifier.stop) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            else {\n                e.cancelBubble = true;\n            }\n        }\n    };\n}\n\n// exports = module.exports = getEventListener;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 判断变更数组是否影响到数据引用摘要\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    if (dataRef) {\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n\n            if (!change.overview) {\n                var paths = change.expr.paths;\n                change.overview = paths[0].value;\n\n                if (paths.length > 1) {\n                    change.extOverview = paths[0].value + '.' + paths[1].value;\n                    change.wildOverview = paths[0].value + '.*';\n                }\n            }\n\n            if (dataRef[change.overview]\n                || change.wildOverview && dataRef[change.wildOverview]\n                || change.extOverview && dataRef[change.extOverview]\n            ) {\n                return true;\n            }\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file insertBefore 方法的兼容性封装\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 样式的基本属性\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 元素的基本属性\n *\n * @type {Object}\n */\nvar styleProps = splitStr2Obj('class,style');\n\n// exports = module.exports = styleProps;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 元素子节点遍历操作类\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.children = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.children.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.children.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.children[this.index];\n    this.next = this.children[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.children[++this.index];\n    this.next = this.children[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 元素节点类\n */\n\n\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var styleProps = require('./style-props');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var getPropHandler = require('./get-prop-handler');\n// var createNode = require('./create-node');\n// var preheatEl = require('./preheat-el');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnAttached = require('./element-own-attached');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {string} tagName 元素标签名\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, parent, scope, owner, tagName, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.tagName = tagName || aNode.tagName;\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    /* istanbul ignore if */\n    if (ieOldThan9 && this.tagName.indexOf('-') > 0) {\n        this.tagName = 'div';\n    }\n    // #[end]\n\n    aNode._i++;\n    this._sbindData = nodeSBindInit(aNode.directives.bind, this.scope, this.owner);\n    this.lifeCycle = LifeCycle.inited;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        /* istanbul ignore if */\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        /* istanbul ignore if */\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        /* istanbul ignore if */\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meet ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this, this.scope, this.owner);\n\n        this.lifeCycle = LifeCycle.created;\n        this._attached();\n        this.lifeCycle = LifeCycle.attached;\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = 4;\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nElement.prototype.attach = function (parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        var aNode = this.aNode;\n\n        if (!this.el) {\n            var props;\n\n            if (aNode._ce && aNode._i > 2) {\n                props = aNode._dp;\n                this.el = (aNode._el || preheatEl(aNode)).cloneNode(false);\n            }\n            else {\n                props = aNode.props;\n                this.el = createEl(this.tagName);\n            }\n\n            if (this._sbindData) {\n                for (var key in this._sbindData) {\n                    if (this._sbindData.hasOwnProperty(key)) {\n                        getPropHandler(this.tagName, key)(\n                            this.el,\n                            this._sbindData[key],\n                            key,\n                            this\n                        );\n                    }\n                }\n            }\n\n            for (var i = 0, l = props.length; i < l; i++) {\n                var prop = props[i];\n                var value = evalExpr(prop.expr, this.scope, this.owner);\n\n                if (value || !styleProps[prop.name]) {\n                    prop.handler(this.el, value, prop.name, this);\n                }\n            }\n\n            this.lifeCycle = LifeCycle.created;\n        }\n        insertBefore(this.el, parentEl, beforeEl);\n\n        if (!this._contentReady) {\n            var htmlDirective = aNode.directives.html;\n\n            if (htmlDirective) {\n                // #[begin] error\n                warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n            }\n            else {\n                for (var i = 0, l = aNode.children.length; i < l; i++) {\n                    var childANode = aNode.children[i];\n                    var child = childANode.Clazz\n                        ? new childANode.Clazz(childANode, this, this.scope, this.owner)\n                        : createNode(childANode, this, this.scope, this.owner);\n                    this.children.push(child);\n                    child.attach(this.el);\n                }\n            }\n\n            this._contentReady = 1;\n        }\n\n        this._attached();\n\n        this.lifeCycle = LifeCycle.attached;\n    }\n};\n\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._onEl = elementOwnOnEl;\nElement.prototype._leave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            var len = this.children.length;\n            while (len--) {\n                this.children[len].dispose(1, 1);\n            }\n\n            len = this._elFns.length;\n            while (len--) {\n                var fn = this._elFns[len];\n                un(this.el, fn[0], fn[1], fn[2]);\n            }\n            this._elFns = null;\n\n            // #[begin] allua\n            /* istanbul ignore if */\n            if (this._inputTimer) {\n                clearInterval(this._inputTimer);\n                this._inputTimer = null;\n            }\n            // #[end]\n\n            // 如果没有parent，说明是一个root component，一定要从dom树中remove\n            if (!this.disposeNoDetach || !this.parent) {\n                removeEl(this.el);\n            }\n\n            this.lifeCycle = LifeCycle.detached;\n\n            this.el = null;\n            this.owner = null;\n            this.scope = null;\n            this.children = null;\n            this.lifeCycle = LifeCycle.disposed;\n\n            if (this._ondisposed) {\n                this._ondisposed();\n            }\n        }\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    var dataHotspot = this.aNode._d;\n    if (dataHotspot && changesIsInDataRef(changes, dataHotspot)) {\n\n        // update s-bind\n        var me = this;\n        this._sbindData = nodeSBindUpdate(\n            this.aNode.directives.bind,\n            this._sbindData,\n            this.scope,\n            this.owner,\n            changes,\n            function (name, value) {\n                if (name in me.aNode._pi) {\n                    return;\n                }\n\n                getPropHandler(me.tagName, name)(me.el, value, name, me);\n            }\n        );\n\n        // update prop\n        var dynamicProps = this.aNode._dp;\n        for (var i = 0, l = dynamicProps.length; i < l; i++) {\n            var prop = dynamicProps[i];\n            var propName = prop.name;\n\n            for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n                var change = changes[j];\n\n                if (!isDataChangeByElement(change, this, propName)\n                    && (\n                        changeExprCompare(change.expr, prop.expr, this.scope)\n                        || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                    )\n                ) {\n                    prop.handler(this.el, evalExpr(prop.expr, this.scope, this.owner), propName, this);\n                    break;\n                }\n            }\n        }\n\n        // update content\n        var htmlDirective = this.aNode.directives.html;\n        if (htmlDirective) {\n            var len = changes.length;\n            while (len--) {\n                if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                    // #[begin] error\n                    warnSetHTML(this.el);\n                    // #[end]\n\n                    this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0, l = this.children.length; i < l; i++) {\n                this.children[i]._update(changes);\n            }\n        }\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 通过组件反解创建节点的工厂方法\n */\n\n// var Element = require('./element');\n// var TemplateNode = require('./template-node');\n// var AsyncComponent = require('./async-component');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @return {Node}\n */\nfunction createReverseNode(aNode, parent, scope, owner, reverseWalker, componentName) {\n    if (aNode.elem) {\n        return new Element(aNode, parent, scope, owner, componentName, reverseWalker);\n    }\n\n    if (aNode.Clazz) {\n        return new aNode.Clazz(aNode, parent, scope, owner, reverseWalker);\n    }\n\n    var ComponentOrLoader = owner.components[componentName || aNode.tagName];\n\n    if (ComponentOrLoader) {\n        return typeof ComponentOrLoader === 'function'\n            ? new ComponentOrLoader({\n                source: aNode,\n                owner: owner,\n                scope: scope,\n                parent: parent,\n                reverseWalker: reverseWalker\n            })\n            : new AsyncComponent({\n                source: aNode,\n                owner: owner,\n                scope: scope,\n                parent: parent,\n                reverseWalker: reverseWalker\n            }, ComponentOrLoader);\n    }\n\n    if (aNode.directives.is) {\n        switch (componentName) {\n            case 'fragment':\n            case 'template':\n                    return new TemplateNode(aNode, parent, scope, owner, reverseWalker);\n        }\n    }\n    else {\n        aNode.elem = true;\n    }\n    return new Element(aNode, parent, scope, owner, componentName, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 销毁释放元素的子元素\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Array=} children 子元素数组\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(children, noDetach, noTransition) {\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 创建节点的工厂方法\n */\n\n// var Element = require('./element');\n// var TemplateNode = require('./template-node');\n// var AsyncComponent = require('./async-component');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope, owner, componentName) {\n    if (aNode.elem) {\n        return new Element(aNode, parent, scope, owner, componentName);\n    }\n\n    if (aNode.Clazz) {\n        return new aNode.Clazz(aNode, parent, scope, owner);\n    }\n\n    var ComponentOrLoader = owner.components[componentName || aNode.tagName];\n\n    if (ComponentOrLoader) {\n        return typeof ComponentOrLoader === 'function'\n            ? new ComponentOrLoader({\n                source: aNode,\n                owner: owner,\n                scope: scope,\n                parent: parent\n            })\n            : new AsyncComponent({\n                source: aNode,\n                owner: owner,\n                scope: scope,\n                parent: parent\n            }, ComponentOrLoader);\n    }\n\n    if (aNode.directives.is) {\n        switch (componentName) {\n            case 'fragment':\n            case 'template':\n                    return new TemplateNode(aNode, parent, scope, owner);\n        }\n    }\n    else {\n        aNode.elem = true;\n    }\n\n    return new Element(aNode, parent, scope, owner, componentName);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 将没有 root 只有 children 的元素 attach 到页面\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var createNode = require('./create-node');\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    for (var i = 0; i < this.aNode.children.length; i++) {\n        var child = createNode(\n            this.aNode.children[i],\n            this,\n            this.childScope || this.scope,\n            this.childOwner || this.owner\n        );\n        this.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this.lifeCycle = LifeCycle.attached;\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file template 节点类\n */\n\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var removeEl = require('../browser/remove-el');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, parent, scope, owner, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid++;\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var hasFlagComment;\n\n        // start flag\n        if (reverseWalker.current && reverseWalker.current.nodeType === 8) {\n            this.sel = reverseWalker.current;\n            hasFlagComment = 1;\n            reverseWalker.goNext();\n        }\n        else {\n            this.sel = document.createComment(this.id);\n            insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n        }\n\n        // content\n        var aNodeChildren = this.aNode.children;\n        for (var i = 0, l = aNodeChildren.length; i < l; i++) {\n            this.children.push(\n                createReverseNode(aNodeChildren[i], this, this.scope, this.owner, reverseWalker)\n            );\n        }\n\n        // end flag\n        if (hasFlagComment) {\n            this.el = reverseWalker.current;\n            reverseWalker.goNext();\n        }\n        else {\n            this.el = document.createComment(this.id);\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n\n        this.lifeCycle = LifeCycle.attached;\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = 7;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this.children, noDetach, noTransition);\n\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n\n    this.sel = null;\n    this.el = null;\n    this.owner = null;\n    this.scope = null;\n    this.children = null;\n\n    this.lifeCycle = LifeCycle.disposed;\n\n    if (this._ondisposed) {\n        this._ondisposed();\n    }\n};\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    for (var i = 0; i < this.children.length; i++) {\n        this.children[i]._update(changes);\n    }\n};\n\nTemplateNode.prototype._getElAsRootNode = function () {\n    return this.sel;\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 创建节点对应的 stump comment 元素\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 简单执行销毁节点的行为\n */\n\n// var removeEl = require('../browser/remove-el');\n// var LifeCycle = require('./life-cycle');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this.children, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    this.el = null;\n    this.owner = null;\n    this.scope = null;\n    this.children = null;\n\n    this.lifeCycle = LifeCycle.disposed;\n    if (this._ondisposed) {\n        this._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 异步组件类\n */\n\n// var guid = require('../util/guid');\n// var each = require('../util/each');\n// var insertBefore = require('../browser/insert-before');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n\n/**\n * 异步组件类\n *\n * @class\n * @param {Object} options 初始化参数\n * @param {Object} loader 组件加载器\n */\nfunction AsyncComponent(options, loader) {\n    this.options = options;\n    this.loader = loader;\n    this.id = guid++;\n    this.children = [];\n\n    // #[begin] reverse\n    var reverseWalker = options.reverseWalker;\n    if (reverseWalker) {\n        var PlaceholderComponent = this.loader.placeholder;\n        if (PlaceholderComponent) {\n            this.children[0] = new PlaceholderComponent(options);\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        this.loader.start(function (ComponentClass) {\n            me.onload(ComponentClass);\n        });\n    }\n    options.reverseWalker = null;\n    // #[end]\n}\n\nAsyncComponent.prototype._create = nodeOwnCreateStump;\nAsyncComponent.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nAsyncComponent.prototype.attach = function (parentEl, beforeEl) {\n    var PlaceholderComponent = this.loader.placeholder;\n    if (PlaceholderComponent) {\n        var component = new PlaceholderComponent(this.options);\n        this.children[0] = component;\n        component.attach(parentEl, beforeEl);\n    }\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    var me = this;\n    this.loader.start(function (ComponentClass) {\n        me.onload(ComponentClass);\n    });\n};\n\nAsyncComponent.prototype._getElAsRootNode = function () {\n    var child = this.children[0];\n    return child && child.el;\n};\n\n\n/**\n * loader加载完成，渲染组件\n *\n * @param {Function=} ComponentClass 组件类\n */\nAsyncComponent.prototype.onload = function (ComponentClass) {\n    if (this.el && ComponentClass) {\n        var component = new ComponentClass(this.options);\n        component.attach(this.el.parentNode, this.el);\n\n        var parent = this.options.parent;\n\n        if (parent._rootNode === this) {\n            // 如果异步组件为 root 节点，直接更新\n            parent._rootNode = component;\n            component._getElAsRootNode && (parent.el = component._getElAsRootNode());\n        } else {\n            // 在 children 中查找\n            var parentChildren = parent.children;\n\n            // children 中存在多个 AsyncComponent 时，只循环一遍，为所有 AsyncComponent 的 parentIndex 赋值\n            if (this.parentIndex == null || parentChildren[this.parentIndex] !== this) {\n                each(parentChildren, function (child, index) {\n                    if (child instanceof AsyncComponent) {\n                        child.parentIndex = index;\n                    }\n                });\n            }\n\n            parentChildren[this.parentIndex] = component;\n        }\n    }\n\n    this.dispose();\n};\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nAsyncComponent.prototype._update = function (changes) {\n    this.children[0] && this.children[0]._update(changes);\n};\n\n// exports = module.exports = AsyncComponent;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 对元素的子节点进行反解\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element, scope, owner) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n        var aNodeChildren = element.aNode.children;\n        \n        for (var i = 0, l = aNodeChildren.length; i < l; i++) {\n            element.children.push(\n                createReverseNode(aNodeChildren[i], element, scope, owner, reverseWalker)\n            );\n        }\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file ANode预热\n */\n\n/**\n * ANode预热HTML元素，用于循环创建时clone\n *\n * @param {Object} aNode 要预热的ANode\n * @return {HTMLElement}\n */\nfunction preheatEl(aNode) {\n    var el = createEl(aNode.tagName);\n    aNode._el = el;\n\n    for (var i = 0, l = aNode.props.length; i < l; i++) {\n        var prop = aNode.props[i];\n        if (prop.expr.value != null) {\n            prop.handler(el, prop.expr.value, prop.name, aNode);\n        }\n    }\n\n    return el;\n}\n\n// exports = module.exports = preheatEl;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 获取 element 的 transition 控制对象\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var handleError = require('../util/handle-error');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var directive = element.aNode.directives.transition;\n    var owner = element.owner;\n\n    if (element.nodeType === 5) {\n        var cmptGivenTransition = element.source && element.source.directives.transition;\n        if (cmptGivenTransition) {\n            directive = cmptGivenTransition;\n        }\n        else {\n            owner = element;\n        }\n    }\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            try {\n                transition = transition.apply(\n                    owner,\n                    evalArgs(directive.value.args, element.scope, owner)\n                );\n            }\n            catch (e) {\n                handleError(e, owner, 'transitionCreate')\n            }\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 将元素从页面上移除\n */\n\n// var NodeType = require('./node-type');\n// var handleError = require('../util/handle-error');\n// var elementGetTransition = require('./element-get-transition');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    var lifeCycle = this.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (!this.disposeNoTransition) {\n        var transition = elementGetTransition(this);\n\n        if (transition && transition.leave) {\n            if (this._toPhase) {\n                this._toPhase('leaving');\n            }\n            else {\n                this.lifeCycle = LifeCycle.leaving;\n            }\n\n            var me = this;\n            try {\n                transition.leave(this.el, function () {\n                    me._leave();\n                });\n                return;\n            }\n            catch (e) {\n                handleError(\n                    e, \n                    this.nodeType === 5 ? this.parentComponent : this.owner, \n                    'transitionLeave'\n                );\n            }\n        }\n    }\n\n    this._leave();\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 销毁释放元素\n */\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    this.detach();\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 为元素的 el 绑定事件\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    capture = !!capture;\n    this._elFns.push([name, listener, capture]);\n    on(this.el, name, listener, capture);\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 是否浏览器环境\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 开发时的警告提示\n */\n\n// #[begin] error\n/**\n * 开发时的警告提示\n *\n * @param {string} message 警告信息\n */\nfunction warn(message) {\n    message = '[SAN WARNING] ' + message;\n\n    /* eslint-disable no-console */\n    /* istanbul ignore next */\n    if (typeof console === 'object' && console.warn) {\n        console.warn(message);\n    }\n    else {\n        // 防止警告中断调用堆栈\n        setTimeout(function () {\n            throw new Error(message);\n        }, 0);\n    }\n    /* eslint-enable no-console */\n}\n// #[end]\n\n// exports = module.exports = warn;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file  事件绑定不存在的 warning\n */\n\n// var each = require('../util/each');\n// var warn = require('../util/warn');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n\n        warn(eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist');\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 完成元素 attached 后的行为\n */\n\n\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var getEventListener = require('./get-event-listener');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var handleError = require('../util/handle-error');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction getXPropOutputer(element, xProp, data) {\n    return function () {\n        xPropOutput(element, xProp, data);\n    };\n}\n\nfunction getInputXPropOutputer(element, xProp, data) {\n    return function () {\n        // #[begin] allua\n        /* istanbul ignore if */\n        if (element.__bkph) {\n            element.__bkph = false;\n            return;\n        }\n        // #[end]\n\n        if (!this.composing) {\n            xPropOutput(element, xProp, data);\n        }\n    };\n}\n\n// #[begin] allua\n/* istanbul ignore next */\nfunction getInputFocusXPropHandler(element, xProp, data) {\n    return function () {\n        element._inputTimer = setInterval(function () {\n            xPropOutput(element, xProp, data);\n        }, 16);\n    };\n}\n\n/* istanbul ignore next */\nfunction getInputBlurXPropHandler(element) {\n    return function () {\n        clearInterval(element._inputTimer);\n        element._inputTimer = null;\n    };\n}\n// #[end]\n\nfunction xPropOutput(element, bindInfo, data) {\n    /* istanbul ignore if */\n    if (!element.lifeCycle.created) {\n        return;\n    }\n\n    var el = element.el;\n\n    if (element.tagName === 'input' && bindInfo.name === 'checked') {\n        var bindValue = getANodeProp(element.aNode, 'value');\n        var bindType = getANodeProp(element.aNode, 'type');\n\n        if (bindValue && bindType) {\n            switch (el.type.toLowerCase()) {\n                case 'checkbox':\n                    data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                    return;\n\n                case 'radio':\n                    el.checked && data.set(bindInfo.expr, el.value, {\n                        target: {\n                            node: element,\n                            prop: bindInfo.name\n                        }\n                    });\n                    return;\n            }\n        }\n    }\n\n    data.set(bindInfo.expr, el[bindInfo.name], {\n        target: {\n            node: element,\n            prop: bindInfo.name\n        }\n    });\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    if (this._rootNode) {\n        return;\n    }\n\n    var isComponent = this.nodeType === 5;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode._xp;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        // #[begin] allua\n                        /* istanbul ignore else */\n                        if ('oninput' in this.el) {\n                        // #[end]\n                            this._onEl('input', getInputXPropOutputer(this, xProp, data));\n                        // #[begin] allua\n                        }\n                        else {\n                            this._onEl('focusin', getInputFocusXPropHandler(this, xProp, data));\n                            this._onEl('focusout', getInputBlurXPropHandler(this));\n                        }\n                        // #[end]\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', getXPropOutputer(this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', getXPropOutputer(this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    var owner = isComponent ? this : this.owner;\n    for (var i = 0, l = this.aNode.events.length; i < l; i++) {\n        var eventBind = this.aNode.events[i];\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            getEventListener(eventBind, owner, data, eventBind.modifier),\n            eventBind.modifier.capture\n        );\n    }\n\n    if (isComponent) {\n        for (var i = 0, l = this.nativeEvents.length; i < l; i++) {\n            var eventBind = this.nativeEvents[i];\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, this.owner);\n            // #[end]\n\n            this._onEl(\n                eventBind.name,\n                getEventListener(eventBind, this.owner, this.scope),\n                eventBind.modifier.capture\n            );\n        }\n    }\n\n    var transition = elementGetTransition(this);\n    if (transition && transition.enter) {\n        try {\n            transition.enter(this.el, empty);\n        }\n        catch (e) {\n            handleError(e, isComponent ? owner.parentComponent : owner, 'transitionEnter');\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 初始化节点的 s-bind 数据\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} sBind bind指令对象\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @return {boolean}\n */\nfunction nodeSBindInit(sBind, scope, owner) {\n    if (sBind && scope) {\n        return evalExpr(sBind.value, scope, owner);\n    }\n}\n\n// exports = module.exports = nodeSBindInit;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 计算两个对象 key 的并集\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n    var key;\n\n    for (key in obj1) {\n        /* istanbul ignore else  */\n        if (obj1.hasOwnProperty(key)) {\n            result.push(key);\n        }\n    }\n\n    for (key in obj2) {\n        /* istanbul ignore else  */\n        if (obj2.hasOwnProperty(key)) {\n            !obj1[key] && result.push(key);\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 更新节点的 s-bind 数据\n */\n\n// var unionKeys = require('../util/union-keys');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n\n/**\n * 更新节点的 s-bind 数据\n *\n * @param {Object} sBind bind指令对象\n * @param {Object} oldBindData 当前s-bind数据\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {Array} changes 变更数组\n * @param {Function} updater 绑定对象子项变更的更新函数\n */\nfunction nodeSBindUpdate(sBind, oldBindData, scope, owner, changes, updater) {\n    if (sBind) {\n        var len = changes.length;\n\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, sBind.value, scope)) {\n                var newBindData = evalExpr(sBind.value, scope, owner);\n                var keys = unionKeys(newBindData, oldBindData);\n\n                for (var i = 0, l = keys.length; i < l; i++) {\n                    var key = keys[i];\n                    var value = newBindData[key];\n\n                    if (value !== oldBindData[key]) {\n                        updater(key, value);\n                    }\n                }\n\n                return newBindData;\n            }\n\n        }\n\n        return oldBindData;\n    }\n}\n\n// exports = module.exports = nodeSBindUpdate;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 判断元素是否不允许设置HTML\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file  获取节点 stump 的 comment\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n// var warn = require('../util/warn');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    /* istanbul ignore if */\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        warn('set html for element \"' + el.tagName + '\" may cause an error in old IE');\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 获取节点在组件树中的路径\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\n/* istanbul ignore next */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case 4:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case 2:\n                nodePaths.unshift('if');\n                break;\n\n            case 3:\n                nodePaths.unshift('for[' + nodeParent.aNode.directives['for'].item + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case 6:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case 7:\n                nodePaths.unshift('template');\n                break;\n\n            case 5:\n                nodePaths.unshift('component[' + (nodeParent.source ? nodeParent.source.tagName : 'root') + ']');\n                break;\n\n            case 1:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解压缩 ANode\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 解压缩 ANode\n *\n * @param {Array} packed ANode压缩数据\n * @return {Object}\n */\nfunction unpackANode(packed) {\n    var root;\n    var nodeStack = [];\n    var typeStack = [];\n    var stateStack = [];\n    var targetStack = [];\n    var stackIndex = -1;\n\n    for (var i = 0, l = packed.length; i < l; i++) {\n        var current = nodeStack[stackIndex];\n        var currentType = typeStack[stackIndex];\n        var currentState = stateStack[stackIndex];\n        var currentTarget = targetStack[stackIndex];\n\n        while (current) {\n            if (currentState === -3) {\n                currentState = stateStack[stackIndex] = packed[i++] || -1;\n            }\n\n            if (currentState === -1) {\n                current = nodeStack[--stackIndex];\n                currentType = typeStack[stackIndex];\n                currentState = stateStack[stackIndex];\n                currentTarget = targetStack[stackIndex];\n            }\n            else {\n                break;\n            }\n        }\n            \n        var type = packed[i];\n        var node;\n        var state = -1;\n        var target = false;\n\n        switch (type) {\n            // Node: Tag\n            case 1:\n                node = {\n                    directives: {},\n                    props: [],\n                    events: [],\n                    children: []\n                };\n                var tagName = packed[++i];\n                tagName && (node.tagName = tagName);\n                state = packed[++i] || -1;\n                break;\n\n            case 3:\n                node = {\n                    type: 1,\n                    value: packed[++i]\n                };\n                break;\n\n            case 4:\n                node = {\n                    type: 2,\n                    value: packed[++i]\n                };\n                break;\n\n            case 5:\n                node = {\n                    type: 3,\n                    value: !!packed[++i]\n                };\n                break;\n                \n            case 19:\n                node = {\n                    type: 13\n                };\n                break;\n\n            case 6:\n                target = [];\n                node = {\n                    type: 4,\n                    paths: target\n                };\n                state = packed[++i] || -1;\n                break;\n\n            case 7:\n                target = [];\n                node = {\n                    type: 5,\n                    filters: target\n                };\n                packed[++i] && (node.original = 1);\n                state = -2;\n                break;\n                \n            case 8:\n                target = [];\n                node = {\n                    type: 6,\n                    args: target\n                };\n                state = -2;\n                break;\n\n            case 9:\n                target = [];\n                node = {\n                    type: 7,\n                    segs: target\n                };\n\n                packed[++i] && (node.original = 1);\n                state = packed[++i] || -1;\n                break;\n\n            case 10:\n                target = [];\n                node = {\n                    type: 8,\n                    operator: packed[++i],\n                    segs: target\n                };\n                state = 2;\n                break;\n\n            case 11:\n                node = {\n                    type: 9,\n                    operator: packed[++i]\n                };\n                state = -2;\n                break;\n\n            case 12:\n                target = [];\n                node = {\n                    type: 10,\n                    segs: target\n                };\n                state = 3;\n                break;\n\n            case 13:\n                target = [];\n                node = {\n                    type: 11,\n                    items: target\n                };\n                state = packed[++i] || -1;\n                break;\n\n            case 14:\n                node = {};\n                state = -2;\n                break;\n\n            case 15:\n                node = {spread: true};\n                state = -2;\n                break;\n\n            case 16:\n                target = [];\n                node = {\n                    type: 12,\n                    items: target\n                };\n                state = packed[++i] || -1;\n                break;\n\n            case 17:\n            case 18:\n                node = type === 18 ? {spread: true} : {};\n                state = -2;\n                break;\n\n            case 2:\n            case 33:\n            case 34:\n                node = {\n                    name: packed[++i]\n                };\n                (type === 33) && (node.noValue = 1);\n                (type === 34) && (node.x = 1);\n                state = -2;\n                break;\n\n            case 35:\n                node = {\n                    name: packed[++i],\n                    modifier: {}\n                };\n                state = -2;\n                break;\n\n            case 36:\n                node = {\n                    name: packed[++i]\n                };\n                state = -2;\n                break;\n\n            case 37:\n                node = {\n                    item: packed[++i]\n                };\n\n                var forIndex = packed[++i];\n                forIndex && (node.index = forIndex);\n\n                var trackBy = packed[++i];\n                if (trackBy) {\n                    node.trackByRaw = trackBy;\n                    node.trackBy = parseExpr(trackBy);\n                }\n\n                state = -2;\n                break;\n            \n            case 38:\n            case 39:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n                node = {};\n                state = -2;\n                break;\n\n            // else\n            case 40:\n                node = {value: {}};\n                break;\n\n            // Node: Text\n            // Event modifier\n            default:\n                if (!type) {\n                    node = {};\n                    state = -2;\n                }\n\n        }\n\n        if (!root) {\n            root = node;\n        }\n\n        if (current) {\n\n            switch (currentType) {\n                // Node: Tag\n                case 1:\n                    if (currentTarget) {\n                        current.elses = current.elses || [];\n                        current.elses.push(node);\n                        if (!(--stateStack[stackIndex])) {\n                            stackIndex--;\n                        }\n                    }\n                    else {\n                        switch (type) {\n                            case 2:\n                            case 33:\n                            case 34:\n                                current.props.push(node);\n                                break;\n                            \n                            case 35:\n                                current.events.push(node);\n                                break;\n\n                            case 36:\n                                current.vars = current.vars || [];\n                                current.vars.push(node);\n                                break;\n\n                            case 37:\n                                current.directives['for'] = node;\n                                break;\n\n                            case 38:\n                                current.directives['if'] = node;\n                                break;\n\n                            case 39:\n                                current.directives.elif = node;\n                                break;\n\n                            case 40:\n                                current.directives['else'] = node;\n                                break;\n\n                            case 41:\n                                current.directives.ref = node;\n                                break;\n                            \n                            case 42:\n                                current.directives.bind = node;\n                                break;\n\n                            case 43:\n                                current.directives.html = node;\n                                break;\n\n                            case 44:\n                                current.directives.transition = node;\n                                break;\n\n                            case 45:\n                                current.directives.is = node;\n                                break;\n\n                            case 1:\n                            default:\n                                current.children.push(node);\n                        }\n\n                        if (!(--stateStack[stackIndex])) {\n                            if (current.directives['if']) {\n                                targetStack[stackIndex] = 'elses';\n                                stateStack[stackIndex] = -3;\n                            }\n                            else {\n                                stackIndex--;\n                            }\n                        }\n                    }\n                    break;\n\n                // Expr: Interp\n                case 7:\n                    if (currentState === -2) {\n                        stateStack[stackIndex] = -3;\n                        current.expr = node;\n                    }\n                    else {\n                        currentTarget.push(node);\n                        if (!(--stateStack[stackIndex])) {\n                            stackIndex--;\n                        }\n                    }\n                    break;\n\n                // Expr: CALL\n                case 8:\n                    if (currentState === -2) {\n                        stateStack[stackIndex] = -3;\n                        current.name = node;\n                    }\n                    else {\n                        currentTarget.push(node);\n                        if (!(--stateStack[stackIndex])) {\n                            stackIndex--;\n                        }\n                    }\n                    break;\n                \n                // Expr: ACCESSOR, TEXT, BINARY, TERTIARY, OBJECT, ARRAY\n                case 6:\n                case 9:\n                case 10:\n                case 12:\n                case 13:\n                case 16:\n                    currentTarget.push(node);\n                    if (!(--stateStack[stackIndex])) {\n                        stackIndex--;\n                    }\n                    break;\n                \n                // Expr: UNARY\n                // Prop\n                // var\n                // Object Spread Item, Array Item\n                case 11:\n                case 2:\n                case 33:\n                case 34:\n                case 36:\n                case 15:\n                case 17:\n                case 18:\n                    current.expr = node;\n                    stackIndex--;\n                    break;\n\n\n                // Expr: Object Item\n                case 14:\n                    if (currentState === -2) {\n                        stateStack[stackIndex] = -4;\n                        current.name = node;\n                    }\n                    else {\n                        current.expr = node;\n                        stackIndex--;\n                    }\n                    break;\n\n                // Event\n                case 35:\n                    if (currentState === -2) {\n                        stateStack[stackIndex] = -3;\n                        current.expr = node;\n                    }\n                    else {\n                        current.modifier[type] = true;\n                        if (!(--stateStack[stackIndex])) {\n                            stackIndex--;\n                        }\n                    }\n                    break;\n\n                // Directive: for, if, elif, ref, bind, html, transition, is\n                case 37:\n                case 38:\n                case 39:\n                case 41:\n                case 42:\n                case 43:\n                case 44:\n                case 45:\n                    current.value = node;\n                    stackIndex--;\n                    break;\n\n                // Node: Text\n                default:\n                    current.textExpr = node;\n                    stackIndex--;\n            }\n        }\n\n        if (state !== -1) {\n            nodeStack[++stackIndex] = node;\n            typeStack[stackIndex] = type;\n            stateStack[stackIndex] = state;\n            targetStack[stackIndex] = target;\n        }\n    }\n\n    return root;\n}\n\n// exports = module.exports = unpackANode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 给 devtool 发通知消息\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    /* istanbul ignore if */\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 组件类\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var parseTemplate = require('../parser/parse-template');\n// var unpackANode = require('../parser/unpack-anode');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var DataChangeType = require('../runtime/data-change-type');\n// var insertBefore = require('../browser/insert-before');\n// var un = require('../browser/un');\n// var defineComponent = require('./define-component');\n// var ComponentLoader = require('./component-loader');\n// var createNode = require('./create-node');\n// var preheatEl = require('./preheat-el');\n// var parseComponentTemplate = require('./parse-component-template');\n// var preheatANode = require('./preheat-a-node');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var getEventListener = require('./get-event-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var NodeType = require('./node-type');\n// var styleProps = require('./style-props');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n// var warn = require('../util/warn');\n// var handleError = require('../util/handle-error');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    // #[begin] error\n    for (var key in Component.prototype) {\n        if (this[key] !== Component.prototype[key]) {\n            /* eslint-disable max-len */\n            warn('\\`' + key + '\\` is a reserved key of san components. Overriding this property may cause unknown exceptions.');\n            /* eslint-enable max-len */\n        }\n    }\n    // #[end]\n\n\n    options = options || {};\n    this.lifeCycle = LifeCycle.start;\n    this.id = guid++;\n\n    if (typeof this.construct === 'function') {\n        this.construct(options);\n    }\n\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n    this.implicitChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n\n    if (options.transition) {\n        this.transition = options.transition;\n    }\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === 5\n            ? parent\n            : parent && parent.parentComponent;\n    }\n    else if (this.owner) {\n        this.parentComponent = this.owner;\n        this.scope = this.owner.data;\n    }\n\n    this.sourceSlotNameProps = [];\n    this.sourceSlots = {\n        named: {}\n    };\n\n    // #[begin] devtool\n    this._toPhase('beforeCompile');\n    // #[end]\n\n    var proto = clazz.prototype;\n\n    // pre define components class\n    /* istanbul ignore else  */\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = clazz.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var cmptClass = components[key];\n            if (typeof cmptClass === 'object' && !(cmptClass instanceof ComponentLoader)) {\n                components[key] = defineComponent(cmptClass);\n            }\n            else if (cmptClass === 'self') {\n                components[key] = clazz;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n    // compile\n    if (!proto.hasOwnProperty('aNode')) {\n        var aPack = clazz.aPack || proto.hasOwnProperty('aPack') && proto.aPack;\n        if (aPack) {\n            proto.aNode = unpackANode(aPack);\n            clazz.aPack = proto.aPack = null;\n        }\n        else {\n            proto.aNode = parseComponentTemplate(clazz);\n        }\n    }\n\n    preheatANode(proto.aNode, this);\n\n    this.tagName = proto.aNode.tagName;\n    this.source = typeof options.source === 'string'\n        ? parseTemplate(options.source).children[0]\n        : options.source;\n\n    preheatANode(this.source);\n    proto.aNode._i++;\n\n\n    // #[begin] reverse\n    // 组件反解，读取注入的组件数据\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode && firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function('return '\n                    + stumpText\n                        .replace(/^[\\s\\n]*/, '')\n                        .replace(\n                            /\"(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.\\d+Z\"/g,\n                            function (match, y, mon, d, h, m, s) {\n                                return 'new Date(' + (+y) + ',' + (+mon) + ',' + (+d)\n                                    + ',' + (+h) + ',' + (+m) + ',' + (+s) + ')';\n                            }\n                        )\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.source) {\n        // 组件运行时传入的结构，做slot解析\n        this._initSourceSlots(1);\n\n        for (var i = 0, l = this.source.events.length; i < l; i++) {\n            var eventBind = this.source.events[i];\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                this.nativeEvents.push(eventBind);\n            }\n            else {\n                // #[begin] error\n                warnEventListenMethod(eventBind, options.owner);\n                // #[end]\n\n                this.on(\n                    eventBind.name,\n                    getEventListener(eventBind, options.owner, this.scope, 1),\n                    eventBind\n                );\n            }\n        }\n\n        this.tagName = this.tagName || this.source.tagName;\n        this.binds = this.source._b;\n\n        // init s-bind data\n        this._srcSbindData = nodeSBindInit(this.source.directives.bind, this.scope, this.owner);\n    }\n\n    this._toPhase('compiled');\n\n\n    // #[begin] devtool\n    this._toPhase('beforeInit');\n    // #[end]\n\n    // init data\n    var initData;\n    try {\n        initData = typeof this.initData === 'function' && this.initData();\n    }\n    catch (e) {\n        handleError(e, this, 'initData');\n    }\n    initData = extend(initData || {}, options.data || this._srcSbindData);\n\n    if (this.binds && this.scope) {\n        for (var i = 0, l = this.binds.length; i < l; i++) {\n            var bindInfo = this.binds[i];\n\n            var value = evalExpr(bindInfo.expr, this.scope, this.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                initData[bindInfo.name] = value;\n            }\n        }\n    }\n\n    this.data = new Data(initData);\n\n    this.tagName = this.tagName || 'div';\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    /* istanbul ignore if */\n    if (ieOldThan9 && this.tagName.indexOf('-') > 0) {\n        this.tagName = 'div';\n    }\n    // #[end]\n\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    for (var expr in this.computed) {\n        if (this.computed.hasOwnProperty(expr) && !this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n\n    this._initDataChanger();\n    this._sbindData = nodeSBindInit(this.aNode.directives.bind, this.data, this);\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    var reverseWalker = options.reverseWalker;\n    if (this.el || reverseWalker) {\n        var RootComponentType = this.components[this.aNode.tagName];\n\n        if (reverseWalker && (this.aNode.hasRootNode || RootComponentType)) {\n            this._rootNode = createReverseNode(this.aNode, this, this.data, this, reverseWalker);\n            this._rootNode._getElAsRootNode && (this.el = this._rootNode._getElAsRootNode());\n        }\n        else if (this.el && RootComponentType) {\n            this._rootNode = new RootComponentType({\n                source: this.aNode,\n                owner: this,\n                scope: this.data,\n                parent: this,\n                el: this.el\n            });\n        }\n        else {\n            if (reverseWalker) {\n                var currentNode = reverseWalker.current;\n                if (currentNode && currentNode.nodeType === 1) {\n                    this.el = currentNode;\n                    reverseWalker.goNext();\n                }\n            }\n\n            reverseElementChildren(this, this.data, this);\n        }\n\n        this._toPhase('created');\n        this._attached();\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n * @param {boolean} isFirstTime 是否初次对sourceSlots进行计算\n */\nComponent.prototype._initSourceSlots = function (isFirstTime) {\n    this.sourceSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    if (this.source && this.scope) {\n        var sourceChildren = this.source.children;\n\n        for (var i = 0, l = sourceChildren.length; i < l; i++) {\n            var child = sourceChildren[i];\n            var target;\n\n            var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n            if (slotBind) {\n                isFirstTime && this.sourceSlotNameProps.push(slotBind);\n\n                var slotName = evalExpr(slotBind.expr, this.scope, this.owner);\n                target = this.sourceSlots.named[slotName];\n                if (!target) {\n                    target = this.sourceSlots.named[slotName] = [];\n                }\n                target.push(child);\n            }\n            else if (isFirstTime) {\n                target = this.sourceSlots.noname;\n                if (!target) {\n                    target = this.sourceSlots.noname = [];\n                }\n                target.push(child);\n            }\n        }\n    }\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = 5;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\nComponent.prototype._ctx = (new Date()).getTime().toString(16);\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            try {\n                this[name]();\n            }\n            catch (e) {\n                handleError(e, this, 'hook:' + name);\n            }\n        }\n\n        this._afterLife = this.lifeCycle;\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    // #[begin] devtool\n    emitDevtool('comp-event', {\n        name: name,\n        event: event,\n        target: this\n    });\n    // #[end]\n\n    each(this.listeners[name], function (listener) {\n        try {\n            listener.fn.call(me, event);\n        }\n        catch (e) {\n            handleError(e, me, 'event:' + name);\n        }\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    var me = this;\n    try {\n        var result = this.computed[computedExpr].call({\n            data: {\n                get: function (expr) {\n                    // #[begin] error\n                    if (!expr) {\n                        throw new Error('[SAN ERROR] call get method in computed need argument');\n                    }\n                    // #[end]\n\n                    if (!computedDeps[expr]) {\n                        computedDeps[expr] = 1;\n\n                        if (me.computed[expr] && !me.computedDeps[expr]) {\n                            me._calcComputed(expr);\n                        }\n\n                        me.watch(expr, function () {\n                            me._calcComputed(computedExpr);\n                        });\n                    }\n\n                    return me.data.get(expr);\n                }\n            }\n        });\n        this.data.set(computedExpr, result);\n    }\n    catch (e) {\n        handleError(e, this, 'computed:' + computedExpr);\n    }\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var handler = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof handler === 'function') {\n            // #[begin] devtool\n            emitDevtool('comp-message', {\n                target: this,\n                value: value,\n                name: name,\n                receiver: parentComponent\n            });\n            // #[end]\n\n            try {\n                handler.call(\n                    parentComponent,\n                    {target: this, value: value, name: name}\n                );\n            }\n            catch (e) {\n                handleError(e, parentComponent, 'message:' + (name || '*'));\n            }\n            return;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n\n    // #[begin] devtool\n    emitDevtool('comp-message', {target: this, value: value, name: name});\n    // #[end]\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === 6 && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        if (children) {\n            for (var i = 0, l = children.length; i < l; i++) {\n                elementTraversal(children[i]);\n                if (refTarget) {\n                    return;\n                }\n            }\n        }\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === 1) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case 4:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case 5:\n                    ref = element.source.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            if (refTarget) {\n                return;\n            }\n\n            childrenTraversal(element.slotChildren);\n        }\n\n        if (refTarget) {\n            return;\n        }\n\n        childrenTraversal(element.children);\n    }\n\n    this._rootNode ? elementTraversal(this._rootNode) : childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        if (this.source) {\n            this._srcSbindData = nodeSBindUpdate(\n                this.source.directives.bind,\n                this._srcSbindData,\n                this.scope,\n                this.owner,\n                changes,\n                function (name, value) {\n                    if (name in me.source._pi) {\n                        return;\n                    }\n\n                    me.data.set(name, value, {\n                        target: {\n                            node: me.owner\n                        }\n                    });\n                }\n            );\n        }\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = {\n                            type: 4,\n                            paths: [\n                                {\n                                    type: 1,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        };\n                        updateExpr = changeExpr;\n                    }\n\n                    if (relation >= 2 && change.type === 2) {\n                        me.data.splice(setExpr, [change.index, change.deleteCount].concat(change.insertions), {\n                            target: {\n                                node: me.owner\n                            }\n                        });\n                    }\n                    else {\n                        me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                            target: {\n                                node: me.owner\n                            }\n                        });\n                    }\n                }\n            });\n\n            each(me.sourceSlotNameProps, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._initSourceSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this._dataChanges;\n    if (dataChanges) {\n        // #[begin] devtool\n        this._toPhase('beforeUpdate');\n        // #[end]\n\n        this._dataChanges = null;\n\n        this._sbindData = nodeSBindUpdate(\n            this.aNode.directives.bind,\n            this._sbindData,\n            this.data,\n            this,\n            dataChanges,\n            function (name, value) {\n                if (me._rootNode || (name in me.aNode._pi)) {\n                    return;\n                }\n\n                getPropHandler(me.tagName, name)(me.el, value, name, me);\n            }\n        );\n\n        var htmlDirective = this.aNode.directives.html;\n        \n        if (this._rootNode) {\n            this._rootNode._update(dataChanges);\n            this._rootNode._getElAsRootNode && (this.el = this._rootNode._getElAsRootNode());\n        }\n        else if (htmlDirective) {\n            var len = dataChanges.length;\n            while (len--) {\n                if (changeExprCompare(dataChanges[len].expr, htmlDirective.value, this.data)) {\n                    // #[begin] error\n                    warnSetHTML(this.el);\n                    // #[end]\n\n                    this.el.innerHTML = evalExpr(htmlDirective.value, this.data, this);\n                    break;\n                }\n            }\n        }\n        else {\n            var dynamicProps = this.aNode._dp;\n            for (var i = 0; i < dynamicProps.length; i++) {\n                var prop = dynamicProps[i];\n\n                for (var j = 0; j < dataChanges.length; j++) {\n                    var change = dataChanges[j];\n                    if (changeExprCompare(change.expr, prop.expr, this.data)\n                        || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.data)\n                    ) {\n                        prop.handler(this.el, evalExpr(prop.expr, this.data, this), prop.name, this);\n                        break;\n                    }\n                }\n            }\n\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i]._update(dataChanges);\n            }\n        }\n\n        if (needReloadForSlot) {\n            this._initSourceSlots();\n            this._repaintChildren();\n        }\n\n        for (var i = 0; i < this.implicitChildren.length; i++) {\n            this.implicitChildren[i]._update(dataChanges);\n        }\n\n        if (typeof this.updated === 'function') {\n            this.updated();\n        }\n\n        if (this.owner && this._updateBindxOwner(dataChanges)) {\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n    var xbindUped;\n\n    each(dataChanges, function (change) {\n        each(me.binds, function (bindItem) {\n            var changeExpr = change.expr;\n            if (bindItem.x\n                && !isDataChangeByElement(change, me.owner)\n                && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n            ) {\n                var updateScopeExpr = bindItem.expr;\n                if (changeExpr.paths.length > 1) {\n                    updateScopeExpr = {\n                        type: 4,\n                        paths: bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                    };\n                }\n\n                xbindUped = 1;\n                me.scope.set(\n                    updateScopeExpr,\n                    evalExpr(changeExpr, me.data, me),\n                    {\n                        target: {\n                            node: me,\n                            prop: bindItem.name\n                        }\n                    }\n                );\n            }\n        });\n    });\n\n    return xbindUped;\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    // TODO: repaint once?\n\n    if (this._rootNode) {\n        var parentEl = this._rootNode.el.parentNode;\n        var beforeEl = this._rootNode.el.nextSibling;\n        this._rootNode.dispose(0, 1);\n        this.slotChildren = [];\n\n        this._rootNode = createNode(this.aNode, this, this.data, this);\n        this._rootNode.attach(parentEl, beforeEl);\n        this._rootNode._getElAsRootNode && (this.el = this._rootNode._getElAsRootNode());\n    }\n    else {\n        elementDisposeChildren(this.children, 0, 1);\n        this.children = [];\n        this.slotChildren = [];\n\n        for (var i = 0, l = this.aNode.children.length; i < l; i++) {\n            var child = createNode(this.aNode.children[i], this, this.data, this);\n            this.children.push(child);\n            child.attach(this.el);\n        }\n    }\n};\n\n\n/**\n * 初始化组件内部监听数据变化\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._initDataChanger = function (change) {\n    var me = this;\n\n    this._dataChanger = function (change) {\n        if (me._afterLife.created) {\n            if (!me._dataChanges) {\n                nextTick(me._update, me);\n                me._dataChanges = [];\n            }\n\n            me._dataChanges.push(change);\n        }\n        else if (me.lifeCycle.inited && me.owner) {\n            me._updateBindxOwner([change]);\n        }\n    };\n\n    this.data.listen(this._dataChanger);\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n    var value = evalExpr(dataExpr, this.data, this);\n    var me = this;\n\n    this.data.listen(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, me.data)) {\n            var newValue = evalExpr(dataExpr, me.data, me);\n\n            if (newValue !== value) {\n                try {\n                    listener.call(\n                        me, \n                        newValue, \n                        {\n                            oldValue: value,\n                            newValue: newValue,\n                            change: change\n                        }\n                    );\n                }\n                catch (e) {\n                    handleError(e, me, 'watch:' + dataName);\n                }\n                value = newValue;\n            }\n        }\n    });\n};\n\nComponent.prototype._getElAsRootNode = function () {\n    return this.el;\n};\n\n/**\n * 将组件attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nComponent.prototype.attach = function (parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        // #[begin] devtool\n        this._toPhase('beforeAttach');\n        // #[end]\n\n        var aNode = this.aNode;\n\n        if (aNode.hasRootNode || this.components[aNode.tagName]) {\n            // #[begin] devtool\n            this._toPhase('beforeCreate');\n            // #[end]\n            this._rootNode = this._rootNode || createNode(aNode, this, this.data, this);\n            this._rootNode.attach(parentEl, beforeEl);\n            this._rootNode._getElAsRootNode && (this.el = this._rootNode._getElAsRootNode());\n            this._toPhase('created');\n        }\n        else {\n            if (!this.el) {\n                // #[begin] devtool\n                this._toPhase('beforeCreate');\n                // #[end]\n\n                var props;\n\n                if (aNode._ce && aNode._i > 2) {\n                    props = aNode._dp;\n                    this.el = (aNode._el || preheatEl(aNode)).cloneNode(false);\n                }\n                else {\n                    props = aNode.props;\n                    this.el = createEl(this.tagName);\n                }\n\n                if (this._sbindData) {\n                    for (var key in this._sbindData) {\n                        if (this._sbindData.hasOwnProperty(key)) {\n                            getPropHandler(this.tagName, key)(\n                                this.el,\n                                this._sbindData[key],\n                                key,\n                                this\n                            );\n                        }\n                    }\n                }\n\n                for (var i = 0, l = props.length; i < l; i++) {\n                    var prop = props[i];\n                    var value = evalExpr(prop.expr, this.data, this);\n\n                    if (value || !styleProps[prop.name]) {\n                        prop.handler(this.el, value, prop.name, this);\n                    }\n                }\n\n                this._toPhase('created');\n            }\n\n            insertBefore(this.el, parentEl, beforeEl);\n\n            if (!this._contentReady) {\n                var htmlDirective = aNode.directives.html;\n\n                if (htmlDirective) {\n                    // #[begin] error\n                    warnSetHTML(this.el);\n                    // #[end]\n\n                    this.el.innerHTML = evalExpr(htmlDirective.value, this.data, this);\n                }\n                else {\n                    for (var i = 0, l = aNode.children.length; i < l; i++) {\n                        var childANode = aNode.children[i];\n                        var child = childANode.Clazz\n                            ? new childANode.Clazz(childANode, this, this.data, this)\n                            : createNode(childANode, this, this.data, this);\n                        this.children.push(child);\n                        child.attach(this.el);\n                    }\n                }\n\n                this._contentReady = 1;\n            }\n\n            this._attached();\n        }\n\n        this._toPhase('attached');\n\n        // element 都是内部创建的，只有动态创建的 component 才会进入这个分支\n        if (this.owner && !this.parent) {\n            this.owner.implicitChildren.push(this);\n        }\n    }\n};\n\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype.dispose = elementOwnDispose;\nComponent.prototype._onEl = elementOwnOnEl;\nComponent.prototype._attached = elementOwnAttached;\nComponent.prototype._leave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // #[begin] devtool\n            this._toPhase('beforeDetach');\n            // #[end]\n            this.data.unlisten();\n            this.dataChanger = null;\n            this._dataChanges = null;\n\n            var len = this.implicitChildren.length;\n            while (len--) {\n                this.implicitChildren[len].dispose(0, 1);\n            }\n\n            this.implicitChildren = null;\n\n            this.source = null;\n            this.sourceSlots = null;\n            this.sourceSlotNameProps = null;\n\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n\n            if (this._rootNode) {\n                // 如果没有parent，说明是一个root component，一定要从dom树中remove\n                this._rootNode.dispose(this.disposeNoDetach && this.parent);\n            }\n            else {\n                var len = this.children.length;\n                while (len--) {\n                    this.children[len].dispose(1, 1);\n                }\n\n                len = this._elFns.length;\n                while (len--) {\n                    var fn = this._elFns[len];\n                    un(this.el, fn[0], fn[1], fn[2]);\n                }\n                this._elFns = null;\n\n                // #[begin] allua\n                /* istanbul ignore if */\n                if (this._inputTimer) {\n                    clearInterval(this._inputTimer);\n                    this._inputTimer = null;\n                }\n                // #[end]\n\n                // 如果没有parent，说明是一个root component，一定要从dom树中remove\n                if (!this.disposeNoDetach || !this.parent) {\n                    removeEl(this.el);\n                }\n            }\n\n            this._toPhase('detached');\n\n            // #[begin] devtool\n            this._toPhase('beforeDispose');\n            // #[end]\n\n            this._rootNode = null;\n            this.el = null;\n            this.owner = null;\n            this.scope = null;\n            this.children = null;\n\n            this._toPhase('disposed');\n\n            if (this._ondisposed) {\n                this._ondisposed();\n            }\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        // #[begin] devtool\n        this._toPhase('beforeDetach');\n        // #[end]\n\n        if (this._rootNode) {\n            if (this._rootNode.detach) {\n                this._rootNode.detach();\n            }\n            else {\n                this._rootNode.dispose();\n                this._rootNode = null;\n            }\n        }\n        else {\n            removeEl(this.el);\n        }\n\n        this._toPhase('detached');\n    }\n};\n\n\n// exports = module.exports = Component;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 创建组件类\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @param {Function=} SuperComponent 父组件类\n * @return {Function}\n */\nfunction defineComponent(proto, SuperComponent) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] defineComponent need a plain object.');\n    }\n    // #[end]\n\n    SuperComponent = SuperComponent || Component;\n    function ComponentClass(option) { // eslint-disable-line\n        SuperComponent.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, SuperComponent);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 组件Loader类\n */\n\n// var nextTick = require('../util/next-tick');\n// var each = require('../util/each');\n\n\n/**\n * 组件Loader类\n *\n * @class\n *\n * @param {Function} load load方法\n * @param {Function=} placeholder loading过程中渲染的组件\n * @param {Function=} fallback load失败时渲染的组件\n */\nfunction ComponentLoader(load, placeholder, fallback) {\n    this.load = load;\n    this.placeholder = placeholder;\n    this.fallback = fallback;\n\n    this.listeners = [];\n}\n\n\n/**\n * 开始加载组件\n *\n * @param {Function} onload 组件加载完成监听函数\n */\nComponentLoader.prototype.start = function (onload) {\n    var me = this;\n\n    switch (this.state) {\n        case 2:\n            nextTick(function () {\n                onload(me.Component);\n            });\n            break;\n\n        case 1:\n            this.listeners.push(onload);\n            break;\n\n        default:\n            this.listeners.push(onload);\n            this.state = 1;\n\n            var startLoad = this.load();\n            var done = function (RealComponent) {\n                me.done(RealComponent);\n            };\n\n            if (startLoad && typeof startLoad.then === 'function') {\n                startLoad.then(done, done);\n            }\n    }\n};\n\n/**\n * 完成组件加载\n *\n * @param {Function=} ComponentClass 组件类\n */\nComponentLoader.prototype.done = function (ComponentClass) {\n    this.state = 2;\n    ComponentClass = ComponentClass || this.fallback;\n    this.Component = ComponentClass;\n\n    each(this.listeners, function (listener) {\n        listener(ComponentClass);\n    });\n};\n\n// exports = module.exports = ComponentLoader;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 解析组件的模板\n */\n\n// var warn = require('../util/warn');\n// var parseTemplate = require('../parser/parse-template');\n// var ExprType = require('../parser/expr-type');\n\n\n\n/**\n * 解析组件的模板\n *\n * @param {Function} ComponentClass 组件类\n * @return {ANode}\n */\nfunction parseComponentTemplate(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    \n    var tplANode = parseTemplate(ComponentClass.template || proto.template, {\n        trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n        delimiters: proto.delimiters || ComponentClass.delimiters\n    });\n\n    var aNode = tplANode.children[0];\n    if (aNode && aNode.textExpr) {\n        aNode = null;\n    }\n\n    // #[begin] error\n    if (tplANode.children.length !== 1 || !aNode) {\n        warn('Component template must have a root element.');\n    }\n    // #[end]\n\n    aNode = aNode || {\n        directives: {},\n        props: [],\n        events: [],\n        children: []\n    };\n\n    if (aNode.tagName === 'template') {\n        delete aNode.tagName;\n    }\n\n    if (proto.autoFillStyleAndId !== false && ComponentClass.autoFillStyleAndId !== false) {\n        var extraPropExists = {};\n\n        var len = aNode.props.length;\n        while (len--) {\n            var prop = aNode.props[len];\n            switch (prop.name) {\n                case 'class':\n                case 'style':\n                    extraPropExists[prop.name] = true;\n                    prop.expr = {\n                        type: 5,\n                        expr: {\n                            type: 4,\n                            paths: [\n                                {type: 1, value: prop.name}\n                            ]\n                        },\n                        filters: [{\n                            type: 6,\n                            args: [prop.expr],\n                            name: {\n                                type: 4,\n                                paths: [\n                                    {type: 1, value: '_x' + prop.name}\n                                ]\n                            }\n                        }]\n                    }\n                    break;\n\n                case 'id':\n                    extraPropExists[prop.name] = true;\n                \n            }\n        }\n\n        if (!extraPropExists['class']) {\n            aNode.props.push({\n                name: 'class',\n                expr: {\n                    type: 5,\n                    expr: {\n                        type: 4,\n                        paths: [\n                            {type: 1, value: 'class'}\n                        ]\n                    },\n                    filters: [{\n                        type: 6,\n                        args: [],\n                        name: {\n                            type: 4,\n                            paths: [\n                                {type: 1, value: '_class'}\n                            ]\n                        }\n                    }]\n                }\n            });\n        }\n\n        if (!extraPropExists.style) {\n            aNode.props.push({\n                name: 'style',\n                expr: {\n                    type: 5,\n                    expr: {\n                        type: 4,\n                        paths: [\n                            {type: 1, value: 'style'}\n                        ]\n                    },\n                    filters: [{\n                        type: 6,\n                        args: [],\n                        name: {\n                            type: 4,\n                            paths: [\n                                {type: 1, value: '_style'}\n                            ]\n                        }\n                    }]\n                }\n            });\n        }\n\n        if (!extraPropExists.id) {\n            aNode.props.push({ \n                name: 'id', \n                expr: {\n                    type: 4,\n                    paths: [\n                        {type: 1, value: 'id'}\n                    ]\n                }\n            });\n        }\n    }\n\n    return aNode;\n}\n\n// exports = module.exports = parseComponentTemplate;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 常用标签表，用于 element 创建优化\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 常用标签表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj(\n    'div,span,img,ul,ol,li,dl,dt,dd,a,b,u,hr,'\n    + 'form,input,textarea,button,label,select,option,'\n    + 'table,tbody,th,tr,td,thead,main,aside,header,footer,nav'\n);\n\n// exports = module.exports = hotTags;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 判断是否结束桩\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file text 节点类\n */\n\n// var guid = require('../util/guid');\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, parent, scope, owner, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.id = this.id || guid++;\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            /* istanbul ignore if */\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = 1;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n    if (this.content == null) {\n        this.content = '';\n    }\n\n    if (this.aNode.textExpr.original) {\n        this.id = this.id || guid++;\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nTextNode.prototype.dispose = function (noDetach) {\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes.length;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n            if (text == null) {\n                text = '';\n            }\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file slot 节点类\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var removeEl = require('../browser/remove-el');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, parent, scope, owner, reverseWalker) {\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid++;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var sourceSlots = owner.sourceSlots;\n    var matchedSlots;\n    if (sourceSlots) {\n        matchedSlots = this.isNamed ? sourceSlots.named[this.name] : sourceSlots.noname;\n    }\n\n    if (matchedSlots) {\n        this.isInserted = true;\n    }\n\n    this.aNode = {\n        directives: aNode.directives,\n        props: [],\n        events: [],\n        children: matchedSlots || aNode.children.slice(0),\n        vars: aNode.vars\n    };\n\n    this._sbindData = nodeSBindInit(aNode.directives.bind, this.scope, this.owner);\n\n    // calc scoped slot vars\n    var initData;\n    if (this._sbindData) {\n        initData = extend({}, this._sbindData);\n    }\n\n    if (aNode.vars) {\n        initData = initData || {};\n        each(aNode.vars, function (varItem) {\n            initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n        });\n    }\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (initData) {\n        this.isScoped = true;\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        var hasFlagComment;\n\n        // start flag\n        if (currentNode && currentNode.nodeType === 8 && currentNode.data === 's-slot') {\n            this.sel = reverseWalker.current;\n            hasFlagComment = 1;\n            reverseWalker.goNext();\n        }\n        else {\n            this.sel = document.createComment(this.id);\n            reverseWalker.current\n                ? reverseWalker.target.insertBefore(this.sel, reverseWalker.current)\n                : reverseWalker.target.appendChild(this.sel);\n        }\n\n        var aNodeChildren = this.aNode.children;\n        for (var i = 0, l = aNodeChildren.length; i < l; i++) {\n            this.children.push(createReverseNode(\n                aNodeChildren[i],\n                this,\n                this.childScope || this.scope,\n                this.childOwner || this.owner,\n                reverseWalker\n            ));\n        }\n\n        // end flag\n        if (hasFlagComment) {\n            this.el = reverseWalker.current;\n            reverseWalker.goNext();\n        }\n        else {\n            this.el = document.createComment(this.id);\n            reverseWalker.current\n                ? reverseWalker.target.insertBefore(this.el, reverseWalker.current)\n                : reverseWalker.target.appendChild(this.el);\n        }\n\n        this.lifeCycle = LifeCycle.attached;\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = 6;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this.children, noDetach, noTransition);\n\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n\n    this.sel = null;\n    this.el = null;\n    this.owner = null;\n    this.scope = null;\n    this.children = null;\n\n    this.lifeCycle = LifeCycle.disposed;\n\n    if (this._ondisposed) {\n        this._ondisposed();\n    }\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== this.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i]._update(changes);\n            }\n        }\n    }\n    else {\n        if (this.isScoped) {\n            var varKeys = {};\n            each(this.aNode.vars, function (varItem) {\n                varKeys[varItem.name] = 1;\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n            var scopedChanges = [];\n\n            this._sbindData = nodeSBindUpdate(\n                this.aNode.directives.bind,\n                this._sbindData,\n                this.scope,\n                this.owner,\n                changes,\n                function (name, value) {\n                    if (varKeys[name]) {\n                        return;\n                    }\n\n                    me.childScope.set(name, value);\n                    scopedChanges.push({\n                        type: 1,\n                        expr: {\n                            type: 4,\n                            paths: [\n                                {type: 1, value: name}\n                            ]\n                        },\n                        value: value,\n                        option: {}\n                    });\n                }\n            );\n\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== 2) {\n                        scopedChanges.push({\n                            type: 1,\n                            expr: {\n                                type: 4,\n                                paths: [\n                                    {type: 1, value: name}\n                                ]\n                            },\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: {\n                                type: 4,\n                                paths: [\n                                    {type: 1, value: name}\n                                ]\n                            },\n                            type: 2,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i]._update(scopedChanges);\n            }\n        }\n        else if (!this.isInserted) {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i]._update(changes);\n            }\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file for 指令节点类\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.indexName = this.directive.index || '$index';\n\n    this.raw[this.directive.item] = item;\n    this.raw[this.indexName] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n\n    if (expr.type === 4 && expr.paths[0].value === directive.item) {\n        expr = {\n            type: 4,\n            paths: directive.value.paths.concat(\n                {\n                    type: 2,\n                    value: this.raw[this.indexName]\n                },\n                expr.paths.slice(1)\n            )\n        };\n    }\n\n    var resolvedPaths = [];\n\n    for (var i = 0, l = expr.paths.length; i < l; i++) {\n        var pathSeg = expr.paths[i];\n\n        if (pathSeg.type === 4) {\n            switch (pathSeg.paths[0].value) {\n                case directive.item:\n                    pathSeg = {\n                        type: 4,\n                        paths: directive.value.paths.concat(\n                            {\n                                type: 2,\n                                value: this.raw[this.indexName]\n                            },\n                            pathSeg.paths.slice(1)\n                        )\n                    };\n                    break;\n                   \n                case this.indexName:\n                    pathSeg = {\n                        type: 2,\n                        value: this.raw[this.indexName]\n                    };\n                    break;\n            }\n        }\n\n        resolvedPaths.push(pathSeg);\n    }\n\n    return {\n        type: 4,\n        paths: resolvedPaths\n    };\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * for 指令节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, parent, scope, owner, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid++;\n    this.children = [];\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    this.itemPaths = [\n        {\n            type: 1,\n            value: this.param.item\n        }\n    ];\n\n    this.itemExpr = {\n        type: 4,\n        paths: this.itemPaths,\n        raw: this.param.item\n    };\n\n    if (this.param.index) {\n        this.indexExpr = {\n            type: 4,\n            paths: [{\n                type: 1,\n                value: '' + this.param.index\n            }]\n        };\n    }\n\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.listData = evalExpr(this.param.value, this.scope, this.owner);\n        if (this.listData instanceof Array) {\n            for (var i = 0; i < this.listData.length; i++) {\n                this.children.push(createReverseNode(\n                    this.aNode.forRinsed,\n                    this,\n                    new ForItemData(this, this.listData[i], i),\n                    this.owner,\n                    reverseWalker\n                ));\n            }\n        }\n        else if (this.listData && typeof this.listData === 'object') {\n            for (var i in this.listData) {\n                if (this.listData.hasOwnProperty(i) && this.listData[i] != null) {\n                    this.children.push(createReverseNode(\n                        this.aNode.forRinsed,\n                        this,\n                        new ForItemData(this, this.listData[i], i),\n                        this.owner,\n                        reverseWalker\n                    ));\n                }\n            }\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = 3;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n    this.listData = evalExpr(this.param.value, this.scope, this.owner);\n\n    this._createChildren();\n};\n\n/**\n * 创建子元素\n */\nForNode.prototype._createChildren = function () {\n    var parentEl = this.el.parentNode;\n    var listData = this.listData;\n\n    if (listData instanceof Array) {\n        for (var i = 0; i < listData.length; i++) {\n            var childANode = this.aNode.forRinsed;\n            var child = childANode.Clazz\n                        ? new childANode.Clazz(childANode, this, new ForItemData(this, listData[i], i), this.owner)\n                        : createNode(childANode, this, new ForItemData(this, listData[i], i), this.owner);\n\n            this.children.push(child);\n            child.attach(parentEl, this.el);\n        }\n    }\n    else if (listData && typeof listData === 'object') {\n        for (var i in listData) {\n            if (listData.hasOwnProperty(i) && listData[i] != null) {\n                var childANode = this.aNode.forRinsed;\n                var child = childANode.Clazz\n                        ? new childANode.Clazz(childANode, this, new ForItemData(this, listData[i], i), this.owner)\n                        : createNode(childANode, this, new ForItemData(this, listData[i], i), this.owner);\n                this.children.push(child);\n                child.attach(parentEl, this.el);\n            }\n        }\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n    var listData = evalExpr(this.param.value, this.scope, this.owner);\n    var oldIsArr = this.listData instanceof Array;\n    var newIsArr = listData instanceof Array;\n\n    if (this.children.length) {\n        if (!listData || newIsArr && listData.length === 0) {\n            this._disposeChildren();\n            this.listData = listData;\n        }\n        else if (oldIsArr !== newIsArr || !newIsArr) {\n            // 就是这么暴力\n            // 不推荐使用for遍历object，用的话自己负责\n            this.listData = listData;\n\n            var isListChanged;\n            for (var cIndex = 0; !isListChanged && cIndex < changes.length; cIndex++) {\n                isListChanged = changeExprCompare(changes[cIndex].expr, this.param.value, this.scope);\n            }\n            var dataHotspot = this.aNode._d;\n            if (isListChanged || dataHotspot && changesIsInDataRef(changes, dataHotspot)) {\n                var me = this;\n                this._disposeChildren(null, function () {\n                    me._createChildren();\n                });\n            }\n        }\n        else {\n            this._updateArray(changes, listData);\n            this.listData = listData;\n        }\n    }\n    else {\n        this.listData = listData;\n        this._createChildren();\n    }\n};\n\n/**\n * 销毁释放子元素\n *\n * @param {Array?} children 要销毁的子元素，默认为自身的children\n * @param {Function} callback 释放完成的回调函数\n */\nForNode.prototype._disposeChildren = function (children, callback) {\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n\n    var len = this.children.length;\n\n    var violentClear = !this.aNode.directives.transition\n        && !children\n        // 是否 parent 的唯一 child\n        && len && parentFirstChild === this.children[0].el && parentLastChild === this.el\n        ;\n\n    if (!children) {\n        children = this.children;\n        this.children = [];\n    }\n\n\n    var disposedChildCount = 0;\n    len = children.length;\n\n    // 调用入口处已保证此处必有需要被删除的 child\n    for (var i = 0; i < len; i++) {\n        var disposeChild = children[i];\n\n        if (violentClear) {\n            disposeChild && disposeChild.dispose(violentClear, violentClear);\n        }\n        else if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose();\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // #[begin] allua\n        /* istanbul ignore next */\n        if (ie) {\n            parentEl.innerHTML = '';\n        }\n        else {\n            // #[end]\n            parentEl.textContent = '';\n            // #[begin] allua\n        }\n        // #[end]\n\n        this.el = document.createComment(this.id);\n        parentEl.appendChild(this.el);\n        callback && callback();\n    }\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount >= len) {\n            callback && callback();\n        }\n    }\n};\n\nForNode.prototype.opti = typeof navigator !== 'undefined'\n    && /chrome\\/[0-9]+/i.test(navigator.userAgent);\n/**\n * 数组类型的视图更新\n *\n * @param {Array} changes 数据变化信息\n * @param {Array} newList 新数组数据\n */\nForNode.prototype._updateArray = function (changes, newList) {\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n    var childIsElem = this.children[0].nodeType === 4;\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n        childrenNeedUpdate = null;\n        isOnlyDispose = false;\n    }\n\n    var disposeChildren = [];\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    //\n    var isOnlyDispose = true;\n\n    var childrenNeedUpdate = {};\n\n    var newLen = newList.length;\n    var getItemKey = this.aNode._gfk;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0; cIndex < changes.length; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else {\n            if (relation > 2) {\n                // 变更表达式是list绑定表达式的子项\n                // 只需要对相应的子项进行更新\n                var changePaths = change.expr.paths;\n                var forLen = this.param.value.paths.length;\n                var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n                if (isNaN(changeIndex)) {\n                    pushToChildrenChanges(change);\n                }\n                else if (!isChildrenRebuild) {\n                    isOnlyDispose = false;\n                    childrenNeedUpdate && (childrenNeedUpdate[changeIndex] = 1);\n\n                    childrenChanges[changeIndex] = childrenChanges[changeIndex] || [];\n                    if (this.param.index) {\n                        childrenChanges[changeIndex].push(change);\n                    }\n\n                    change = change.type === 1\n                        ? {\n                            type: change.type,\n                            expr: {\n                                type: 4,\n                                paths: this.itemPaths.concat(changePaths.slice(forLen + 1))\n                            },\n                            value: change.value,\n                            option: change.option\n                        }\n                        : {\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            insertions: change.insertions,\n                            type: change.type,\n                            expr: {\n                                type: 4,\n                                paths: this.itemPaths.concat(changePaths.slice(forLen + 1))\n                            },\n                            value: change.value,\n                            option: change.option\n                        };\n\n\n                    childrenChanges[changeIndex].push(change);\n\n                    if (change.type === 1) {\n                        if (this.children[changeIndex]) {\n                            this.children[changeIndex].scope._set(\n                                change.expr,\n                                change.value,\n                                {\n                                    silent: 1\n                                }\n                            );\n                        }\n                        else {\n                            // 设置数组项的索引可能超出数组长度，此时需要新增\n                            // 比如当前数组只有2项，但是set list[4]\n                            this.children[changeIndex] = 0;\n                        }\n                    }\n                    else if (this.children[changeIndex]) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            {\n                                silent: 1\n                            }\n                        );\n                    }\n                }\n            }\n            else if (isChildrenRebuild) {\n                continue;\n            }\n            else if (relation === 2 && change.type === 2\n                && (this.owner.updateMode !== 'optimized' || !this.opti || this.aNode.directives.transition)\n            ) {\n                childrenNeedUpdate = null;\n\n                // 变更表达式是list绑定表达式本身数组的splice操作\n                // 此时需要删除部分项，创建部分项\n                var changeStart = change.index;\n                var deleteCount = change.deleteCount;\n                var insertionsLen = change.insertions.length;\n                var newCount = insertionsLen - deleteCount;\n\n                if (newCount) {\n                    var indexChange = this.param.index\n                        ? {\n                            type: 1,\n                            option: change.option,\n                            expr: this.indexExpr\n                        }\n                        : null;\n\n                    for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                        if (indexChange) {\n                            isOnlyDispose = false;\n                            (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                        }\n\n                        var child = this.children[i];\n                        if (child) {\n                            child.scope.raw[child.scope.indexName] = i - deleteCount + insertionsLen;\n                        }\n                    }\n                }\n\n                var deleteLen = deleteCount;\n                while (deleteLen--) {\n                    if (deleteLen < insertionsLen) {\n                        isOnlyDispose = false;\n                        var i = changeStart + deleteLen;\n                        // update\n                        (childrenChanges[i] = childrenChanges[i] || []).push({\n                            type: 1,\n                            option: change.option,\n                            expr: this.itemExpr,\n                            value: change.insertions[deleteLen]\n                        });\n                        if (this.children[i]) {\n                            this.children[i].scope.raw[this.param.item] = change.insertions[deleteLen];\n                        }\n                    }\n                }\n\n                if (newCount < 0) {\n                    disposeChildren = disposeChildren.concat(\n                        this.children.splice(changeStart + insertionsLen, -newCount)\n                    );\n                    childrenChanges.splice(changeStart + insertionsLen, -newCount);\n                }\n                else if (newCount > 0) {\n                    isOnlyDispose = false;\n                    var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                    this.children.splice.apply(this.children, spliceArgs);\n                    childrenChanges.splice.apply(childrenChanges, spliceArgs);\n                }\n            }\n            else {\n                childrenNeedUpdate = null;\n                isOnlyDispose = false;\n\n                isChildrenRebuild = 1;\n\n                // 变更表达式是list绑定表达式本身或母项的重新设值\n                // 此时需要更新整个列表\n\n                if (getItemKey && newLen && oldChildrenLen) {\n                    // 如果设置了trackBy，用lis更新。开始 ====\n                    var newListKeys = [];\n                    var oldListKeys = [];\n                    var newListKeysMap = {};\n                    var oldListInNew = [];\n                    var oldListKeyIndex = {};\n\n                    for (var i = 0; i < newList.length; i++) {\n                        var itemKey = getItemKey(newList[i]);\n                        newListKeys.push(itemKey);\n                        newListKeysMap[itemKey] = i;\n                    };\n\n                    for (var i = 0; i < this.listData.length; i++) {\n                        var itemKey = getItemKey(this.listData[i]);\n\n                        oldListKeys.push(itemKey);\n                        oldListKeyIndex[itemKey] = i;\n\n                        if (newListKeysMap[itemKey] != null) {\n                            oldListInNew[i] = newListKeysMap[itemKey];\n                        }\n                        else {\n                            oldListInNew[i] = -1;\n                            disposeChildren.push(this.children[i]);\n                        }\n                    };\n\n                    var newIndexStart = 0;\n                    var newIndexEnd = newLen;\n                    var oldIndexStart = 0;\n                    var oldIndexEnd = oldChildrenLen;\n\n                    // 优化：从头开始比对新旧 list 项是否相同\n                    while (newIndexStart < newLen\n                        && oldIndexStart < oldChildrenLen\n                        && newListKeys[newIndexStart] === oldListKeys[oldIndexStart]\n                    ) {\n                        if (this.listData[oldIndexStart] !== newList[newIndexStart]) {\n                            this.children[oldIndexStart].scope.raw[this.param.item] = newList[newIndexStart];\n                            (childrenChanges[oldIndexStart] = childrenChanges[oldIndexStart] || []).push({\n                                type: 1,\n                                option: change.option,\n                                expr: this.itemExpr,\n                                value: newList[newIndexStart]\n                            });\n                        }\n\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[oldIndexStart] = childrenChanges[oldIndexStart] || []).push(change);\n                        }\n\n                        newIndexStart++;\n                        oldIndexStart++;\n                    }\n\n                    var indexChange = this.param.index\n                        ? {\n                            type: 1,\n                            option: change.option,\n                            expr: this.indexExpr\n                        }\n                        : null;\n\n                    // 优化：从尾开始比对新旧 list 项是否相同\n                    while (newIndexEnd > newIndexStart && oldIndexEnd > oldIndexStart\n                        && newListKeys[newIndexEnd - 1] === oldListKeys[oldIndexEnd - 1]\n                    ) {\n                        newIndexEnd--;\n                        oldIndexEnd--;\n\n                        if (this.listData[oldIndexEnd] !== newList[newIndexEnd]) {\n                            // refresh item\n                            this.children[oldIndexEnd].scope.raw[this.param.item] = newList[newIndexEnd];\n                            (childrenChanges[oldIndexEnd] = childrenChanges[oldIndexEnd] || []).push({\n                                type: 1,\n                                option: change.option,\n                                expr: this.itemExpr,\n                                value: newList[newIndexEnd]\n                            });\n                        }\n\n                        // refresh index\n                        if (newIndexEnd !== oldIndexEnd) {\n                            this.children[oldIndexEnd].scope.raw[this.children[oldIndexEnd].scope.indexName] = newIndexEnd;\n\n                            if (indexChange) {\n                                (childrenChanges[oldIndexEnd] = childrenChanges[oldIndexEnd] || []).push(indexChange);\n                            }\n                        }\n\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[oldIndexEnd] = childrenChanges[oldIndexEnd] || []).push(change);\n                        }\n                    }\n\n                    var oldListLIS = [];\n                    var lisIdx = [];\n                    var lisPos = -1;\n                    var lisSource = oldListInNew.slice(oldIndexStart, oldIndexEnd);\n                    var len = oldIndexEnd - oldIndexStart;\n                    var preIdx = new Array(len);\n\n                    for (var i = 0; i < len; i++) {\n                        var oldItemInNew = lisSource[i];\n                        if (oldItemInNew === -1) {\n                            continue;\n                        }\n\n                        var rePos = -1;\n                        var rePosEnd = oldListLIS.length;\n\n                        if (rePosEnd > 0 && oldListLIS[rePosEnd - 1] <= oldItemInNew) {\n                            rePos = rePosEnd - 1;\n                        }\n                        else {\n                            while (rePosEnd - rePos > 1) {\n                                var mid = Math.floor((rePos + rePosEnd) / 2);\n                                if (oldListLIS[mid] > oldItemInNew) {\n                                    rePosEnd = mid;\n                                } else {\n                                    rePos = mid;\n                                }\n                            }\n                        }\n\n                        if (rePos !== -1) {\n                            preIdx[i] = lisIdx[rePos];\n                        }\n\n                        if (rePos === lisPos) {\n                            lisPos++;\n                            oldListLIS[lisPos] = oldItemInNew;\n                            lisIdx[lisPos] = i;\n                        } else if (oldItemInNew < oldListLIS[rePos + 1]) {\n                            oldListLIS[rePos + 1] = oldItemInNew;\n                            lisIdx[rePos + 1] = i;\n                        }\n                    }\n\n                    for (var i = lisIdx[lisPos]; lisPos >= 0; i = preIdx[i], lisPos--) {\n                        oldListLIS[lisPos] = i;\n                    }\n\n                    var oldListLISPos = oldListLIS.length;\n                    var staticPos = oldListLISPos ? oldListInNew[oldListLIS[--oldListLISPos] + oldIndexStart] : -1;\n\n                    var newChildren = [];\n                    var newChildrenChanges = [];\n\n                    var beforeEl = this.el;\n                    var parentEl = childIsElem && beforeEl.parentNode;\n                    for (var i = newLen - 1; i >= 0; i--) {\n                        if (i >= newIndexEnd) {\n                            newChildren[i] = this.children[oldChildrenLen - newLen + i];\n                            newChildrenChanges[i] = childrenChanges[oldChildrenLen - newLen + i];\n                            if (childIsElem) {\n                                beforeEl = newChildren[i].el;\n                            }\n                        }\n                        else if (i < newIndexStart) {\n                            newChildren[i] = this.children[i];\n                            newChildrenChanges[i] = childrenChanges[i];\n                        }\n                        else {\n                            var oldListIndex = oldListKeyIndex[newListKeys[i]];\n                            var oldListNode = this.children[oldListIndex];\n\n                            if (oldListNode && (childIsElem || i === staticPos)) {\n                                var oldScope = oldListNode.scope;\n\n                                // 如果数据本身引用发生变化，设置变更\n                                if (this.listData[oldListIndex] !== newList[i]) {\n                                    oldScope.raw[this.param.item] = newList[i];\n                                    (childrenChanges[oldListIndex] = childrenChanges[oldListIndex] || []).push({\n                                        type: 1,\n                                        option: change.option,\n                                        expr: this.itemExpr,\n                                        value: newList[i]\n                                    });\n                                }\n\n                                // refresh index\n                                if (indexChange && i !== oldListIndex) {\n                                    oldScope.raw[oldScope.indexName] = i;\n\n                                    if (indexChange) {\n                                        (childrenChanges[oldListIndex] = childrenChanges[oldListIndex] || []).push(indexChange);\n                                    }\n                                }\n\n                                // 对list更上级数据的直接设置\n                                if (relation < 2) {\n                                    (childrenChanges[oldListIndex] = childrenChanges[oldListIndex] || []).push(change);\n                                }\n\n                                newChildren[i] = oldListNode;\n                                newChildrenChanges[i] = childrenChanges[oldListIndex];\n\n                                if (i === staticPos) {\n                                    staticPos = oldListLISPos ? oldListInNew[oldListLIS[--oldListLISPos] + oldIndexStart] : -1;\n                                }\n                                else {\n                                    parentEl.insertBefore(oldListNode.el, beforeEl);\n                                }\n\n                                if (childIsElem) {\n                                    beforeEl = oldListNode.el;\n                                }\n                            }\n                            else {\n                                oldListNode && disposeChildren.push(oldListNode);\n                                newChildren[i] = 0;\n                                newChildrenChanges[i] = 0;\n                            }\n                        }\n                    }\n\n                    this.children = newChildren;\n                    childrenChanges = newChildrenChanges;\n                    // 如果设置了trackBy，用lis更新。结束 ====\n                }\n                else {\n                    // 老的比新的多的部分，标记需要dispose\n                    if (oldChildrenLen > newLen) {\n                        disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n                        childrenChanges = childrenChanges.slice(0, newLen);\n                        this.children = this.children.slice(0, newLen);\n                    }\n\n                    // 剩下的部分整项变更\n                    for (var i = 0; i < newLen; i++) {\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n                        }\n\n                        if (this.children[i]) {\n                            if (this.children[i].scope.raw[this.param.item] !== newList[i]) {\n                                this.children[i].scope.raw[this.param.item] = newList[i];\n                                (childrenChanges[i] = childrenChanges[i] || []).push({\n                                    type: 1,\n                                    option: change.option,\n                                    expr: this.itemExpr,\n                                    value: newList[i]\n                                });\n                            }\n                        }\n                        else {\n                            this.children[i] = 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    // 标记 length 是否发生变化\n    if (newLen !== oldChildrenLen && this.param.value.paths) {\n        var lengthChange = {\n            type: 1,\n            option: {},\n            expr: {\n                type: 4,\n                paths: this.param.value.paths.concat({\n                    type: 1,\n                    value: 'length'\n                })\n            }\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode._d)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 执行视图更新，先删再刷新\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    var me = this;\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n    else {\n        this._disposeChildren(disposeChildren, function () {\n            if (doCreateAndUpdate === me._doCreateAndUpdate) {\n                doCreateAndUpdate();\n            }\n        });\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n\n        if (isOnlyDispose) {\n            return;\n        }\n\n        var beforeEl = me.el;\n        var parentEl = beforeEl.parentNode;\n\n        // 对相应的项进行更新\n        // 如果不attached则直接创建，如果存在则调用更新函数\n        var j = -1;\n        for (var i = 0; i < newLen; i++) {\n            var child = me.children[i];\n\n            if (child) {\n                if (childrenChanges[i] && (!childrenNeedUpdate || childrenNeedUpdate[i])) {\n                    child._update(childrenChanges[i]);\n                }\n            }\n            else {\n                if (j < i) {\n                    j = i + 1;\n                    beforeEl = null;\n                    while (j < newLen) {\n                        var nextChild = me.children[j];\n                        if (nextChild) {\n                            beforeEl = nextChild.sel || nextChild.el;\n                            break;\n                        }\n                        j++;\n                    }\n                }\n\n                me.children[i] = createNode(me.aNode.forRinsed, me, new ForItemData(me, newList[i], i), me.owner);\n                me.children[i].attach(parentEl, beforeEl || me.el);\n            }\n        }\n    }\n};\n\n// exports = module.exports = ForNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file if 指令节点类\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, parent, scope, owner, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid++;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.aNode.directives['if'].value, this.scope, this.owner)) { // eslint-disable-line dot-notation\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                this.aNode.ifRinsed,\n                this,\n                this.scope,\n                this.owner,\n                reverseWalker\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        elseANode,\n                        me,\n                        me.scope,\n                        me.owner,\n                        reverseWalker\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = 2;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.aNode.directives['if'].value, this.scope, this.owner)) { // eslint-disable-line dot-notation\n        child = createNode(this.aNode.ifRinsed, this, this.scope, this.owner);\n        elseIndex = -1;\n    }\n    else {\n        each(this.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(elseANode, me, me.scope, me.owner);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        this.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        this.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = this.aNode.ifRinsed;\n    var elseIndex;\n\n    if (evalExpr(this.aNode.directives['if'].value, this.scope, this.owner)) { // eslint-disable-line dot-notation\n        elseIndex = -1;\n    }\n    else {\n        each(this.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    var child = this.children[0];\n    if (elseIndex === this.elseIndex) {\n        child && child._update(changes);\n    }\n    else {\n        this.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        this.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            (me.children[0] = createNode(childANode, me, me.scope, me.owner))\n                .attach(me.el.parentNode, me.el);\n        }\n    }\n};\n\nIfNode.prototype._getElAsRootNode = function () {\n    var child = this.children[0];\n    return child && child.el || this.el;\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file is 指令节点类\n */\n\n// var guid = require('../util/guid');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var TemplateNode = require('./template-node');\n\n/**\n * is 指令节点类\n *\n * @class\n * @param {Object} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model} scope 所属数据环境\n * @param {Component} owner 所属组件环境\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IsNode(aNode, parent, scope, owner, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid++;\n    this.children = [];\n    this.tagName = this.aNode.tagName;\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.cmpt = evalExpr(this.aNode.directives.is.value, this.scope) || this.tagName;\n        this.children[0] = createReverseNode(\n            this.aNode.isRinsed,\n            this,\n            this.scope,\n            this.owner,\n            reverseWalker,\n            this.cmpt\n        );\n    }\n    // #[end]\n}\n\nIsNode.prototype.nodeType = 9;\n\nIsNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nIsNode.prototype.attach = function (parentEl, beforeEl) {\n    this.cmpt = evalExpr(this.aNode.directives.is.value, this.scope) || this.tagName;\n    \n    var child = createNode(this.aNode.isRinsed, this, this.scope, this.owner, this.cmpt);\n    this.children[0] = child;\n    child.attach(parentEl, beforeEl);\n};\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIsNode.prototype._update = function (changes) {\n    var child = this.children[0];\n    var cmpt = evalExpr(this.aNode.directives.is.value, this.scope) || this.tagName;\n\n    if (cmpt === this.cmpt) {\n        child._update(changes);\n    }\n    else {\n        this.cmpt = cmpt;\n\n        var newChild = createNode(this.aNode.isRinsed, this, this.scope, this.owner, this.cmpt);\n        var el = child.el;\n        newChild.attach(el.parentNode, el);\n\n        child.dispose();\n        this.children[0] = newChild;\n    }\n};\n\nIsNode.prototype._getElAsRootNode = function () {\n    return this.children[0].el;\n};\n\n// exports = module.exports = IsNode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file ANode预热\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var hotTags = require('../browser/hot-tags');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n// var TextNode = require('./text-node');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var IsNode = require('./is-node');\n// var TemplateNode = require('./template-node');\n// var Element = require('./element');\n\n/**\n * ANode预热，分析的数据引用等信息\n *\n * @param {Object} aNode 要预热的ANode\n */\nfunction preheatANode(aNode, componentInstance) {\n    var stack = [];\n\n    function recordHotspotData(expr, notContentData) {\n        var refs = analyseExprDataHotspot(expr);\n        var refsLen = refs.length;\n\n        if (refsLen) {\n            for (var i = 0, len = stack.length; i < len; i++) {\n                if (!notContentData || i !== len - 1) {\n                    var data = stack[i]._d; // hotspot: data\n                    if (!data) {\n                        data = stack[i]._d = {};\n                    }\n\n                    for (var j = 0; j < refsLen; j++) {\n                        data[refs[j]] = 1;\n                    }\n                }\n            }\n        }\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode._ht) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode._ht = true;\n                aNode.Clazz = TextNode;\n                recordHotspotData(aNode.textExpr);\n            }\n            else {\n                aNode._ht = true;\n                aNode._i = 0; // hotspot: instance count\n                aNode._dp = []; // hotspot: dynamic props\n                aNode._xp = []; // hotspot: x props\n                aNode._pi = {}; // hotspot: props index\n                aNode._b = []; // hotspot: binds\n                aNode._ce = !aNode.directives.is // cache element\n                    && aNode.tagName && aNode.tagName.indexOf('-') < 0\n                    && !/^(template|select|input|option|button|video|audio|canvas|img|embed|object|iframe)$/i.test(aNode.tagName);\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(varItem.expr);\n                });\n\n                var props = aNode.props;\n                var propsLen = props.length;\n\n                for (var i = 0; i < propsLen; i++) {\n                    var prop = props[i];\n                    aNode._b.push({\n                        name: kebab2camel(prop.name),\n                        expr: prop.noValue != null\n                            ? {type: 3, value: true}\n                            : prop.expr,\n                        x: prop.x,\n                        noValue: prop.noValue\n                    });\n                    recordHotspotData(prop.expr);\n                }\n\n                for (var key in aNode.directives) {\n                    /* istanbul ignore else  */\n                    if (aNode.directives.hasOwnProperty(key)) {\n                        var directive = aNode.directives[key];\n                        recordHotspotData(\n                            directive.value,\n                            !/^(html|bind)$/.test(key)\n                        );\n\n                        // init trackBy getKey function\n                        if (key === 'for') {\n                            var trackBy = directive.trackBy;\n                            if (trackBy\n                                && trackBy.type === 4\n                                && trackBy.paths[0].value === directive.item\n                            ) {\n                                aNode._gfk = new Function( // hotspot: getForKey\n                                    directive.item,\n                                    'return ' + directive.trackByRaw\n                                );\n                            }\n                        }\n                    }\n                }\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                for (var i = 0, l = aNode.children.length; i < l; i++) {\n                    analyseANodeHotspot(aNode.children[i]);\n                }\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                for (var i = 0; i < propsLen; i++) {\n                    var prop = props[i];\n                    aNode._pi[prop.name] = i;\n                    prop.handler = getPropHandler(aNode.tagName, prop.name);\n\n                    if (prop.expr.value == null) {\n                        if (prop.x) {\n                            aNode._xp.push(prop);\n                        }\n                        aNode._dp.push(prop);\n                    }\n                }\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr,\n                        handler: getPropHandler(aNode.tagName, 'value')\n                    };\n                    aNode.props.push(valueProp);\n                    aNode._dp.push(valueProp);\n                    aNode._pi.value = props.length - 1;\n                }\n\n                if (aNode.directives['if']) { // eslint-disable-line dot-notation\n                    aNode.ifRinsed = {\n                        children: aNode.children,\n                        props: props,\n                        events: aNode.events,\n                        tagName: aNode.tagName,\n                        vars: aNode.vars,\n                        directives: aNode.directives,\n                        _ht: true,\n                        _i: 0,\n                        _d: aNode._d,\n                        _dp: aNode._dp,\n                        _xp: aNode._xp,\n                        _pi: aNode._pi,\n                        _b: aNode._b,\n                        _ce: aNode._ce\n                    };\n                    aNode.hasRootNode = true;\n                    aNode.Clazz = IfNode;\n                    aNode = aNode.ifRinsed;\n                }\n\n                if (aNode.directives['for']) { // eslint-disable-line dot-notation\n                    aNode.forRinsed = {\n                        children: aNode.children,\n                        props: props,\n                        events: aNode.events,\n                        tagName: aNode.tagName,\n                        vars: aNode.vars,\n                        directives: aNode.directives,\n                        _ht: true,\n                        _i: 0,\n                        _d: aNode._d,\n                        _dp: aNode._dp,\n                        _xp: aNode._xp,\n                        _pi: aNode._pi,\n                        _b: aNode._b,\n                        _ce: aNode._ce\n                    };\n                    aNode.hasRootNode = true;\n                    aNode.Clazz = ForNode;\n                    aNode = aNode.forRinsed;\n                }\n\n                if (aNode.directives.is) {\n                    aNode.isRinsed = {\n                        children: aNode.children,\n                        props: props,\n                        events: aNode.events,\n                        tagName: aNode.tagName,\n                        vars: aNode.vars,\n                        directives: aNode.directives,\n                        _ht: true,\n                        _i: 0,\n                        _d: aNode._d,\n                        _dp: aNode._dp,\n                        _xp: aNode._xp,\n                        _pi: aNode._pi,\n                        _b: aNode._b,\n                        _ce: aNode._ce\n                    };\n                    aNode.hasRootNode = true;\n                    aNode.Clazz = IsNode;\n                    aNode = aNode.isRinsed;\n                }\n\n                switch (aNode.tagName) {\n                    case 'slot':\n                        aNode.Clazz = SlotNode;\n                        break;\n\n                    case 'template':\n                    case 'fragment':\n                        aNode.hasRootNode = true;\n                        aNode.Clazz = TemplateNode;\n                        break;\n\n                    default:\n                        if (!aNode.directives.is && hotTags[aNode.tagName]) {\n                            if (!componentInstance || !componentInstance.components[aNode.tagName]) {\n                                aNode.elem = true;\n                            }\n\n                            // #[begin] error\n                            if (componentInstance && componentInstance.components[aNode.tagName]) {\n                                warn('\\`' + aNode.tagName + '\\` as sub-component tag is a bad practice.');\n                            }\n                            // #[end]\n                        }\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    if (aNode) {\n        analyseANodeHotspot(aNode);\n    }\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr, accessorMeanDynamic) {\n    var refs = [];\n    var isDynamic;\n\n    function analyseExprs(exprs, accessorMeanDynamic) {\n        for (var i = 0, l = exprs.length; i < l; i++) {\n            refs = refs.concat(analyseExprDataHotspot(exprs[i], accessorMeanDynamic));\n            isDynamic = isDynamic || exprs[i].dynamic;\n        }\n    }\n\n    switch (expr.type) {\n        case 4:\n            isDynamic = accessorMeanDynamic;\n\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1), 1);\n            break;\n\n        case 9:\n            refs = analyseExprDataHotspot(expr.expr, accessorMeanDynamic);\n            isDynamic = expr.expr.dynamic;\n            break;\n\n        case 7:\n        case 8:\n        case 10:\n            analyseExprs(expr.segs, accessorMeanDynamic);\n            break;\n\n        case 5:\n            refs = analyseExprDataHotspot(expr.expr);\n            isDynamic = expr.expr.dynamic;\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n        case 6:\n            analyseExprs(expr.name.paths);\n            analyseExprs(expr.args);\n            break;\n\n        case 12:\n        case 11:\n            for (var i = 0; i < expr.items.length; i++) {\n                refs = refs.concat(analyseExprDataHotspot(expr.items[i].expr));\n                isDynamic = isDynamic || expr.items[i].expr.dynamic;\n            }\n            break;\n    }\n\n    isDynamic && (expr.dynamic = true);\n    return refs;\n}\n\n// exports = module.exports = preheatANode;\n\n\n/**\n * Copyright (c) Baidu Inc. All rights reserved.\n *\n * This source code is licensed under the MIT license.\n * See LICENSE file in the project root for license information.\n *\n * @file 创建组件Loader\n */\n\n// var ComponentLoader = require('./component-loader');\n\n/**\n * 创建组件Loader\n *\n * @param {Object|Function} options 创建组件Loader的参数。为Object时参考下方描述，为Function时代表load方法。\n * @param {Function} options.load load方法\n * @param {Function=} options.placeholder loading过程中渲染的占位组件\n * @param {Function=} options.fallback load失败时渲染的组件\n * @return {ComponentLoader}\n */\nfunction createComponentLoader(options) {\n    var placeholder = options.placeholder;\n    var fallback = options.fallback;\n    var load = typeof options === 'function' ? options : options.load;\n\n    return new ComponentLoader(load, placeholder, fallback);\n}\n\n// exports = module.exports = createComponentLoader;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var unpackANode = require('./parser/unpack-anode');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var parseComponentTemplate = require('./view/parse-component-template');\n//     var defineComponent = require('./view/define-component');\n//     var createComponentLoader = require('./view/create-component-loader');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.10.10',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 创建组件Loader\n         *\n         * @param {Object|Function} options 创建组件Loader的参数。为Object时参考下方描述，为Function时代表load方法。\n         * @param {Function} options.load load方法\n         * @param {Function=} options.placeholder loading过程中渲染的占位组件\n         * @param {Function=} options.fallback load失败时渲染的组件\n         * @return {ComponentLoader}\n         */\n        createComponentLoader: createComponentLoader,\n\n        /**\n         * 解析组件 template\n         *\n         * @param {Function} ComponentClass 组件类\n         * @return {ANode}\n         */\n        parseComponentTemplate: parseComponentTemplate,\n\n        /**\n         * 解压缩 ANode\n         *\n         * @param {Array} source ANode 压缩数据\n         * @return {Object}\n         */\n        unpackANode: unpackANode,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n//@ sourceMappingURL=san.dev.js.map",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// Module\nvar code = \"\\n  <div style=\\\"display: inline-flex;\\\">\\n    <button s-ref=\\\"myBtn\\\" class=\\\"px-12 py-5 bw-2 br-5 text-white weight {{ status | tailwindcss }}\\\" on-mousedown=\\\"mouseHandler\\\" on-mouseup=\\\"mouseHandler\\\">\\n      <my-icon type=\\\"{{ isDisabled ? 1 : 0 }}\\\"></my-icon>\\n      <span>{{ text }}</span>\\n    </button>\\n  </div>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"\\n  <span>{{ icon[type] }}</span>\\n\";\n// Exports\nexport default code;","\n        import normalize from \"../node_modules/.pnpm/san-loader@0.3.1_webpack@5.53.0/node_modules/san-loader/lib/runtime/normalize.js\";\n        var injectStyles = [];\n\n        import template from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Button.san?lang=html&san=&type=template';\n        \n        import script from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Button.san?lang=js&san=&type=script';\n        export * from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Button.san?lang=js&san=&type=script';\n    \n        export default normalize(script, template, injectStyles);\n        /* san-hmr component */\n    ","\n        import normalize from \"../node_modules/.pnpm/san-loader@0.3.1_webpack@5.53.0/node_modules/san-loader/lib/runtime/normalize.js\";\n        var injectStyles = [];\n\n        import template from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Icon.san?lang=html&san=&type=template';\n        \n        import script from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Icon.san?lang=js&san=&type=script';\n        export * from '/home/runner/work/atomic-class/atomic-class/san/playground/src/Icon.san?lang=js&san=&type=script';\n    \n        export default normalize(script, template, injectStyles);\n        /* san-hmr component */\n    ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { default as Button } from './Button.san';\n"],"names":["options","status","states","indexOf","event","keyCode","keycode","type","setState","unsetState","Status","props","this","prototype","setProps","stateProps","setStates","newStates","newState","_this","overlap","push","filter","state","unshift","existedState","item","__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","slice","call","concat","map","_a","classes","join","rs","forEach","c","split","className","pop","shift","part","key","merged","Object","assign","apply","keys","defineComponent","require","module","exports","script","template","injectStyles","dfns","componentDefinitions","aPack","aNode","injectStylesIntoInitData","proto","style","objectAssign","original","initData","$style","cmpt","constructor","target","undefined","TypeError","index","nextSource","nextKey","hasOwnProperty","process","env","NODE_ENV","default","Button"],"sourceRoot":""}